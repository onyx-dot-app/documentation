{
    "openapi": "3.1.0",
    "info": {
        "title": "Onyx Backend",
        "version": "v1.2.1-cloud.2"
    },
    "servers": [
        {
            "url": "https://cloud.onyx.app/api",
            "description": "Onyx Cloud API"
        }
    ],
    "paths": {
        "/password/change-password": {
            "post": {
                "summary": "Change My Password",
                "description": "Change the password for the current user.",
                "operationId": "change_my_password",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/reset_password": {
            "post": {
                "summary": "Admin Reset User Password",
                "description": "Reset the password for a user (admin only).",
                "operationId": "admin_reset_user_password",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResetResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/get-user-chat-sessions": {
            "get": {
                "summary": "Get User Chat Sessions",
                "operationId": "get_user_chat_sessions",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatSessionsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/update-chat-session-temperature": {
            "put": {
                "summary": "Update Chat Session Temperature",
                "operationId": "update_chat_session_temperature",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateChatSessionTemperatureRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/update-chat-session-model": {
            "put": {
                "summary": "Update Chat Session Model",
                "operationId": "update_chat_session_model",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateChatSessionThreadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/get-chat-session/{session_id}": {
            "get": {
                "summary": "Get Chat Session Data by ID",
                "operationId": "get_chat_session",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Session Id"
                        }
                    },
                    {
                        "name": "is_shared",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Is Shared"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Include Deleted"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatSessionDetailResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/create-chat-session": {
            "post": {
                "summary": "Create New Chat Session",
                "operationId": "create_new_chat_session",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatSessionCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateChatSessionID"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/rename-chat-session": {
            "put": {
                "summary": "Rename Chat Session",
                "operationId": "rename_chat_session",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatRenameRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RenameChatSessionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/chat-session/{session_id}": {
            "patch": {
                "summary": "Patch Chat Session",
                "operationId": "patch_chat_session",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Session Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatSessionUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/delete-all-chat-sessions": {
            "delete": {
                "summary": "Delete All Chat Sessions",
                "operationId": "delete_all_chat_sessions",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/delete-chat-session/{session_id}": {
            "delete": {
                "summary": "Delete Chat Session By Id",
                "operationId": "delete_chat_session_by_id",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Session Id"
                        }
                    },
                    {
                        "name": "hard_delete",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Hard Delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/send-message": {
            "post": {
                "summary": "Handle New Chat Message",
                "description": "This endpoint is both used for all the following purposes:\n- Sending a new message in the session\n- Regenerating a message in the session (just send the same one again)\n- Editing a message (similar to regenerating but sending a different message)\n- Kicking off a seeded chat session (set `use_existing_user_message`)\n\nAssumes that previous messages have been set as the latest to minimize overhead.\n\nArgs:\n    chat_message_req (CreateChatMessageRequest): Details about the new chat message.\n    request (Request): The current HTTP request context.\n    user (User | None): The current user, obtained via dependency injection.\n    _ (None): Rate limit check is run if user/group/global rate limits are enabled.\n    is_connected_func (Callable[[], bool]): Function to check client disconnection,\n        used to stop the streaming response if the client disconnects.\n\nReturns:\n    StreamingResponse: Streams the response to the new chat message.",
                "operationId": "handle_new_chat_message",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateChatMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/set-message-as-latest": {
            "put": {
                "summary": "Set Message As Latest",
                "operationId": "set_message_as_latest",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatMessageIdentifier"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/create-chat-message-feedback": {
            "post": {
                "summary": "Create Chat Feedback",
                "operationId": "create_chat_feedback",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatFeedbackRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/document-search-feedback": {
            "post": {
                "summary": "Create Search Feedback",
                "description": "This endpoint isn't protected - it does not check if the user has access to the document\nUsers could try changing boosts of arbitrary docs but this does not leak any data.",
                "operationId": "create_search_feedback",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchFeedbackRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/max-selected-document-tokens": {
            "get": {
                "summary": "Get Max Document Tokens",
                "operationId": "get_max_document_tokens",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaxSelectedDocumentTokens"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/seed-chat-session": {
            "post": {
                "summary": "Seed Chat",
                "operationId": "seed_chat",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatSeedRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatSeedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/seed-chat-session-from-slack": {
            "post": {
                "summary": "Seed Chat From Slack",
                "operationId": "seed_chat_from_slack",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeedChatFromSlackRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeedChatFromSlackResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/file": {
            "post": {
                "summary": "Upload Files For Chat",
                "operationId": "upload_files_for_chat",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_files_for_chat_chat_file_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/FileDescriptor"
                                        }
                                    },
                                    "title": "Response Upload Files For Chat Chat File Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/file/{file_id}": {
            "get": {
                "summary": "Fetch Chat File",
                "operationId": "fetch_chat_file",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/search": {
            "get": {
                "summary": "Search Chats",
                "description": "Search for chat sessions based on the provided query.\nIf no query is provided, returns recent chat sessions.",
                "operationId": "search_chats",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Query"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatSearchResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query/valid-tags": {
            "get": {
                "summary": "Get Tags",
                "operationId": "get_tags",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "match_pattern",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Match Pattern"
                        }
                    },
                    {
                        "name": "allow_prefix",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Allow Prefix"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "title": "Limit"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/DocumentSource"
                                        }
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Sources"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query/user-searches": {
            "get": {
                "summary": "Get User Search Sessions",
                "operationId": "get_user_search_sessions",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatSessionsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query/search-session/{session_id}": {
            "get": {
                "summary": "Get Search Session",
                "operationId": "get_search_session",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Session Id"
                        }
                    },
                    {
                        "name": "is_shared",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Is Shared"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchSessionDetailResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/document/document-size-info": {
            "get": {
                "summary": "Get Document Info",
                "operationId": "get_document_info",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Document Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/document/chunk-info": {
            "get": {
                "summary": "Get Chunk Info",
                "operationId": "get_chunk_info",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Document Id"
                        }
                    },
                    {
                        "name": "chunk_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Chunk Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChunkInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/set-user-role": {
            "patch": {
                "summary": "Set User Role",
                "operationId": "set_user_role",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRoleUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/users/test-upsert-user": {
            "post": {
                "summary": "Test Upsert User",
                "description": "Test endpoint for upsert_saml_user. Only used for integration testing.",
                "operationId": "test_upsert_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestUpsertRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/FullUserSnapshot"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Test Upsert User Manage Users Test Upsert User Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/users/accepted": {
            "get": {
                "summary": "List Accepted Users",
                "operationId": "list_accepted_users",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Q"
                        }
                    },
                    {
                        "name": "page_num",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Page Num"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/UserRole"
                            },
                            "default": [],
                            "title": "Roles"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Is Active"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedReturn_FullUserSnapshot_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/users/invited": {
            "get": {
                "summary": "List Invited Users",
                "operationId": "list_invited_users",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InvitedUserSnapshot"
                                    },
                                    "title": "Response List Invited Users Manage Users Invited Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/users": {
            "get": {
                "summary": "List All Users",
                "operationId": "list_all_users",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Q"
                        }
                    },
                    {
                        "name": "accepted_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Accepted Page"
                        }
                    },
                    {
                        "name": "slack_users_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Slack Users Page"
                        }
                    },
                    {
                        "name": "invited_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Invited Page"
                        }
                    },
                    {
                        "name": "include_api_keys",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Include Api Keys"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllUsersResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/users": {
            "put": {
                "summary": "Bulk Invite Users",
                "description": "emails are string validated. If any email fails validation, no emails are\ninvited and an exception is raised.",
                "operationId": "bulk_invite_users",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_bulk_invite_users_manage_admin_users_put"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "title": "Response Bulk Invite Users Manage Admin Users Put"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/remove-invited-user": {
            "patch": {
                "summary": "Remove Invited User",
                "operationId": "remove_invited_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserByEmail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "title": "Response Remove Invited User Manage Admin Remove Invited User Patch"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/deactivate-user": {
            "patch": {
                "summary": "Deactivate User",
                "operationId": "deactivate_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserByEmail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/delete-user": {
            "delete": {
                "summary": "Delete User",
                "operationId": "delete_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserByEmail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/activate-user": {
            "patch": {
                "summary": "Activate User",
                "operationId": "activate_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserByEmail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/valid-domains": {
            "get": {
                "summary": "Get Valid Domains",
                "operationId": "get_valid_domains",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Response Get Valid Domains Manage Admin Valid Domains Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "List All Users Basic Info",
                "operationId": "list_all_users_basic_info",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MinimalUserSnapshot"
                                    },
                                    "title": "Response List All Users Basic Info Users Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get-user-role": {
            "get": {
                "summary": "Get User Role",
                "operationId": "get_user_role",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRoleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "summary": "Verify User Logged In",
                "operationId": "verify_user_logged_in",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/temperature-override-enabled": {
            "patch": {
                "summary": "Update User Temperature Override Enabled",
                "operationId": "update_user_temperature_override_enabled",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "temperature_override_enabled",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean",
                            "title": "Temperature Override Enabled"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shortcut-enabled": {
            "patch": {
                "summary": "Update User Shortcut Enabled",
                "operationId": "update_user_shortcut_enabled",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "shortcut_enabled",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean",
                            "title": "Shortcut Enabled"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auto-scroll": {
            "patch": {
                "summary": "Update User Auto Scroll",
                "operationId": "update_user_auto_scroll",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoScrollRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/default-model": {
            "patch": {
                "summary": "Update User Default Model",
                "operationId": "update_user_default_model",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChosenDefaultModelRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/pinned-assistants": {
            "patch": {
                "summary": "Update User Pinned Assistants",
                "operationId": "update_user_pinned_assistants",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReorderPinnedAssistantsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/assistant-list/update/{assistant_id}": {
            "patch": {
                "summary": "Update User Assistant Visibility",
                "operationId": "update_user_assistant_visibility",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Assistant Id"
                        }
                    },
                    {
                        "name": "show",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean",
                            "title": "Show"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/search": {
            "post": {
                "summary": "Admin Search",
                "operationId": "admin_search",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminSearchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminSearchResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/doc-boosts": {
            "get": {
                "summary": "Get Most Boosted Docs",
                "operationId": "get_most_boosted_docs",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "ascending",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean",
                            "title": "Ascending"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BoostDoc"
                                    },
                                    "title": "Response Get Most Boosted Docs Manage Admin Doc Boosts Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Document Boost Update",
                "operationId": "document_boost_update",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BoostUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/doc-hidden": {
            "post": {
                "summary": "Document Hidden Update",
                "operationId": "document_hidden_update",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HiddenUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/genai-api-key/validate": {
            "get": {
                "summary": "Validate Existing Genai Api Key",
                "operationId": "validate_existing_genai_api_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/deletion-attempt": {
            "post": {
                "summary": "Create Deletion Attempt For Connector Id",
                "operationId": "create_deletion_attempt_for_connector_id",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectorCredentialPairIdentifier"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/gmail/app-credential": {
            "get": {
                "summary": "Check Google App Gmail Credentials Exist",
                "operationId": "check_google_app_gmail_credentials_exist",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Check Google App Gmail Credentials Exist Manage Admin Connector Gmail App Credential Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Upsert Google App Gmail Credentials",
                "operationId": "upsert_google_app_gmail_credentials",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleAppCredentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Google App Gmail Credentials",
                "operationId": "delete_google_app_gmail_credentials",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/google-drive/app-credential": {
            "get": {
                "summary": "Check Google App Credentials Exist",
                "operationId": "check_google_app_credentials_exist",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Check Google App Credentials Exist Manage Admin Connector Google Drive App Credential Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Upsert Google App Credentials",
                "operationId": "upsert_google_app_credentials",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleAppCredentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Google App Credentials",
                "operationId": "delete_google_app_credentials",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/gmail/service-account-key": {
            "get": {
                "summary": "Check Google Service Gmail Account Key Exist",
                "operationId": "check_google_service_gmail_account_key_exist",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Check Google Service Gmail Account Key Exist Manage Admin Connector Gmail Service Account Key Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Upsert Google Service Gmail Account Key",
                "operationId": "upsert_google_service_gmail_account_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleServiceAccountKey"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Google Service Gmail Account Key",
                "operationId": "delete_google_service_gmail_account_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/google-drive/service-account-key": {
            "get": {
                "summary": "Check Google Service Account Key Exist",
                "operationId": "check_google_service_account_key_exist",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Check Google Service Account Key Exist Manage Admin Connector Google Drive Service Account Key Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Upsert Google Service Account Key",
                "operationId": "upsert_google_service_account_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleServiceAccountKey"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Google Service Account Key",
                "operationId": "delete_google_service_account_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/google-drive/service-account-credential": {
            "put": {
                "summary": "Upsert Service Account Credential",
                "description": "Special API which allows the creation of a credential for a service account.\nCombines the input with the saved service account key to create an entry in the\n`Credential` table.",
                "operationId": "upsert_service_account_credential",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleServiceAccountCredentialRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectCreationIdResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/gmail/service-account-credential": {
            "put": {
                "summary": "Upsert Gmail Service Account Credential",
                "description": "Special API which allows the creation of a credential for a service account.\nCombines the input with the saved service account key to create an entry in the\n`Credential` table.",
                "operationId": "upsert_gmail_service_account_credential",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleServiceAccountCredentialRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectCreationIdResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/google-drive/check-auth/{credential_id}": {
            "get": {
                "summary": "Check Drive Tokens",
                "operationId": "check_drive_tokens",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthStatus"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/file/upload": {
            "post": {
                "summary": "Upload Files Api",
                "operationId": "upload_files_api",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_files_api_manage_admin_connector_file_upload_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector": {
            "get": {
                "summary": "Get Connectors By Credential",
                "description": "Get a list of connectors. Allow filtering by a specific credential id.",
                "operationId": "get_connectors_by_credential",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Credential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectorSnapshot"
                                    },
                                    "title": "Response Get Connectors By Credential Manage Admin Connector Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Connector From Model",
                "operationId": "create_connector_from_model",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectorUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectCreationIdResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/failed-indexing-status": {
            "get": {
                "summary": "Get Currently Failed Indexing Status",
                "operationId": "get_currently_failed_indexing_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "secondary_index",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Secondary Index"
                        }
                    },
                    {
                        "name": "get_editable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, return editable document sets",
                            "default": false,
                            "title": "Get Editable"
                        },
                        "description": "If true, return editable document sets"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FailedConnectorIndexingStatus"
                                    },
                                    "title": "Response Get Currently Failed Indexing Status Manage Admin Connector Failed Indexing Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/status": {
            "get": {
                "summary": "Get Connector Status",
                "operationId": "get_connector_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectorStatus"
                                    },
                                    "title": "Response Get Connector Status Manage Admin Connector Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/indexing-status": {
            "get": {
                "summary": "Get Connector Indexing Status",
                "operationId": "get_connector_indexing_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "secondary_index",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Secondary Index"
                        }
                    },
                    {
                        "name": "get_editable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, return editable document sets",
                            "default": false,
                            "title": "Get Editable"
                        },
                        "description": "If true, return editable document sets"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectorIndexingStatus"
                                    },
                                    "title": "Response Get Connector Indexing Status Manage Admin Connector Indexing Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector-with-mock-credential": {
            "post": {
                "summary": "Create Connector With Mock Credential",
                "operationId": "create_connector_with_mock_credential",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectorUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/{connector_id}": {
            "patch": {
                "summary": "Update Connector From Model",
                "operationId": "update_connector_from_model",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Connector Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectorUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ConnectorSnapshot"
                                        },
                                        {
                                            "$ref": "#/components/schemas/StatusResponse_int_"
                                        }
                                    ],
                                    "title": "Response Update Connector From Model Manage Admin Connector  Connector Id  Patch"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Connector By Id",
                "operationId": "delete_connector_by_id",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Connector Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_int_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/connector/run-once": {
            "post": {
                "summary": "Connector Run Once",
                "description": "Used to trigger indexing on a set of cc_pairs associated with a\nsingle connector.",
                "operationId": "connector_run_once",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunConnectorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_int_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector/gmail/authorize/{credential_id}": {
            "get": {
                "summary": "Gmail Auth",
                "operationId": "gmail_auth",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthUrl"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector/google-drive/authorize/{credential_id}": {
            "get": {
                "summary": "Google Drive Auth",
                "operationId": "google_drive_auth",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthUrl"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector/gmail/callback": {
            "get": {
                "summary": "Gmail Callback",
                "operationId": "gmail_callback",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "State"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector/google-drive/callback": {
            "get": {
                "summary": "Google Drive Callback",
                "operationId": "google_drive_callback",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "State"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector": {
            "get": {
                "summary": "Get Connectors",
                "operationId": "get_connectors",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectorSnapshot"
                                    },
                                    "title": "Response Get Connectors Manage Connector Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector/{connector_id}": {
            "get": {
                "summary": "Get Connector By Id",
                "operationId": "get_connector_by_id",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Connector Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/ConnectorSnapshot"
                                        },
                                        {
                                            "$ref": "#/components/schemas/StatusResponse_int_"
                                        }
                                    ],
                                    "title": "Response Get Connector By Id Manage Connector  Connector Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector-status": {
            "get": {
                "summary": "Get Basic Connector Indexing Status",
                "operationId": "get_basic_connector_indexing_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BasicCCPairInfo"
                                    },
                                    "title": "Response Get Basic Connector Indexing Status Manage Connector Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/credential": {
            "get": {
                "summary": "List Credentials Admin",
                "description": "Lists all public credentials",
                "operationId": "list_credentials_admin",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CredentialSnapshot"
                                    },
                                    "title": "Response List Credentials Admin Manage Admin Credential Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/similar-credentials/{source_type}": {
            "get": {
                "summary": "Get Cc Source Full Info",
                "operationId": "get_cc_source_full_info",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "source_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DocumentSource"
                        }
                    },
                    {
                        "name": "get_editable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, return editable credentials",
                            "default": false,
                            "title": "Get Editable"
                        },
                        "description": "If true, return editable credentials"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CredentialSnapshot"
                                    },
                                    "title": "Response Get Cc Source Full Info Manage Admin Similar Credentials  Source Type  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/credential/{credential_id}": {
            "delete": {
                "summary": "Delete Credential By Id Admin",
                "description": "Same as the user endpoint, but can delete any credential (not just the user's own)",
                "operationId": "delete_credential_by_id_admin",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Credential Data",
                "operationId": "update_credential_data",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CredentialDataUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CredentialBase"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/credential/swap": {
            "put": {
                "summary": "Swap Credentials For Connector",
                "operationId": "swap_credentials_for_connector",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CredentialSwapRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/credential": {
            "post": {
                "summary": "Create Credential From Model",
                "operationId": "create_credential_from_model",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CredentialBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectCreationIdResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Credentials",
                "operationId": "list_credentials",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CredentialSnapshot"
                                    },
                                    "title": "Response List Credentials Manage Credential Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/credential/{credential_id}": {
            "get": {
                "summary": "Get Credential By Id",
                "operationId": "get_credential_by_id",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/CredentialSnapshot"
                                        },
                                        {
                                            "$ref": "#/components/schemas/StatusResponse_int_"
                                        }
                                    ],
                                    "title": "Response Get Credential By Id Manage Credential  Credential Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Credential From Model",
                "operationId": "update_credential_from_model",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CredentialBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/CredentialSnapshot"
                                        },
                                        {
                                            "$ref": "#/components/schemas/StatusResponse_int_"
                                        }
                                    ],
                                    "title": "Response Update Credential From Model Manage Credential  Credential Id  Patch"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Credential By Id",
                "operationId": "delete_credential_by_id",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/credential/force/{credential_id}": {
            "delete": {
                "summary": "Force Delete Credential By Id",
                "operationId": "force_delete_credential_by_id",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/input_prompt": {
            "get": {
                "summary": "List Input Prompts",
                "operationId": "list_input_prompts",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "include_public",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Include Public"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InputPromptSnapshot"
                                    },
                                    "title": "Response List Input Prompts Input Prompt Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Input Prompt",
                "operationId": "create_input_prompt",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateInputPromptRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputPromptSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/input_prompt/{input_prompt_id}": {
            "get": {
                "summary": "Get Input Prompt",
                "operationId": "get_input_prompt",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "input_prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Input Prompt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputPromptSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Patch Input Prompt",
                "operationId": "patch_input_prompt",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "input_prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Input Prompt Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateInputPromptRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputPromptSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Input Prompt",
                "operationId": "delete_input_prompt",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "input_prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Input Prompt Id"
                        }
                    },
                    {
                        "name": "delete_public",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Delete Public"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/input_prompt/{input_prompt_id}/hide": {
            "post": {
                "summary": "Hide Input Prompt For User",
                "description": "Endpoint that marks a seed (or any) prompt as disabled for the current user,\nso it won't show up in their subsequent queries.",
                "operationId": "hide_input_prompt_for_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "input_prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Input Prompt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/input_prompt/{input_prompt_id}": {
            "delete": {
                "summary": "Delete Public Input Prompt",
                "operationId": "delete_public_input_prompt",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "input_prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Input Prompt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/index-attempts": {
            "get": {
                "summary": "Get Cc Pair Index Attempts",
                "operationId": "get_cc_pair_index_attempts",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    },
                    {
                        "name": "page_num",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Page Num"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedReturn_IndexAttemptSnapshot_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}": {
            "get": {
                "summary": "Get Cc Pair Full Info",
                "operationId": "get_cc_pair_full_info",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CCPairFullInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/status": {
            "put": {
                "summary": "Update Cc Pair Status",
                "description": "This method returns nearly immediately. It simply sets some signals and\noptimistically assumes any running background processes will clean themselves up.\nThis is done to improve the perceived end user experience.\n\nReturns HTTPStatus.OK if everything finished.",
                "operationId": "update_cc_pair_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CCStatusUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/name": {
            "put": {
                "summary": "Update Cc Pair Name",
                "operationId": "update_cc_pair_name",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    },
                    {
                        "name": "new_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "New Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_int_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/property": {
            "put": {
                "summary": "Update Cc Pair Property",
                "operationId": "update_cc_pair_property",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CCPropertyUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_int_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/last_pruned": {
            "get": {
                "summary": "Get Cc Pair Last Pruned",
                "operationId": "get_cc_pair_last_pruned",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Cc Pair Last Pruned Manage Admin Cc Pair  Cc Pair Id  Last Pruned Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/prune": {
            "post": {
                "summary": "Prune Cc Pair",
                "description": "Triggers pruning on a particular cc_pair immediately",
                "operationId": "prune_cc_pair",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_list_int__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/get-docs-sync-status": {
            "get": {
                "summary": "Get Docs Sync Status",
                "operationId": "get_docs_sync_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentSyncStatus"
                                    },
                                    "title": "Response Get Docs Sync Status Manage Admin Cc Pair  Cc Pair Id  Get Docs Sync Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/errors": {
            "get": {
                "summary": "Get Cc Pair Indexing Errors",
                "description": "Gives back all errors for a given CC Pair. Allows pagination based on page and page_size params.\n\nArgs:\n    cc_pair_id: ID of the connector-credential pair to get errors for\n    include_resolved: Whether to include resolved errors in the results\n    page_num: Page number for pagination, starting at 0\n    page_size: Number of errors to return per page\n    _: Current user, must be curator or admin\n    db_session: Database session\n\nReturns:\n    Paginated list of indexing errors for the CC pair.",
                "operationId": "get_cc_pair_indexing_errors",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    },
                    {
                        "name": "include_resolved",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Include Resolved"
                        }
                    },
                    {
                        "name": "page_num",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Page Num"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedReturn_IndexAttemptErrorPydantic_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector/{connector_id}/credential/{credential_id}": {
            "put": {
                "summary": "Associate Credential To Connector",
                "description": "",
                "operationId": "associate_credential_to_connector",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Connector Id"
                        }
                    },
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectorCredentialPairMetadata"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_int_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Dissociate Credential From Connector",
                "operationId": "dissociate_credential_from_connector",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Connector Id"
                        }
                    },
                    {
                        "name": "credential_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_int_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/folder": {
            "post": {
                "summary": "Create Folder",
                "operationId": "create_folder",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/onyx__server__user_documents__api__FolderCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/onyx__server__user_documents__models__UserFolderSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "User Get Folders",
                "operationId": "user_get_folders",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/onyx__server__user_documents__models__UserFolderSnapshot"
                                    },
                                    "title": "Response User Get Folders User Folder Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/folder/{folder_id}": {
            "get": {
                "summary": "Get Folder",
                "operationId": "get_folder",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Folder Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/onyx__server__user_documents__models__UserFolderSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Folder",
                "operationId": "update_folder",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Folder Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/onyx__server__user_documents__api__FolderUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/onyx__server__user_documents__models__UserFolderSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Folder",
                "operationId": "delete_folder",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Folder Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/upload": {
            "post": {
                "summary": "Upload User Files",
                "operationId": "upload_user_files",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_user_files_user_file_upload_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserFileSnapshot"
                                    },
                                    "title": "Response Upload User Files User File Upload Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/{file_id}": {
            "delete": {
                "summary": "Delete File",
                "operationId": "delete_file",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/{file_id}/move": {
            "put": {
                "summary": "Move File",
                "operationId": "move_file",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "File Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileMoveRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFileSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file-system": {
            "get": {
                "summary": "Get File System",
                "operationId": "get_file_system",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/onyx__server__user_documents__models__UserFolderSnapshot"
                                    },
                                    "title": "Response Get File System User File System Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/{file_id}/rename": {
            "put": {
                "summary": "Rename File",
                "operationId": "rename_file",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "File Id"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFileSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/{file_id}/share": {
            "post": {
                "summary": "Share File",
                "operationId": "share_file",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "File Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShareRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/{file_id}/unshare": {
            "post": {
                "summary": "Unshare File",
                "operationId": "unshare_file",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "File Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShareRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/folder/{folder_id}/share": {
            "post": {
                "summary": "Share Folder",
                "operationId": "share_folder",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Folder Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShareRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/folder/{folder_id}/unshare": {
            "post": {
                "summary": "Unshare Folder",
                "operationId": "unshare_folder",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Folder Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShareRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/create-from-link": {
            "post": {
                "summary": "Create File From Link",
                "operationId": "create_file_from_link",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFileFromLinkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserFileSnapshot"
                                    },
                                    "title": "Response Create File From Link User File Create From Link Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/indexing-status": {
            "get": {
                "summary": "Get Files Indexing Status",
                "description": "Get indexing status for multiple files",
                "operationId": "get_files_indexing_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "title": "File Ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "boolean"
                                    },
                                    "title": "Response Get Files Indexing Status User File Indexing Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/token-estimate": {
            "get": {
                "summary": "Get Files Token Estimate",
                "description": "Get token estimate for files and folders",
                "operationId": "get_files_token_estimate",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "default": [],
                            "title": "File Ids"
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "default": [],
                            "title": "Folder Ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Get Files Token Estimate User File Token Estimate Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/reindex": {
            "post": {
                "summary": "Reindex File",
                "operationId": "reindex_file",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReindexFileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/file/bulk-cleanup": {
            "post": {
                "summary": "Bulk Cleanup Files",
                "description": "Bulk delete files older than specified days in a folder",
                "operationId": "bulk_cleanup_files",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCleanupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/folder": {
            "get": {
                "summary": "Get Folders",
                "operationId": "get_folders",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserFoldersResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Folder Endpoint",
                "operationId": "create_folder_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/onyx__server__features__folder__models__FolderCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "title": "Response Create Folder Endpoint Folder Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/folder/reorder": {
            "put": {
                "summary": "Put Folder Display Priority",
                "operationId": "put_folder_display_priority",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPriorityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/folder/{folder_id}": {
            "patch": {
                "summary": "Patch Folder Endpoint",
                "operationId": "patch_folder_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the folder to rename",
                            "title": "Folder Id"
                        },
                        "description": "The ID of the folder to rename"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/onyx__server__features__folder__models__FolderUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Folder Endpoint",
                "operationId": "delete_folder_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the folder to delete",
                            "title": "Folder Id"
                        },
                        "description": "The ID of the folder to delete"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteFolderOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/folder/{folder_id}/add-chat-session": {
            "post": {
                "summary": "Add Chat To Folder Endpoint",
                "operationId": "add_chat_to_folder_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the folder in which to add the chat session",
                            "title": "Folder Id"
                        },
                        "description": "The ID of the folder in which to add the chat session"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderChatSessionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/folder/{folder_id}/remove-chat-session/": {
            "post": {
                "summary": "Remove Chat From Folder Endpoint",
                "operationId": "remove_chat_from_folder_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "folder_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the folder from which to remove the chat session",
                            "title": "Folder Id"
                        },
                        "description": "The ID of the folder from which to remove the chat session"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderChatSessionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/document-set": {
            "post": {
                "summary": "Create Document Set",
                "operationId": "create_document_set",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentSetCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "title": "Response Create Document Set Manage Admin Document Set Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Patch Document Set",
                "operationId": "patch_document_set",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentSetUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/document-set/{document_set_id}": {
            "delete": {
                "summary": "Delete Document Set",
                "operationId": "delete_document_set",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "document_set_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Document Set Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/document-set": {
            "get": {
                "summary": "List Document Sets For User",
                "operationId": "list_document_sets_for_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "get_editable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, return editable document sets",
                            "default": false,
                            "title": "Get Editable"
                        },
                        "description": "If true, return editable document sets"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentSetSummary"
                                    },
                                    "title": "Response List Document Sets For User Manage Document Set Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/document-set-public": {
            "get": {
                "summary": "Document Set Public",
                "operationId": "document_set_public",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckDocSetPublicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckDocSetPublicResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/set-new-search-settings": {
            "post": {
                "summary": "Set New Search Settings",
                "description": "Creates a new EmbeddingModel row and cancels the previous secondary indexing if any\nGives an error if the same model name is used as the current or secondary index",
                "operationId": "set_new_search_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchSettingsCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdReturn"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/cancel-new-embedding": {
            "post": {
                "summary": "Cancel New Embedding",
                "operationId": "cancel_new_embedding",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/delete-search-settings": {
            "delete": {
                "summary": "Delete Search Settings Endpoint",
                "operationId": "delete_search_settings_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchSettingsDeleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/get-current-search-settings": {
            "get": {
                "summary": "Get Current Search Settings Endpoint",
                "operationId": "get_current_search_settings_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SavedSearchSettings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/get-secondary-search-settings": {
            "get": {
                "summary": "Get Secondary Search Settings Endpoint",
                "operationId": "get_secondary_search_settings_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/SavedSearchSettings"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Secondary Search Settings Endpoint Search Settings Get Secondary Search Settings Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/get-all-search-settings": {
            "get": {
                "summary": "Get All Search Settings",
                "operationId": "get_all_search_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FullModelVersionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/update-inference-settings": {
            "post": {
                "summary": "Update Saved Search Settings",
                "operationId": "update_saved_search_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SavedSearchSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/unstructured-api-key-set": {
            "get": {
                "summary": "Unstructured Api Key Set",
                "operationId": "unstructured_api_key_set",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Unstructured Api Key Set Search Settings Unstructured Api Key Set Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/upsert-unstructured-api-key": {
            "put": {
                "summary": "Upsert Unstructured Api Key",
                "operationId": "upsert_unstructured_api_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "unstructured_api_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Unstructured Api Key"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-settings/delete-unstructured-api-key": {
            "delete": {
                "summary": "Delete Unstructured Api Key Endpoint",
                "operationId": "delete_unstructured_api_key_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/slack-app/channel": {
            "post": {
                "summary": "Create Slack Channel Config",
                "operationId": "create_slack_channel_config",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackChannelConfigCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackChannelConfig"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Slack Channel Configs",
                "operationId": "list_slack_channel_configs",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackChannelConfig"
                                    },
                                    "title": "Response List Slack Channel Configs Manage Admin Slack App Channel Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/slack-app/channel/{slack_channel_config_id}": {
            "patch": {
                "summary": "Patch Slack Channel Config",
                "operationId": "patch_slack_channel_config",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "slack_channel_config_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Slack Channel Config Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackChannelConfigCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackChannelConfig"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Slack Channel Config",
                "operationId": "delete_slack_channel_config",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "slack_channel_config_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Slack Channel Config Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/slack-app/bots": {
            "post": {
                "summary": "Create Bot",
                "operationId": "create_bot",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackBotCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackBot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Bots",
                "operationId": "list_bots",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackBot"
                                    },
                                    "title": "Response List Bots Manage Admin Slack App Bots Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/slack-app/bots/{slack_bot_id}": {
            "patch": {
                "summary": "Patch Bot",
                "operationId": "patch_bot",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "slack_bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Slack Bot Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackBotCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackBot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Bot",
                "operationId": "delete_bot",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "slack_bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Slack Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Bot By Id",
                "operationId": "get_bot_by_id",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "slack_bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Slack Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackBot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/slack-app/bots/{bot_id}/config": {
            "get": {
                "summary": "List Bot Configs",
                "operationId": "list_bot_configs",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bot_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Bot Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackChannelConfig"
                                    },
                                    "title": "Response List Bot Configs Manage Admin Slack App Bots  Bot Id  Config Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persona/{persona_id}/public": {
            "patch": {
                "summary": "Patch User Persona Public Status",
                "operationId": "patch_user_persona_public_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IsPublicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persona": {
            "post": {
                "summary": "Create Persona",
                "operationId": "create_persona",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonaUpsertRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonaSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Personas",
                "operationId": "list_personas",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "include_deleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Include Deleted"
                        }
                    },
                    {
                        "name": "persona_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "title": "Persona Ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MinimalPersonaSnapshot"
                                    },
                                    "title": "Response List Personas Persona Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persona/{persona_id}": {
            "patch": {
                "summary": "Update Persona",
                "operationId": "update_persona",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonaUpsertRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonaSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Persona",
                "operationId": "delete_persona",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Persona",
                "operationId": "get_persona",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FullPersonaSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persona/labels": {
            "get": {
                "summary": "Get Labels",
                "operationId": "get_labels",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonaLabelResponse"
                                    },
                                    "title": "Response Get Labels Persona Labels Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Label",
                "description": "Create a new assistant label",
                "operationId": "create_label",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonaLabelCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonaLabelResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persona/{persona_id}/share": {
            "patch": {
                "summary": "Share Persona",
                "operationId": "share_persona",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonaShareRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persona/image-generation-tool": {
            "get": {
                "summary": "Get Image Generation Tool",
                "operationId": "get_image_generation_tool",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageGenerationToolStatus"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persona/assistant-prompt-refresh": {
            "post": {
                "summary": "Build Assistant Prompts",
                "operationId": "build_assistant_prompts",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateStarterMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StarterMessageModel"
                                    },
                                    "title": "Response Build Assistant Prompts Persona Assistant Prompt Refresh Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/persona/{persona_id}/visible": {
            "patch": {
                "summary": "Patch Persona Visibility",
                "operationId": "patch_persona_visibility",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IsVisibleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/persona/{persona_id}/default": {
            "patch": {
                "summary": "Patch Persona Default Status",
                "operationId": "patch_persona_default_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IsDefaultRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/persona/display-priority": {
            "put": {
                "summary": "Patch Persona Display Priority",
                "operationId": "patch_persona_display_priority",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPriorityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/persona": {
            "get": {
                "summary": "List Personas Admin",
                "operationId": "list_personas_admin",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "include_deleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Include Deleted"
                        }
                    },
                    {
                        "name": "get_editable",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, return editable personas",
                            "default": false,
                            "title": "Get Editable"
                        },
                        "description": "If true, return editable personas"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonaSnapshot"
                                    },
                                    "title": "Response List Personas Admin Admin Persona Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/persona/{persona_id}/undelete": {
            "patch": {
                "summary": "Undelete Persona",
                "operationId": "undelete_persona",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/persona/upload-image": {
            "post": {
                "summary": "Upload File",
                "operationId": "upload_file",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file_admin_persona_upload_image_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Upload File Admin Persona Upload Image Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/persona/label/{label_id}": {
            "patch": {
                "summary": "Patch Persona Label",
                "operationId": "patch_persona_label",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "label_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Label Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonaLabelPatchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Label",
                "operationId": "delete_label",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "label_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Label Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "summary": "Get Notifications Api",
                "operationId": "get_notifications_api",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    },
                                    "title": "Response Get Notifications Api Notifications Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{notification_id}/dismiss": {
            "post": {
                "summary": "Dismiss Notification Endpoint",
                "operationId": "dismiss_notification_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "notification_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Notification Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tool/{tool_id}": {
            "get": {
                "summary": "Get Custom Tool",
                "operationId": "get_custom_tool",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Tool Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tool": {
            "get": {
                "summary": "List Tools",
                "operationId": "list_tools",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ToolSnapshot"
                                    },
                                    "title": "Response List Tools Tool Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/tool/custom": {
            "post": {
                "summary": "Create Custom Tool",
                "operationId": "create_custom_tool",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomToolCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/tool/custom/{tool_id}": {
            "put": {
                "summary": "Update Custom Tool",
                "operationId": "update_custom_tool",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Tool Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomToolUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Custom Tool",
                "operationId": "delete_custom_tool",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tool_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Tool Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/tool/custom/validate": {
            "post": {
                "summary": "Validate Tool",
                "operationId": "validate_tool",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidateToolRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateToolResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Healthcheck",
                "operationId": "healthcheck",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/type": {
            "get": {
                "summary": "Get Auth Type",
                "operationId": "get_auth_type",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthTypeResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "summary": "Get Version",
                "operationId": "get_version",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/onyx-api/connector-docs/{cc_pair_id}": {
            "get": {
                "summary": "Get Docs By Connector Credential Pair",
                "operationId": "get_docs_by_connector_credential_pair",
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocMinimalInfo"
                                    },
                                    "title": "Response Get Docs By Connector Credential Pair Onyx Api Connector Docs  Cc Pair Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/onyx-api/ingestion": {
            "get": {
                "summary": "Get Ingestion Docs",
                "operationId": "get_ingestion_docs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DocMinimalInfo"
                                    },
                                    "title": "Response Get Ingestion Docs Onyx Api Ingestion Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Upsert Ingestion Doc",
                "operationId": "upsert_ingestion_doc",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngestionDocument"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngestionResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gpts/gpt-document-search": {
            "post": {
                "summary": "Gpt Search",
                "operationId": "gpt_search",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GptSearchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GptSearchResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "summary": "Fetch Settings",
                "description": "Settings and notifications are stuffed into this single endpoint to reduce number of\nPostgres calls",
                "operationId": "fetch_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSettings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/settings": {
            "put": {
                "summary": "Admin Put Settings",
                "operationId": "admin_put_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Settings"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/built-in/options": {
            "get": {
                "summary": "Fetch Llm Options",
                "operationId": "fetch_llm_options",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WellKnownLLMProviderDescriptor"
                                    },
                                    "title": "Response Fetch Llm Options Admin Llm Built In Options Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/test": {
            "post": {
                "summary": "Test Llm Configuration",
                "description": "Test regular llm and fast llm settings",
                "operationId": "test_llm_configuration",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestLLMRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/test/default": {
            "post": {
                "summary": "Test Default Provider",
                "operationId": "test_default_provider",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/provider": {
            "get": {
                "summary": "List Llm Providers",
                "operationId": "list_llm_providers",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LLMProviderView"
                                    },
                                    "title": "Response List Llm Providers Admin Llm Provider Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Llm Provider",
                "operationId": "put_llm_provider",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "is_creation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "True if updating an existing provider, False if creating a new one",
                            "default": false,
                            "title": "Is Creation"
                        },
                        "description": "True if updating an existing provider, False if creating a new one"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LLMProviderUpsertRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LLMProviderView"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/provider/{provider_id}": {
            "delete": {
                "summary": "Delete Llm Provider",
                "operationId": "delete_llm_provider",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Provider Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/provider/{provider_id}/default": {
            "post": {
                "summary": "Set Provider As Default",
                "operationId": "set_provider_as_default",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Provider Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/provider/{provider_id}/default-vision": {
            "post": {
                "summary": "Set Provider As Default Vision",
                "operationId": "set_provider_as_default_vision",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Provider Id"
                        }
                    },
                    {
                        "name": "vision_model",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "The default vision model to use",
                            "title": "Vision Model"
                        },
                        "description": "The default vision model to use"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/vision-providers": {
            "get": {
                "summary": "Get Vision Capable Providers",
                "description": "Return a list of LLM providers and their models that support image input",
                "operationId": "get_vision_capable_providers",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VisionProviderResponse"
                                    },
                                    "title": "Response Get Vision Capable Providers Admin Llm Vision Providers Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/llm/provider-contextual-cost": {
            "get": {
                "summary": "Get Provider Contextual Cost",
                "description": "Get the cost of Re-indexing all documents for contextual retrieval.\n\nSee https://docs.litellm.ai/docs/completion/token_usage#5-cost_per_token\nThis includes:\n- The cost of invoking the LLM on each chunk-document pair to get\n  - the doc_summary\n  - the chunk_context\n- The per-token cost of the LLM used to generate the doc_summary and chunk_context",
                "operationId": "get_provider_contextual_cost",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LLMCost"
                                    },
                                    "title": "Response Get Provider Contextual Cost Admin Llm Provider Contextual Cost Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/kg/exposed": {
            "get": {
                "summary": "Get Kg Exposed",
                "operationId": "get_kg_exposed",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Get Kg Exposed Admin Kg Exposed Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/kg/reset": {
            "put": {
                "summary": "Reset Kg",
                "operationId": "reset_kg",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SourceAndEntityTypeView"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/kg/config": {
            "get": {
                "summary": "Get Kg Config",
                "operationId": "get_kg_config",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KGConfig"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Enable Or Disable Kg",
                "operationId": "enable_or_disable_kg",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/EnableKGConfigRequest"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DisableKGConfigRequest"
                                    }
                                ],
                                "title": "Req"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/kg/entity-types": {
            "get": {
                "summary": "Get Kg Entity Types",
                "operationId": "get_kg_entity_types",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SourceAndEntityTypeView"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Kg Entity Types",
                "operationId": "update_kg_entity_types",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EntityType"
                                },
                                "title": "Updates"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/llm/provider": {
            "get": {
                "summary": "List Llm Provider Basics",
                "operationId": "list_llm_provider_basics",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LLMProviderDescriptor"
                                    },
                                    "title": "Response List Llm Provider Basics Llm Provider Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/embedding/test-embedding": {
            "post": {
                "summary": "Test Embedding Configuration",
                "operationId": "test_embedding_configuration",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestEmbeddingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/embedding": {
            "get": {
                "summary": "List Embedding Models",
                "operationId": "list_embedding_models",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmbeddingModelDetail"
                                    },
                                    "title": "Response List Embedding Models Admin Embedding Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/embedding/embedding-provider": {
            "get": {
                "summary": "List Embedding Providers",
                "operationId": "list_embedding_providers",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CloudEmbeddingProvider"
                                    },
                                    "title": "Response List Embedding Providers Admin Embedding Embedding Provider Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Cloud Embedding Provider",
                "operationId": "put_cloud_embedding_provider",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CloudEmbeddingProviderCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CloudEmbeddingProvider"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/embedding/embedding-provider/{provider_type}": {
            "delete": {
                "summary": "Delete Embedding Provider",
                "operationId": "delete_embedding_provider",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "provider_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/EmbeddingProvider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/token-rate-limits/global": {
            "get": {
                "summary": "Get Global Token Limit Settings",
                "operationId": "get_global_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TokenRateLimitDisplay"
                                    },
                                    "title": "Response Get Global Token Limit Settings Admin Token Rate Limits Global Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Global Token Limit Settings",
                "operationId": "create_global_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRateLimitArgs"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRateLimitDisplay"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/token-rate-limits/rate-limit/{token_rate_limit_id}": {
            "put": {
                "summary": "Update Token Limit Settings",
                "operationId": "update_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "token_rate_limit_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Token Rate Limit Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRateLimitArgs"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRateLimitDisplay"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Token Limit Settings",
                "operationId": "delete_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "token_rate_limit_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Token Rate Limit Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/assistants": {
            "post": {
                "summary": "Create Assistant",
                "operationId": "create_assistant",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAssistantRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantObject"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Assistants",
                "operationId": "list_assistants",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "default": 20,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^(asc|desc)$",
                            "default": "desc",
                            "title": "Order"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "After"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Before"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAssistantsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/assistants/{assistant_id}": {
            "get": {
                "summary": "Retrieve Assistant",
                "operationId": "retrieve_assistant",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Assistant Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantObject"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Modify Assistant",
                "operationId": "modify_assistant",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Assistant Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyAssistantRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantObject"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Assistant",
                "operationId": "delete_assistant",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Assistant Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAssistantResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/threads/{thread_id}/runs": {
            "post": {
                "summary": "Create Run",
                "operationId": "create_run",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Thread Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Runs",
                "operationId": "list_runs",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Thread Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string",
                            "default": "desc",
                            "title": "Order"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "After"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Before"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RunResponse"
                                    },
                                    "title": "Response List Runs Openai Assistants Threads  Thread Id  Runs Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/threads/{thread_id}/runs/{run_id}": {
            "get": {
                "summary": "Retrieve Run",
                "operationId": "retrieve_run",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Thread Id"
                        }
                    },
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/threads/{thread_id}/runs/{run_id}/cancel": {
            "post": {
                "summary": "Cancel Run",
                "operationId": "cancel_run",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Thread Id"
                        }
                    },
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/threads/{thread_id}/runs/{run_id}/steps": {
            "get": {
                "summary": "List Run Steps",
                "operationId": "list_run_steps",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Thread Id"
                        }
                    },
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string",
                            "default": "desc",
                            "title": "Order"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "After"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Before"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "title": "Response List Run Steps Openai Assistants Threads  Thread Id  Runs  Run Id  Steps Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/threads": {
            "post": {
                "summary": "Create Thread",
                "operationId": "create_thread",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateThreadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Threads",
                "operationId": "list_threads",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatSessionsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/threads/{thread_id}": {
            "get": {
                "summary": "Retrieve Thread",
                "operationId": "retrieve_thread",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Thread Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Modify Thread",
                "operationId": "modify_thread",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Thread Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyThreadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Thread",
                "operationId": "delete_thread",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Thread Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Delete Thread Openai Assistants Threads  Thread Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/threads/{thread_id}/messages": {
            "post": {
                "summary": "Create Message",
                "operationId": "create_message",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Thread Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Messages",
                "operationId": "list_messages",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Thread Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string",
                            "default": "desc",
                            "title": "Order"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "After"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Before"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMessagesResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openai-assistants/threads/{thread_id}/messages/{message_id}": {
            "get": {
                "summary": "Retrieve Message",
                "operationId": "retrieve_message",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Thread Id"
                        }
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Message Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Modify Message",
                "operationId": "modify_message",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Thread Id"
                        }
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Message Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/long-term-logs/{category}": {
            "get": {
                "summary": "Get Long Term Logs",
                "description": "Fetch logs for a specific category within an optional time range.\nOnly accessible by admin users.",
                "operationId": "get_long_term_logs",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Category"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start Time"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End Time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "array",
                                                "items": {}
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "title": "Response Get Long Term Logs Admin Long Term Logs  Category  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/long-term-logs/{category}/download": {
            "get": {
                "summary": "Download Long Term Logs Zip",
                "description": "Download logs for a specific category as a ZIP file.\nOnly accessible by admin users.",
                "operationId": "download_long_term_logs_zip",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Category"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start Time"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End Time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/long-term-logs": {
            "get": {
                "summary": "Get Available Categories",
                "description": "Get a list of all available log categories.\nOnly accessible by admin users.",
                "operationId": "get_available_categories",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Response Get Available Categories Admin Long Term Logs Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/api-key": {
            "get": {
                "summary": "List Api Keys",
                "operationId": "list_api_keys",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiKeyDescriptor"
                                    },
                                    "title": "Response List Api Keys Admin Api Key Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Api Key",
                "operationId": "create_api_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIKeyArgs"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyDescriptor"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/api-key/{api_key_id}/regenerate": {
            "post": {
                "summary": "Regenerate Existing Api Key",
                "operationId": "regenerate_existing_api_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Api Key Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyDescriptor"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/api-key/{api_key_id}": {
            "patch": {
                "summary": "Update Existing Api Key",
                "operationId": "update_existing_api_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Api Key Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIKeyArgs"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyDescriptor"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Api Key",
                "operationId": "delete_api_key",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Api Key Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/connector/oauth/authorize/{source}": {
            "get": {
                "summary": "Oauth Authorize",
                "description": "Initiates the OAuth flow by redirecting to the provider's auth page",
                "operationId": "oauth_authorize",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DocumentSource"
                        }
                    },
                    {
                        "name": "desired_return_url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Desired Return Url"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/connector/oauth/callback/{source}": {
            "get": {
                "summary": "Oauth Callback",
                "description": "Handles the OAuth callback and exchanges the code for tokens",
                "operationId": "oauth_callback",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DocumentSource"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Code"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "State"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallbackResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/connector/oauth/details/{source}": {
            "get": {
                "summary": "Oauth Details",
                "operationId": "oauth_details",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DocumentSource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthDetails"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated": {
            "post": {
                "summary": "Create Federated Connector",
                "description": "Create a new federated connector",
                "operationId": "create_federated_connector",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FederatedConnectorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FederatedConnectorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Federated Connectors",
                "description": "Get all federated connectors for display in the status table",
                "operationId": "get_federated_connectors",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FederatedConnectorStatus"
                                    },
                                    "title": "Response Get Federated Connectors Federated Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/{id}/entities": {
            "get": {
                "summary": "Get Entities",
                "description": "Fetch allowed entities for the source type",
                "operationId": "get_entities",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntitySpecResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/{id}/credentials/schema": {
            "get": {
                "summary": "Get Credentials Schema",
                "description": "Fetch credential schema for the source type",
                "operationId": "get_credentials_schema",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CredentialSchemaResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/sources/{source}/credentials/schema": {
            "get": {
                "summary": "Get Credentials Schema By Source",
                "description": "Fetch credential schema for a specific source type (for setup forms)",
                "operationId": "get_credentials_schema_by_source",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/FederatedConnectorSource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CredentialSchemaResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/sources/{source}/credentials/validate": {
            "post": {
                "summary": "Validate Credentials",
                "description": "Validate credentials for a specific source type",
                "operationId": "validate_credentials",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/FederatedConnectorSource"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FederatedConnectorCredentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Validate Credentials Federated Sources  Source  Credentials Validate Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/{id}/entities/validate": {
            "head": {
                "summary": "Validate Entities",
                "description": "Validate specified entities for source type",
                "operationId": "validate_entities",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/{id}/authorize": {
            "get": {
                "summary": "Get Authorize Url",
                "description": "Get URL to send the user for OAuth",
                "operationId": "get_authorize_url",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizeUrlResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/callback": {
            "post": {
                "summary": "Handle Oauth Callback Generic",
                "description": "Handle callback for any federated connector using state parameter",
                "operationId": "handle_oauth_callback_generic",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthCallbackResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/oauth-status": {
            "get": {
                "summary": "Get User Oauth Status",
                "description": "Get OAuth status for all federated connectors for the current user",
                "operationId": "get_user_oauth_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserOAuthStatus"
                                    },
                                    "title": "Response Get User Oauth Status Federated Oauth Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/{id}": {
            "get": {
                "summary": "Get Federated Connector Detail",
                "description": "Get detailed information about a specific federated connector",
                "operationId": "get_federated_connector_detail",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FederatedConnectorDetail"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Federated Connector Endpoint",
                "description": "Update a federated connector's configuration",
                "operationId": "update_federated_connector_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FederatedConnectorUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FederatedConnectorDetail"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Federated Connector Endpoint",
                "description": "Delete a federated connector",
                "operationId": "delete_federated_connector_endpoint",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Delete Federated Connector Endpoint Federated  Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/federated/{id}/oauth": {
            "delete": {
                "summary": "Disconnect Oauth Token",
                "description": "Disconnect OAuth token for the current user from a federated connector",
                "operationId": "disconnect_oauth_token",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Disconnect Oauth Token Federated  Id  Oauth Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Auth:Redis.Login",
                "operationId": "auth:redis.login",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_auth_redis_login_auth_login_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "LOGIN_BAD_CREDENTIALS": {
                                        "summary": "Bad credentials or the user is inactive.",
                                        "value": {
                                            "detail": "LOGIN_BAD_CREDENTIALS"
                                        }
                                    },
                                    "LOGIN_USER_NOT_VERIFIED": {
                                        "summary": "The user is not verified.",
                                        "value": {
                                            "detail": "LOGIN_USER_NOT_VERIFIED"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Auth:Redis.Logout",
                "operationId": "auth:redis.logout",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register:Register",
                "operationId": "register:register",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "REGISTER_USER_ALREADY_EXISTS": {
                                        "summary": "A user with this email already exists.",
                                        "value": {
                                            "detail": "REGISTER_USER_ALREADY_EXISTS"
                                        }
                                    },
                                    "REGISTER_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "REGISTER_INVALID_PASSWORD",
                                                "reason": "Password should beat least 3 characters"
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Reset:Forgot Password",
                "operationId": "reset:forgot_password",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_reset_forgot_password_auth_forgot_password_post"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Reset:Reset Password",
                "operationId": "reset:reset_password",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_reset_reset_password_auth_reset_password_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "RESET_PASSWORD_BAD_TOKEN": {
                                        "summary": "Bad or expired token.",
                                        "value": {
                                            "detail": "RESET_PASSWORD_BAD_TOKEN"
                                        }
                                    },
                                    "RESET_PASSWORD_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "RESET_PASSWORD_INVALID_PASSWORD",
                                                "reason": "Password should be at least 3 characters"
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/request-verify-token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Verify:Request-Token",
                "operationId": "verify:request-token",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_verify_request_token_auth_request_verify_token_post"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Verify:Verify",
                "operationId": "verify:verify",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_verify_verify_auth_verify_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "VERIFY_USER_BAD_TOKEN": {
                                        "summary": "Bad token, not existing user ornot the e-mail currently set for the user.",
                                        "value": {
                                            "detail": "VERIFY_USER_BAD_TOKEN"
                                        }
                                    },
                                    "VERIFY_USER_ALREADY_VERIFIED": {
                                        "summary": "The user is already verified.",
                                        "value": {
                                            "detail": "VERIFY_USER_ALREADY_VERIFIED"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Users:Current User",
                "operationId": "users:current_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "auth"
                ],
                "summary": "Users:Patch Current User",
                "operationId": "users:patch_current_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                                        "summary": "A user with this email already exists.",
                                        "value": {
                                            "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                                        }
                                    },
                                    "UPDATE_USER_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "UPDATE_USER_INVALID_PASSWORD",
                                                "reason": "Password should beat least 3 characters"
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Users:User",
                "operationId": "users:user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "auth"
                ],
                "summary": "Users:Patch User",
                "operationId": "users:patch_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                                        "summary": "A user with this email already exists.",
                                        "value": {
                                            "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                                        }
                                    },
                                    "UPDATE_USER_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "UPDATE_USER_INVALID_PASSWORD",
                                                "reason": "Password should beat least 3 characters"
                                            }
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "auth"
                ],
                "summary": "Users:Delete User",
                "operationId": "users:delete_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Auth:Redis.Refresh",
                "operationId": "auth:redis.refresh",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "summary": "Metrics",
                "description": "Endpoint that serves Prometheus metrics.",
                "operationId": "metrics",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/auth/oauth/authorize": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Oauth:Google.Redis.Authorize",
                "operationId": "oauth:google.redis.authorize",
                "parameters": [
                    {
                        "name": "scopes",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "title": "Scopes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuth2AuthorizeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/oauth/callback": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Oauth:Google.Redis.Callback",
                "description": "The response varies based on the authentication backend used.",
                "operationId": "oauth:google.redis.callback",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code"
                        }
                    },
                    {
                        "name": "code_verifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Code Verifier"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "State"
                        }
                    },
                    {
                        "name": "error",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Error"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "INVALID_STATE_TOKEN": {
                                        "summary": "Invalid state token."
                                    },
                                    "LOGIN_BAD_CREDENTIALS": {
                                        "summary": "User is inactive.",
                                        "value": {
                                            "detail": "LOGIN_BAD_CREDENTIALS"
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/user-group": {
            "get": {
                "summary": "List User Groups",
                "operationId": "list_user_groups",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserGroup"
                                    },
                                    "title": "Response List User Groups Manage Admin User Group Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create User Group",
                "operationId": "create_user_group",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroupCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/user-group/{user_group_id}": {
            "patch": {
                "summary": "Patch User Group",
                "operationId": "patch_user_group",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Group Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroupUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete User Group",
                "operationId": "delete_user_group",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Group Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/user-group/{user_group_id}/set-curator": {
            "post": {
                "summary": "Set User Curator",
                "operationId": "set_user_curator",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "User Group Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetCuratorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analytics/admin/query": {
            "get": {
                "summary": "Get Query Analytics",
                "operationId": "get_query_analytics",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QueryAnalyticsResponse"
                                    },
                                    "title": "Response Get Query Analytics Analytics Admin Query Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analytics/admin/user": {
            "get": {
                "summary": "Get User Analytics",
                "operationId": "get_user_analytics",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAnalyticsResponse"
                                    },
                                    "title": "Response Get User Analytics Analytics Admin User Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analytics/admin/onyxbot": {
            "get": {
                "summary": "Get Onyxbot Analytics",
                "operationId": "get_onyxbot_analytics",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OnyxbotAnalyticsResponse"
                                    },
                                    "title": "Response Get Onyxbot Analytics Analytics Admin Onyxbot Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analytics/admin/persona/messages": {
            "get": {
                "summary": "Get Persona Messages",
                "description": "Fetch daily message counts for a single persona within the given time range.",
                "operationId": "get_persona_messages",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonaMessageAnalyticsResponse"
                                    },
                                    "title": "Response Get Persona Messages Analytics Admin Persona Messages Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analytics/admin/persona/unique-users": {
            "get": {
                "summary": "Get Persona Unique Users",
                "description": "Get unique users per day for a single persona.",
                "operationId": "get_persona_unique_users",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Persona Id"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Start"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "End"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonaUniqueUsersResponse"
                                    },
                                    "title": "Response Get Persona Unique Users Analytics Admin Persona Unique Users Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analytics/assistant/{assistant_id}/stats": {
            "get": {
                "summary": "Get Assistant Stats",
                "description": "Returns daily message and unique user counts for a user's assistant,\nalong with the overall total messages and total distinct users.",
                "operationId": "get_assistant_stats",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Assistant Id"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantStatsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/chat-sessions": {
            "get": {
                "summary": "Admin Get Chat Sessions",
                "operationId": "admin_get_chat_sessions",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatSessionsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/chat-session-history": {
            "get": {
                "summary": "Get Chat Session History",
                "operationId": "get_chat_session_history",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page_num",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Page Num"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 10,
                            "title": "Page Size"
                        }
                    },
                    {
                        "name": "feedback_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/QAFeedbackType"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Feedback Type"
                        }
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start Time"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End Time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedReturn_ChatSessionMinimal_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/chat-session-history/{chat_session_id}": {
            "get": {
                "summary": "Get Chat Session Admin",
                "operationId": "get_chat_session_admin",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "chat_session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Chat Session Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatSessionSnapshot"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/query-history/list": {
            "get": {
                "summary": "List All Query History Exports",
                "operationId": "list_all_query_history_exports",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QueryHistoryExport"
                                    },
                                    "title": "Response List All Query History Exports Admin Query History List Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/query-history/start-export": {
            "post": {
                "summary": "Start Query History Export",
                "operationId": "start_query_history_export",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Start"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "End"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Start Query History Export Admin Query History Start Export Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/query-history/export-status": {
            "get": {
                "summary": "Get Query History Export Status",
                "operationId": "get_query_history_export_status",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Request Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Get Query History Export Status Admin Query History Export Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/query-history/download": {
            "get": {
                "summary": "Download Query History Csv",
                "operationId": "download_query_history_csv",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "request_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Request Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query/document-search": {
            "post": {
                "summary": "Handle Search Request",
                "description": "Simple search endpoint, does not create a new message or records in the DB",
                "operationId": "handle_search_request",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentSearchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentSearchResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query/answer-with-citation": {
            "post": {
                "summary": "Get Answer With Citation",
                "operationId": "get_answer_with_citation",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OneShotQARequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OneShotQAResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query/stream-answer-with-citation": {
            "post": {
                "summary": "Stream Answer With Citation",
                "operationId": "stream_answer_with_citation",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OneShotQARequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query/standard-answer": {
            "get": {
                "summary": "Get Standard Answer",
                "operationId": "get_standard_answer",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardAnswerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardAnswerResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/send-message-simple-api": {
            "post": {
                "summary": "Handle Simplified Chat Message",
                "description": "This is a Non-Streaming version that only gives back a minimal set of information",
                "operationId": "handle_simplified_chat_message",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicCreateChatMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatBasicResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/send-message-simple-with-history": {
            "post": {
                "summary": "Handle Send Message Simple With History",
                "description": "This is a Non-Streaming version that only gives back a minimal set of information.\ntakes in chat history maintained by the caller\nand does query rephrasing similar to answer-with-quote",
                "operationId": "handle_send_message_simple_with_history",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicCreateChatMessageWithHistoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatBasicResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/standard-answer": {
            "post": {
                "summary": "Create Standard Answer",
                "operationId": "create_standard_answer",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardAnswerCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardAnswer"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Standard Answers",
                "operationId": "list_standard_answers",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StandardAnswer"
                                    },
                                    "title": "Response List Standard Answers Manage Admin Standard Answer Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/standard-answer/{standard_answer_id}": {
            "patch": {
                "summary": "Patch Standard Answer",
                "operationId": "patch_standard_answer",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "standard_answer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Standard Answer Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardAnswerCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardAnswer"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Standard Answer",
                "operationId": "delete_standard_answer",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "standard_answer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Standard Answer Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/standard-answer/category": {
            "post": {
                "summary": "Create Standard Answer Category",
                "operationId": "create_standard_answer_category",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardAnswerCategoryCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardAnswerCategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "List Standard Answer Categories",
                "operationId": "list_standard_answer_categories",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StandardAnswerCategory"
                                    },
                                    "title": "Response List Standard Answer Categories Manage Admin Standard Answer Category Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/standard-answer/category/{standard_answer_category_id}": {
            "patch": {
                "summary": "Patch Standard Answer Category",
                "operationId": "patch_standard_answer_category",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "standard_answer_category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Standard Answer Category Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardAnswerCategoryCreationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardAnswerCategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/connector/confluence/callback": {
            "post": {
                "summary": "Confluence Oauth Callback",
                "description": "Handles the backend logic for the frontend page that the user is redirected to\nafter visiting the oauth authorization url.",
                "operationId": "confluence_oauth_callback",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Code"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "State"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/connector/confluence/accessible-resources": {
            "get": {
                "summary": "Confluence Oauth Accessible Resources",
                "description": "Atlassian's API is weird and does not supply us with enough info to be in a\nusable state after authorizing.  All API's require a cloud id. We have to list\nthe accessible resources/sites and let the user choose which site to use.",
                "operationId": "confluence_oauth_accessible_resources",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/connector/confluence/finalize": {
            "post": {
                "summary": "Confluence Oauth Finalize",
                "description": "Saves the info for the selected cloud site to the credential.\nThis is the final step in the confluence oauth flow where after the traditional\nOAuth process, the user has to select a site to associate with the credentials.\nAfter this, the credential is usable.",
                "operationId": "confluence_oauth_finalize",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "credential_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Credential Id"
                        }
                    },
                    {
                        "name": "cloud_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Cloud Id"
                        }
                    },
                    {
                        "name": "cloud_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Cloud Name"
                        }
                    },
                    {
                        "name": "cloud_url",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Cloud Url"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/connector/google-drive/callback": {
            "post": {
                "summary": "Handle Google Drive Oauth Callback",
                "operationId": "handle_google_drive_oauth_callback",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Code"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "State"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/connector/slack/callback": {
            "post": {
                "summary": "Handle Slack Oauth Callback",
                "operationId": "handle_slack_oauth_callback",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Code"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "State"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/prepare-authorization-request": {
            "post": {
                "summary": "Prepare Authorization Request",
                "description": "Used by the frontend to generate the url for the user's browser during auth request.\n\nExample: https://www.oauth.com/oauth2-servers/authorization/the-authorization-request/",
                "operationId": "prepare_authorization_request",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "connector",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DocumentSource"
                        }
                    },
                    {
                        "name": "redirect_on_success",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Redirect On Success"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/sync-permissions": {
            "get": {
                "summary": "Get Cc Pair Latest Sync",
                "operationId": "get_cc_pair_latest_sync",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Cc Pair Latest Sync Manage Admin Cc Pair  Cc Pair Id  Sync Permissions Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Sync Cc Pair",
                "description": "Triggers permissions sync on a particular cc_pair immediately",
                "operationId": "sync_cc_pair",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_NoneType_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manage/admin/cc-pair/{cc_pair_id}/sync-groups": {
            "get": {
                "summary": "Get Cc Pair Latest Group Sync",
                "operationId": "get_cc_pair_latest_group_sync",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Cc Pair Latest Group Sync Manage Admin Cc Pair  Cc Pair Id  Sync Groups Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Sync Cc Pair Groups",
                "description": "Triggers group sync on a particular cc_pair immediately",
                "operationId": "sync_cc_pair_groups",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cc_pair_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cc Pair Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse_NoneType_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/enterprise-settings": {
            "put": {
                "summary": "Admin Ee Put Settings",
                "operationId": "admin_ee_put_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnterpriseSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/enterprise-settings/logo": {
            "put": {
                "summary": "Put Logo",
                "operationId": "put_logo",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "is_logotype",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Is Logotype"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_put_logo_admin_enterprise_settings_logo_put"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/enterprise-settings/custom-analytics-script": {
            "put": {
                "summary": "Upload Custom Analytics Script",
                "operationId": "upload_custom_analytics_script",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnalyticsScriptUpload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/token-rate-limits/user-groups": {
            "get": {
                "summary": "Get All Group Token Limit Settings",
                "operationId": "get_all_group_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/TokenRateLimitDisplay"
                                        }
                                    },
                                    "title": "Response Get All Group Token Limit Settings Admin Token Rate Limits User Groups Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/token-rate-limits/user-group/{group_id}": {
            "get": {
                "summary": "Get Group Token Limit Settings",
                "operationId": "get_group_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Group Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TokenRateLimitDisplay"
                                    },
                                    "title": "Response Get Group Token Limit Settings Admin Token Rate Limits User Group  Group Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Group Token Limit Settings",
                "operationId": "create_group_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Group Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRateLimitArgs"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRateLimitDisplay"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/token-rate-limits/users": {
            "get": {
                "summary": "Get User Token Limit Settings",
                "operationId": "get_user_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TokenRateLimitDisplay"
                                    },
                                    "title": "Response Get User Token Limit Settings Admin Token Rate Limits Users Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create User Token Limit Settings",
                "operationId": "create_user_token_limit_settings",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRateLimitArgs"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRateLimitDisplay"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enterprise-settings/refresh-token": {
            "post": {
                "summary": "Refresh Access Token",
                "operationId": "refresh_access_token",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enterprise-settings": {
            "get": {
                "summary": "Ee Fetch Settings",
                "operationId": "ee_fetch_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnterpriseSettings"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enterprise-settings/logotype": {
            "get": {
                "summary": "Fetch Logotype",
                "operationId": "fetch_logotype",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/enterprise-settings/logo": {
            "get": {
                "summary": "Fetch Logo",
                "operationId": "fetch_logo",
                "parameters": [
                    {
                        "name": "is_logotype",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Is Logotype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enterprise-settings/custom-analytics-script": {
            "get": {
                "summary": "Fetch Custom Analytics Script",
                "operationId": "fetch_custom_analytics_script",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Fetch Custom Analytics Script Enterprise Settings Custom Analytics Script Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/generate-usage-report": {
            "post": {
                "summary": "Generate Report",
                "operationId": "generate_report",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateUsageReportParams"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UsageReportMetadata"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/usage-report/{report_name}": {
            "get": {
                "summary": "Read Usage Report",
                "operationId": "read_usage_report",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "report_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Report Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/usage-report": {
            "get": {
                "summary": "Fetch Usage Reports",
                "operationId": "fetch_usage_reports",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UsageReportMetadata"
                                    },
                                    "title": "Response Fetch Usage Reports Admin Usage Report Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/impersonate": {
            "post": {
                "summary": "Impersonate User",
                "description": "Allows a cloud superuser to impersonate another user by generating an impersonation JWT token",
                "operationId": "impersonate_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImpersonateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/anonymous-user-path": {
            "get": {
                "summary": "Get Anonymous User Path Api",
                "operationId": "get_anonymous_user_path_api",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnonymousUserPath"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Set Anonymous User Path Api",
                "operationId": "set_anonymous_user_path_api",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "anonymous_user_path",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Anonymous User Path"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/anonymous-user": {
            "post": {
                "summary": "Login As Anonymous User",
                "operationId": "login_as_anonymous_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "anonymous_user_path",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Anonymous User Path"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/product-gating": {
            "post": {
                "summary": "Gate Product",
                "description": "Gating the product means that the product is not available to the tenant.\nThey will be directed to the billing page.\nWe gate the product when their subscription has ended.",
                "operationId": "gate_product",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductGatingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductGatingResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/product-gating/full-sync": {
            "post": {
                "summary": "Gate Product Full Sync",
                "description": "Bulk operation to overwrite the entire gated tenant set.\nThis replaces all currently gated tenants with the provided list.\nGated tenants are not available to access the product and will be\ndirected to the billing page when their subscription has ended.",
                "operationId": "gate_product_full_sync",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductGatingFullSyncRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductGatingResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/billing-information": {
            "get": {
                "summary": "Billing Information",
                "operationId": "billing_information",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/BillingInformation"
                                        },
                                        {
                                            "$ref": "#/components/schemas/SubscriptionStatusResponse"
                                        }
                                    ],
                                    "title": "Response Billing Information Tenants Billing Information Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/create-customer-portal-session": {
            "post": {
                "summary": "Create Customer Portal Session",
                "operationId": "create_customer_portal_session",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Create Customer Portal Session Tenants Create Customer Portal Session Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/create-subscription-session": {
            "post": {
                "summary": "Create Subscription Session",
                "operationId": "create_subscription_session",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionSessionResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/leave-team": {
            "post": {
                "summary": "Leave Organization",
                "operationId": "leave_organization",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserByEmail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/existing-team-by-domain": {
            "get": {
                "summary": "Get Existing Tenant By Domain",
                "operationId": "get_existing_tenant_by_domain",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/TenantByDomainResponse"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Get Existing Tenant By Domain Tenants Existing Team By Domain Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/users/invite/request": {
            "post": {
                "summary": "Request Invite",
                "operationId": "request_invite",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestInviteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/users/pending": {
            "get": {
                "summary": "List Pending Users",
                "operationId": "list_pending_users",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PendingUserSnapshot"
                                    },
                                    "title": "Response List Pending Users Tenants Users Pending Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/users/invite/approve": {
            "post": {
                "summary": "Approve User",
                "operationId": "approve_user",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/users/invite/accept": {
            "post": {
                "summary": "Accept Invite",
                "description": "Accept an invitation to join a tenant.",
                "operationId": "accept_invite",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestInviteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenants/users/invite/deny": {
            "post": {
                "summary": "Deny Invite",
                "description": "Deny an invitation to join a tenant.",
                "operationId": "deny_invite",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestInviteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIKeyArgs": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        ],
                        "default": "basic"
                    }
                },
                "type": "object",
                "title": "APIKeyArgs"
            },
            "AbridgedSearchDoc": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "semantic_identifier": {
                        "type": "string",
                        "title": "Semantic Identifier"
                    },
                    "link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Link"
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "semantic_identifier",
                    "link"
                ],
                "title": "AbridgedSearchDoc",
                "description": "A subset of the info present in `SearchDoc`"
            },
            "AccessType": {
                "type": "string",
                "enum": [
                    "public",
                    "private",
                    "sync"
                ],
                "title": "AccessType"
            },
            "AdminSearchRequest": {
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Query"
                    },
                    "filters": {
                        "$ref": "#/components/schemas/BaseFilters"
                    }
                },
                "type": "object",
                "required": [
                    "query",
                    "filters"
                ],
                "title": "AdminSearchRequest"
            },
            "AdminSearchResponse": {
                "properties": {
                    "documents": {
                        "items": {
                            "$ref": "#/components/schemas/SearchDoc"
                        },
                        "type": "array",
                        "title": "Documents"
                    }
                },
                "type": "object",
                "title": "AdminSearchResponse"
            },
            "AgentAnswer": {
                "properties": {
                    "level": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level"
                    },
                    "level_question_num": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level Question Num"
                    },
                    "answer": {
                        "type": "string",
                        "title": "Answer"
                    },
                    "answer_type": {
                        "type": "string",
                        "enum": [
                            "agent_sub_answer",
                            "agent_level_answer"
                        ],
                        "title": "Answer Type"
                    }
                },
                "type": "object",
                "required": [
                    "answer",
                    "answer_type"
                ],
                "title": "AgentAnswer"
            },
            "AgentSubQuery": {
                "properties": {
                    "level": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level"
                    },
                    "level_question_num": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level Question Num"
                    },
                    "sub_query": {
                        "type": "string",
                        "title": "Sub Query"
                    },
                    "query_id": {
                        "type": "integer",
                        "title": "Query Id"
                    }
                },
                "type": "object",
                "required": [
                    "sub_query",
                    "query_id"
                ],
                "title": "AgentSubQuery"
            },
            "AgentSubQuestion": {
                "properties": {
                    "level": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level"
                    },
                    "level_question_num": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level Question Num"
                    },
                    "sub_question": {
                        "type": "string",
                        "title": "Sub Question"
                    },
                    "document_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Document Ids"
                    }
                },
                "type": "object",
                "required": [
                    "sub_question",
                    "document_ids"
                ],
                "title": "AgentSubQuestion"
            },
            "AllUsersResponse": {
                "properties": {
                    "accepted": {
                        "items": {
                            "$ref": "#/components/schemas/FullUserSnapshot"
                        },
                        "type": "array",
                        "title": "Accepted"
                    },
                    "invited": {
                        "items": {
                            "$ref": "#/components/schemas/InvitedUserSnapshot"
                        },
                        "type": "array",
                        "title": "Invited"
                    },
                    "slack_users": {
                        "items": {
                            "$ref": "#/components/schemas/FullUserSnapshot"
                        },
                        "type": "array",
                        "title": "Slack Users"
                    },
                    "accepted_pages": {
                        "type": "integer",
                        "title": "Accepted Pages"
                    },
                    "invited_pages": {
                        "type": "integer",
                        "title": "Invited Pages"
                    },
                    "slack_users_pages": {
                        "type": "integer",
                        "title": "Slack Users Pages"
                    }
                },
                "type": "object",
                "title": "AllUsersResponse"
            },
            "AnalyticsScriptUpload": {
                "properties": {
                    "script": {
                        "type": "string",
                        "title": "Script"
                    },
                    "secret_key": {
                        "type": "string",
                        "title": "Secret Key"
                    }
                },
                "type": "object",
                "required": [
                    "script",
                    "secret_key"
                ],
                "title": "AnalyticsScriptUpload"
            },
            "AnonymousUserPath": {
                "properties": {
                    "anonymous_user_path": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Anonymous User Path"
                    }
                },
                "type": "object",
                "required": [
                    "anonymous_user_path"
                ],
                "title": "AnonymousUserPath"
            },
            "ApiKeyDescriptor": {
                "properties": {
                    "api_key_id": {
                        "type": "integer",
                        "title": "Api Key Id"
                    },
                    "api_key_display": {
                        "type": "string",
                        "title": "Api Key Display"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "api_key_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key Name"
                    },
                    "api_key_role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "api_key_id",
                    "api_key_display",
                    "api_key_role",
                    "user_id"
                ],
                "title": "ApiKeyDescriptor"
            },
            "ApplicationStatus": {
                "type": "string",
                "enum": [
                    "payment_reminder",
                    "gated_access",
                    "active"
                ],
                "title": "ApplicationStatus"
            },
            "ApproveUserRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "ApproveUserRequest"
            },
            "AssistantDailyUsageResponse": {
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    },
                    "total_messages": {
                        "type": "integer",
                        "title": "Total Messages"
                    },
                    "total_unique_users": {
                        "type": "integer",
                        "title": "Total Unique Users"
                    }
                },
                "type": "object",
                "title": "AssistantDailyUsageResponse"
            },
            "AssistantObject": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "assistant"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "instructions": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions"
                    },
                    "tools": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Tools"
                    },
                    "file_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "File Ids"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "model",
                    "tools",
                    "file_ids"
                ],
                "title": "AssistantObject"
            },
            "AssistantStatsResponse": {
                "properties": {
                    "daily_stats": {
                        "items": {
                            "$ref": "#/components/schemas/AssistantDailyUsageResponse"
                        },
                        "type": "array",
                        "title": "Daily Stats"
                    },
                    "total_messages": {
                        "type": "integer",
                        "title": "Total Messages"
                    },
                    "total_unique_users": {
                        "type": "integer",
                        "title": "Total Unique Users"
                    }
                },
                "type": "object",
                "title": "AssistantStatsResponse"
            },
            "AuthStatus": {
                "properties": {
                    "authenticated": {
                        "type": "boolean",
                        "title": "Authenticated"
                    }
                },
                "type": "object",
                "required": [
                    "authenticated"
                ],
                "title": "AuthStatus"
            },
            "AuthType": {
                "type": "string",
                "enum": [
                    "disabled",
                    "basic",
                    "google_oauth",
                    "oidc",
                    "saml",
                    "cloud"
                ],
                "title": "AuthType"
            },
            "AuthTypeResponse": {
                "properties": {
                    "auth_type": {
                        "$ref": "#/components/schemas/AuthType"
                    },
                    "requires_verification": {
                        "type": "boolean",
                        "title": "Requires Verification"
                    },
                    "anonymous_user_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Anonymous User Enabled"
                    }
                },
                "type": "object",
                "title": "AuthTypeResponse"
            },
            "AuthUrl": {
                "properties": {
                    "auth_url": {
                        "type": "string",
                        "title": "Auth Url"
                    }
                },
                "type": "object",
                "required": [
                    "auth_url"
                ],
                "title": "AuthUrl"
            },
            "AuthorizeResponse": {
                "properties": {
                    "redirect_url": {
                        "type": "string",
                        "title": "Redirect Url"
                    }
                },
                "type": "object",
                "title": "AuthorizeResponse"
            },
            "AuthorizeUrlResponse": {
                "properties": {
                    "authorize_url": {
                        "type": "string",
                        "title": "Authorize Url"
                    }
                },
                "type": "object",
                "title": "AuthorizeUrlResponse"
            },
            "AutoScrollRequest": {
                "properties": {
                    "auto_scroll": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Auto Scroll"
                    }
                },
                "type": "object",
                "required": [
                    "auto_scroll"
                ],
                "title": "AutoScrollRequest"
            },
            "BaseFilters": {
                "properties": {
                    "source_type": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DocumentSource"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source Type"
                    },
                    "document_set": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Document Set"
                    },
                    "time_cutoff": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Time Cutoff"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Tag"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags"
                    },
                    "kg_entities": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Kg Entities"
                    },
                    "kg_relationships": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Kg Relationships"
                    },
                    "kg_terms": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Kg Terms"
                    },
                    "kg_sources": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Kg Sources"
                    },
                    "kg_chunk_id_zero_only": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Kg Chunk Id Zero Only",
                        "default": false
                    }
                },
                "type": "object",
                "title": "BaseFilters"
            },
            "BasicCCPairInfo": {
                "properties": {
                    "has_successful_run": {
                        "type": "boolean",
                        "title": "Has Successful Run"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DocumentSource"
                    }
                },
                "type": "object",
                "required": [
                    "has_successful_run",
                    "source"
                ],
                "title": "BasicCCPairInfo"
            },
            "BasicCreateChatMessageRequest": {
                "properties": {
                    "chunks_above": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Above"
                    },
                    "chunks_below": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Below"
                    },
                    "full_doc": {
                        "type": "boolean",
                        "title": "Full Doc",
                        "default": false
                    },
                    "chat_session_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chat Session Id"
                    },
                    "persona_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Id"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "retrieval_options": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RetrievalDetails"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "query_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Query Override"
                    },
                    "search_doc_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Search Doc Ids"
                    },
                    "structured_response_format": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Structured Response Format"
                    },
                    "use_agentic_search": {
                        "type": "boolean",
                        "title": "Use Agentic Search",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "BasicCreateChatMessageRequest",
                "description": "If a chat_session_id is not provided, a persona_id must be provided to automatically create a new chat session\nNote, for simplicity this option only allows for a single linear chain of messages"
            },
            "BasicCreateChatMessageWithHistoryRequest": {
                "properties": {
                    "chunks_above": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Above"
                    },
                    "chunks_below": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Below"
                    },
                    "full_doc": {
                        "type": "boolean",
                        "title": "Full Doc",
                        "default": false
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/ThreadMessage"
                        },
                        "type": "array",
                        "title": "Messages"
                    },
                    "prompt_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Id"
                    },
                    "persona_id": {
                        "type": "integer",
                        "title": "Persona Id"
                    },
                    "retrieval_options": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RetrievalDetails"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "query_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Query Override"
                    },
                    "skip_rerank": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Skip Rerank"
                    },
                    "search_doc_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Search Doc Ids"
                    },
                    "structured_response_format": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Structured Response Format"
                    },
                    "use_agentic_search": {
                        "type": "boolean",
                        "title": "Use Agentic Search",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "messages",
                    "prompt_id",
                    "persona_id"
                ],
                "title": "BasicCreateChatMessageWithHistoryRequest"
            },
            "BasicExpertInfo": {
                "properties": {
                    "display_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Display Name"
                    },
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name"
                    },
                    "middle_initial": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Middle Initial"
                    },
                    "last_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Name"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    }
                },
                "type": "object",
                "title": "BasicExpertInfo",
                "description": "Basic Information for the owner of a document, any of the fields can be left as None\nDisplay fallback goes as follows:\n- first_name + (optional middle_initial) + last_name\n- display_name\n- email\n- first_name"
            },
            "BillingInformation": {
                "properties": {
                    "stripe_subscription_id": {
                        "type": "string",
                        "title": "Stripe Subscription Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "current_period_start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Current Period Start"
                    },
                    "current_period_end": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Current Period End"
                    },
                    "number_of_seats": {
                        "type": "integer",
                        "title": "Number Of Seats"
                    },
                    "cancel_at_period_end": {
                        "type": "boolean",
                        "title": "Cancel At Period End"
                    },
                    "canceled_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Canceled At"
                    },
                    "trial_start": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trial Start"
                    },
                    "trial_end": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trial End"
                    },
                    "seats": {
                        "type": "integer",
                        "title": "Seats"
                    },
                    "payment_method_enabled": {
                        "type": "boolean",
                        "title": "Payment Method Enabled"
                    }
                },
                "type": "object",
                "required": [
                    "stripe_subscription_id",
                    "status",
                    "current_period_start",
                    "current_period_end",
                    "number_of_seats",
                    "cancel_at_period_end",
                    "canceled_at",
                    "trial_start",
                    "trial_end",
                    "seats",
                    "payment_method_enabled"
                ],
                "title": "BillingInformation"
            },
            "Body_auth_redis_login_auth_login_post": {
                "properties": {
                    "grant_type": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "^password$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grant Type"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": ""
                    },
                    "client_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "title": "Body_auth_redis_login_auth_login_post"
            },
            "Body_bulk_invite_users_manage_admin_users_put": {
                "properties": {
                    "emails": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Emails"
                    }
                },
                "type": "object",
                "required": [
                    "emails"
                ],
                "title": "Body_bulk_invite_users_manage_admin_users_put"
            },
            "Body_put_logo_admin_enterprise_settings_logo_put": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_put_logo_admin_enterprise_settings_logo_put"
            },
            "Body_reset_forgot_password_auth_forgot_password_post": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "Body_reset_forgot_password_auth_forgot_password_post"
            },
            "Body_reset_reset_password_auth_reset_password_post": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "token",
                    "password"
                ],
                "title": "Body_reset_reset_password_auth_reset_password_post"
            },
            "Body_upload_file_admin_persona_upload_image_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_upload_file_admin_persona_upload_image_post"
            },
            "Body_upload_files_api_manage_admin_connector_file_upload_post": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "Body_upload_files_api_manage_admin_connector_file_upload_post"
            },
            "Body_upload_files_for_chat_chat_file_post": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "Body_upload_files_for_chat_chat_file_post"
            },
            "Body_upload_user_files_user_file_upload_post": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    },
                    "folder_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Id"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "Body_upload_user_files_user_file_upload_post"
            },
            "Body_verify_request_token_auth_request_verify_token_post": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "Body_verify_request_token_auth_request_verify_token_post"
            },
            "Body_verify_verify_auth_verify_post": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    }
                },
                "type": "object",
                "required": [
                    "token"
                ],
                "title": "Body_verify_verify_auth_verify_post"
            },
            "BoostDoc": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "link": {
                        "type": "string",
                        "title": "Link"
                    },
                    "boost": {
                        "type": "integer",
                        "title": "Boost"
                    },
                    "hidden": {
                        "type": "boolean",
                        "title": "Hidden"
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "semantic_id",
                    "link",
                    "boost",
                    "hidden"
                ],
                "title": "BoostDoc"
            },
            "BoostUpdateRequest": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "boost": {
                        "type": "integer",
                        "title": "Boost"
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "boost"
                ],
                "title": "BoostUpdateRequest"
            },
            "BulkCleanupRequest": {
                "properties": {
                    "folder_id": {
                        "type": "integer",
                        "title": "Folder Id"
                    },
                    "days_older_than": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Days Older Than"
                    }
                },
                "type": "object",
                "required": [
                    "folder_id"
                ],
                "title": "BulkCleanupRequest"
            },
            "CCPairFullInfo": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ConnectorCredentialPairStatus"
                    },
                    "in_repeated_error_state": {
                        "type": "boolean",
                        "title": "In Repeated Error State"
                    },
                    "num_docs_indexed": {
                        "type": "integer",
                        "title": "Num Docs Indexed"
                    },
                    "connector": {
                        "$ref": "#/components/schemas/ConnectorSnapshot"
                    },
                    "credential": {
                        "$ref": "#/components/schemas/CredentialSnapshot"
                    },
                    "number_of_index_attempts": {
                        "type": "integer",
                        "title": "Number Of Index Attempts"
                    },
                    "last_index_attempt_status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IndexingStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "latest_deletion_attempt": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DeletionAttemptSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "access_type": {
                        "$ref": "#/components/schemas/AccessType"
                    },
                    "is_editable_for_current_user": {
                        "type": "boolean",
                        "title": "Is Editable For Current User"
                    },
                    "deletion_failure_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deletion Failure Message"
                    },
                    "indexing": {
                        "type": "boolean",
                        "title": "Indexing"
                    },
                    "creator": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Creator"
                    },
                    "creator_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Creator Email"
                    },
                    "last_indexed": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Indexed"
                    },
                    "last_pruned": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Pruned"
                    },
                    "last_full_permission_sync": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Full Permission Sync"
                    },
                    "overall_indexing_speed": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Overall Indexing Speed"
                    },
                    "latest_checkpoint_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Checkpoint Description"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "status",
                    "in_repeated_error_state",
                    "num_docs_indexed",
                    "connector",
                    "credential",
                    "number_of_index_attempts",
                    "last_index_attempt_status",
                    "latest_deletion_attempt",
                    "access_type",
                    "is_editable_for_current_user",
                    "deletion_failure_message",
                    "indexing",
                    "creator",
                    "creator_email",
                    "last_indexed",
                    "last_pruned",
                    "last_full_permission_sync",
                    "overall_indexing_speed",
                    "latest_checkpoint_description"
                ],
                "title": "CCPairFullInfo"
            },
            "CCPairSummary": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DocumentSource"
                    },
                    "access_type": {
                        "$ref": "#/components/schemas/AccessType"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "source",
                    "access_type"
                ],
                "title": "CCPairSummary",
                "description": "Simplified connector-credential pair information with just essential data"
            },
            "CCPropertyUpdateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "value"
                ],
                "title": "CCPropertyUpdateRequest"
            },
            "CCStatusUpdateRequest": {
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/ConnectorCredentialPairStatus"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "CCStatusUpdateRequest"
            },
            "CallbackResponse": {
                "properties": {
                    "redirect_url": {
                        "type": "string",
                        "title": "Redirect Url"
                    }
                },
                "type": "object",
                "title": "CallbackResponse"
            },
            "ChangePasswordRequest": {
                "properties": {
                    "old_password": {
                        "type": "string",
                        "title": "Old Password"
                    },
                    "new_password": {
                        "type": "string",
                        "title": "New Password"
                    }
                },
                "type": "object",
                "required": [
                    "old_password",
                    "new_password"
                ],
                "title": "ChangePasswordRequest"
            },
            "ChannelConfig": {
                "properties": {
                    "channel_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Channel Name"
                    },
                    "respond_tag_only": {
                        "type": "boolean",
                        "title": "Respond Tag Only"
                    },
                    "respond_to_bots": {
                        "type": "boolean",
                        "title": "Respond To Bots"
                    },
                    "is_ephemeral": {
                        "type": "boolean",
                        "title": "Is Ephemeral"
                    },
                    "respond_member_group_list": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Respond Member Group List"
                    },
                    "answer_filters": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "well_answered_postfilter"
                                    ],
                                    "const": "well_answered_postfilter"
                                },
                                {
                                    "type": "string",
                                    "enum": [
                                        "questionmark_prefilter"
                                    ],
                                    "const": "questionmark_prefilter"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Answer Filters"
                    },
                    "follow_up_tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Follow Up Tags"
                    },
                    "show_continue_in_web_ui": {
                        "type": "boolean",
                        "title": "Show Continue In Web Ui"
                    },
                    "disabled": {
                        "type": "boolean",
                        "title": "Disabled"
                    }
                },
                "type": "object",
                "required": [
                    "channel_name"
                ],
                "title": "ChannelConfig",
                "description": "NOTE: is a `TypedDict` so it can be used as a type hint for a JSONB column\nin Postgres"
            },
            "ChatBasicResponse": {
                "properties": {
                    "answer": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Answer"
                    },
                    "answer_citationless": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Answer Citationless"
                    },
                    "top_documents": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SavedSearchDoc"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top Documents"
                    },
                    "error_msg": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Msg"
                    },
                    "message_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message Id"
                    },
                    "llm_selected_doc_indices": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Selected Doc Indices"
                    },
                    "final_context_doc_indices": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Final Context Doc Indices"
                    },
                    "cited_documents": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cited Documents"
                    },
                    "llm_chunks_indices": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Chunks Indices"
                    },
                    "agent_sub_questions": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "items": {
                                        "$ref": "#/components/schemas/AgentSubQuestion"
                                    },
                                    "type": "array"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Sub Questions"
                    },
                    "agent_answers": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "items": {
                                        "$ref": "#/components/schemas/AgentAnswer"
                                    },
                                    "type": "array"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Answers"
                    },
                    "agent_sub_queries": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "additionalProperties": {
                                        "items": {
                                            "$ref": "#/components/schemas/AgentSubQuery"
                                        },
                                        "type": "array"
                                    },
                                    "type": "object"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Sub Queries"
                    },
                    "agent_refined_answer_improvement": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Refined Answer Improvement"
                    },
                    "chat_session_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chat Session Id"
                    }
                },
                "type": "object",
                "title": "ChatBasicResponse"
            },
            "ChatFeedbackRequest": {
                "properties": {
                    "chat_message_id": {
                        "type": "integer",
                        "title": "Chat Message Id"
                    },
                    "is_positive": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Positive"
                    },
                    "feedback_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Feedback Text"
                    },
                    "predefined_feedback": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Predefined Feedback"
                    }
                },
                "type": "object",
                "required": [
                    "chat_message_id"
                ],
                "title": "ChatFeedbackRequest"
            },
            "ChatFileType": {
                "type": "string",
                "enum": [
                    "image",
                    "document",
                    "plain_text",
                    "csv",
                    "user_knowledge"
                ],
                "title": "ChatFileType"
            },
            "ChatMessageDetail": {
                "properties": {
                    "message_id": {
                        "type": "integer",
                        "title": "Message Id"
                    },
                    "parent_message": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Message"
                    },
                    "latest_child_message": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Child Message"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "rephrased_query": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rephrased Query"
                    },
                    "context_docs": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RetrievalDocs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message_type": {
                        "$ref": "#/components/schemas/MessageType"
                    },
                    "time_sent": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Sent"
                    },
                    "overridden_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Overridden Model"
                    },
                    "alternate_assistant_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Alternate Assistant Id"
                    },
                    "chat_session_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chat Session Id"
                    },
                    "citations": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "integer"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Citations"
                    },
                    "sub_questions": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SubQuestionDetail"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sub Questions"
                    },
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/FileDescriptor"
                        },
                        "type": "array",
                        "title": "Files"
                    },
                    "tool_call": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ToolCallFinalResult"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "refined_answer_improvement": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refined Answer Improvement"
                    },
                    "is_agentic": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Agentic"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    }
                },
                "type": "object",
                "required": [
                    "message_id",
                    "message",
                    "message_type",
                    "time_sent",
                    "overridden_model",
                    "files",
                    "tool_call"
                ],
                "title": "ChatMessageDetail"
            },
            "ChatMessageIdentifier": {
                "properties": {
                    "message_id": {
                        "type": "integer",
                        "title": "Message Id"
                    }
                },
                "type": "object",
                "required": [
                    "message_id"
                ],
                "title": "ChatMessageIdentifier"
            },
            "ChatRenameRequest": {
                "properties": {
                    "chat_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Chat Session Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "chat_session_id"
                ],
                "title": "ChatRenameRequest"
            },
            "ChatSearchResponse": {
                "properties": {
                    "groups": {
                        "items": {
                            "$ref": "#/components/schemas/ChatSessionGroup"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "has_more": {
                        "type": "boolean",
                        "title": "Has More"
                    },
                    "next_page": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Next Page"
                    }
                },
                "type": "object",
                "title": "ChatSearchResponse"
            },
            "ChatSeedRequest": {
                "properties": {
                    "persona_id": {
                        "type": "integer",
                        "title": "Persona Id"
                    },
                    "prompt_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Id"
                    },
                    "llm_override": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LLMOverride"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "prompt_override": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PromptOverride"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "persona_id"
                ],
                "title": "ChatSeedRequest"
            },
            "ChatSeedResponse": {
                "properties": {
                    "redirect_url": {
                        "type": "string",
                        "title": "Redirect Url"
                    }
                },
                "type": "object",
                "title": "ChatSeedResponse"
            },
            "ChatSessionCreationRequest": {
                "properties": {
                    "persona_id": {
                        "type": "integer",
                        "title": "Persona Id",
                        "default": 0
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "title": "ChatSessionCreationRequest"
            },
            "ChatSessionDetailResponse": {
                "properties": {
                    "chat_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Chat Session Id"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "persona_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Id"
                    },
                    "persona_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Name"
                    },
                    "persona_icon_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Icon Color"
                    },
                    "persona_icon_shape": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Icon Shape"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/ChatMessageDetail"
                        },
                        "type": "array",
                        "title": "Messages"
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    },
                    "shared_status": {
                        "$ref": "#/components/schemas/ChatSessionSharedStatus"
                    },
                    "current_alternate_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Alternate Model"
                    },
                    "current_temperature_override": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Temperature Override"
                    },
                    "deleted": {
                        "type": "boolean",
                        "title": "Deleted",
                        "default": false
                    }
                },
                "type": "object",
                "title": "ChatSessionDetailResponse"
            },
            "ChatSessionDetails": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "persona_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Id"
                    },
                    "time_created": {
                        "type": "string",
                        "title": "Time Created"
                    },
                    "time_updated": {
                        "type": "string",
                        "title": "Time Updated"
                    },
                    "shared_status": {
                        "$ref": "#/components/schemas/ChatSessionSharedStatus"
                    },
                    "folder_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Id"
                    },
                    "current_alternate_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Alternate Model"
                    },
                    "current_temperature_override": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Temperature Override"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "time_created",
                    "time_updated",
                    "shared_status"
                ],
                "title": "ChatSessionDetails"
            },
            "ChatSessionGroup": {
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "chats": {
                        "items": {
                            "$ref": "#/components/schemas/ChatSessionSummary"
                        },
                        "type": "array",
                        "title": "Chats"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "chats"
                ],
                "title": "ChatSessionGroup"
            },
            "ChatSessionMinimal": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "user_email": {
                        "type": "string",
                        "title": "User Email"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "first_user_message": {
                        "type": "string",
                        "title": "First User Message"
                    },
                    "first_ai_message": {
                        "type": "string",
                        "title": "First Ai Message"
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id"
                    },
                    "assistant_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Name"
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    },
                    "feedback_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/QAFeedbackType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "flow_type": {
                        "$ref": "#/components/schemas/SessionType"
                    },
                    "conversation_length": {
                        "type": "integer",
                        "title": "Conversation Length"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_email",
                    "name",
                    "first_user_message",
                    "first_ai_message",
                    "assistant_id",
                    "assistant_name",
                    "time_created",
                    "feedback_type",
                    "flow_type",
                    "conversation_length"
                ],
                "title": "ChatSessionMinimal"
            },
            "ChatSessionSharedStatus": {
                "type": "string",
                "enum": [
                    "public",
                    "private"
                ],
                "title": "ChatSessionSharedStatus"
            },
            "ChatSessionSnapshot": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "user_email": {
                        "type": "string",
                        "title": "User Email"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/MessageSnapshot"
                        },
                        "type": "array",
                        "title": "Messages"
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id"
                    },
                    "assistant_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Name"
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    },
                    "flow_type": {
                        "$ref": "#/components/schemas/SessionType"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "user_email",
                    "name",
                    "messages",
                    "assistant_id",
                    "assistant_name",
                    "time_created",
                    "flow_type"
                ],
                "title": "ChatSessionSnapshot"
            },
            "ChatSessionSummary": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "persona_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Id"
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    },
                    "shared_status": {
                        "$ref": "#/components/schemas/ChatSessionSharedStatus"
                    },
                    "folder_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Id"
                    },
                    "current_alternate_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Alternate Model"
                    },
                    "current_temperature_override": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Temperature Override"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "time_created",
                    "shared_status"
                ],
                "title": "ChatSessionSummary"
            },
            "ChatSessionUpdateRequest": {
                "properties": {
                    "sharing_status": {
                        "$ref": "#/components/schemas/ChatSessionSharedStatus"
                    }
                },
                "type": "object",
                "required": [
                    "sharing_status"
                ],
                "title": "ChatSessionUpdateRequest"
            },
            "ChatSessionsResponse": {
                "properties": {
                    "sessions": {
                        "items": {
                            "$ref": "#/components/schemas/ChatSessionDetails"
                        },
                        "type": "array",
                        "title": "Sessions"
                    }
                },
                "type": "object",
                "title": "ChatSessionsResponse"
            },
            "CheckDocSetPublicRequest": {
                "properties": {
                    "document_set_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Document Set Ids"
                    }
                },
                "type": "object",
                "required": [
                    "document_set_ids"
                ],
                "title": "CheckDocSetPublicRequest",
                "description": "Note that this does not mean that the Document Set itself is to be viewable by everyone\nRather, this refers to the CC-Pairs in the Document Set, and if every CC-Pair is public"
            },
            "CheckDocSetPublicResponse": {
                "properties": {
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    }
                },
                "type": "object",
                "title": "CheckDocSetPublicResponse"
            },
            "ChosenDefaultModelRequest": {
                "properties": {
                    "default_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Model"
                    }
                },
                "type": "object",
                "title": "ChosenDefaultModelRequest"
            },
            "ChunkInfo": {
                "properties": {
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "num_tokens": {
                        "type": "integer",
                        "title": "Num Tokens"
                    }
                },
                "type": "object",
                "required": [
                    "content",
                    "num_tokens"
                ],
                "title": "ChunkInfo"
            },
            "CitationInfo": {
                "properties": {
                    "level": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level"
                    },
                    "level_question_num": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level Question Num"
                    },
                    "citation_num": {
                        "type": "integer",
                        "title": "Citation Num"
                    },
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    }
                },
                "type": "object",
                "required": [
                    "citation_num",
                    "document_id"
                ],
                "title": "CitationInfo"
            },
            "CloudEmbeddingProvider": {
                "properties": {
                    "provider_type": {
                        "$ref": "#/components/schemas/EmbeddingProvider"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Url"
                    },
                    "api_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Version"
                    },
                    "deployment_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deployment Name"
                    }
                },
                "type": "object",
                "required": [
                    "provider_type"
                ],
                "title": "CloudEmbeddingProvider"
            },
            "CloudEmbeddingProviderCreationRequest": {
                "properties": {
                    "provider_type": {
                        "$ref": "#/components/schemas/EmbeddingProvider"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Url"
                    },
                    "api_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Version"
                    },
                    "deployment_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deployment Name"
                    }
                },
                "type": "object",
                "required": [
                    "provider_type"
                ],
                "title": "CloudEmbeddingProviderCreationRequest"
            },
            "ConnectorCredentialPairDescriptor": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "connector": {
                        "$ref": "#/components/schemas/ConnectorSnapshot"
                    },
                    "credential": {
                        "$ref": "#/components/schemas/CredentialSnapshot"
                    },
                    "access_type": {
                        "$ref": "#/components/schemas/AccessType"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "connector",
                    "credential",
                    "access_type"
                ],
                "title": "ConnectorCredentialPairDescriptor"
            },
            "ConnectorCredentialPairIdentifier": {
                "properties": {
                    "connector_id": {
                        "type": "integer",
                        "title": "Connector Id"
                    },
                    "credential_id": {
                        "type": "integer",
                        "title": "Credential Id"
                    }
                },
                "type": "object",
                "required": [
                    "connector_id",
                    "credential_id"
                ],
                "title": "ConnectorCredentialPairIdentifier"
            },
            "ConnectorCredentialPairMetadata": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "access_type": {
                        "$ref": "#/components/schemas/AccessType"
                    },
                    "auto_sync_options": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Auto Sync Options"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    }
                },
                "type": "object",
                "required": [
                    "access_type"
                ],
                "title": "ConnectorCredentialPairMetadata"
            },
            "ConnectorCredentialPairStatus": {
                "type": "string",
                "enum": [
                    "SCHEDULED",
                    "INITIAL_INDEXING",
                    "ACTIVE",
                    "PAUSED",
                    "DELETING",
                    "INVALID"
                ],
                "title": "ConnectorCredentialPairStatus"
            },
            "ConnectorIndexingStatus": {
                "properties": {
                    "cc_pair_id": {
                        "type": "integer",
                        "title": "Cc Pair Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "connector": {
                        "$ref": "#/components/schemas/ConnectorSnapshot"
                    },
                    "credential": {
                        "$ref": "#/components/schemas/CredentialSnapshot"
                    },
                    "access_type": {
                        "$ref": "#/components/schemas/AccessType"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "cc_pair_status": {
                        "$ref": "#/components/schemas/ConnectorCredentialPairStatus"
                    },
                    "in_repeated_error_state": {
                        "type": "boolean",
                        "title": "In Repeated Error State"
                    },
                    "owner": {
                        "type": "string",
                        "title": "Owner"
                    },
                    "last_finished_status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IndexingStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "last_status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IndexingStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "last_success": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Success"
                    },
                    "latest_index_attempt": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IndexAttemptSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "docs_indexed": {
                        "type": "integer",
                        "title": "Docs Indexed"
                    },
                    "in_progress": {
                        "type": "boolean",
                        "title": "In Progress"
                    }
                },
                "type": "object",
                "required": [
                    "cc_pair_id",
                    "name",
                    "connector",
                    "credential",
                    "access_type",
                    "groups",
                    "cc_pair_status",
                    "in_repeated_error_state",
                    "owner",
                    "last_finished_status",
                    "last_status",
                    "last_success",
                    "latest_index_attempt",
                    "docs_indexed",
                    "in_progress"
                ],
                "title": "ConnectorIndexingStatus",
                "description": "Represents the full indexing status of a connector"
            },
            "ConnectorSnapshot": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DocumentSource"
                    },
                    "input_type": {
                        "$ref": "#/components/schemas/InputType"
                    },
                    "connector_specific_config": {
                        "type": "object",
                        "title": "Connector Specific Config"
                    },
                    "refresh_freq": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refresh Freq"
                    },
                    "prune_freq": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prune Freq"
                    },
                    "indexing_start": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Indexing Start"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "credential_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Credential Ids"
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    },
                    "time_updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Updated"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "source",
                    "input_type",
                    "connector_specific_config",
                    "id",
                    "credential_ids",
                    "time_created",
                    "time_updated"
                ],
                "title": "ConnectorSnapshot"
            },
            "ConnectorStatus": {
                "properties": {
                    "cc_pair_id": {
                        "type": "integer",
                        "title": "Cc Pair Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "connector": {
                        "$ref": "#/components/schemas/ConnectorSnapshot"
                    },
                    "credential": {
                        "$ref": "#/components/schemas/CredentialSnapshot"
                    },
                    "access_type": {
                        "$ref": "#/components/schemas/AccessType"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    }
                },
                "type": "object",
                "required": [
                    "cc_pair_id",
                    "name",
                    "connector",
                    "credential",
                    "access_type",
                    "groups"
                ],
                "title": "ConnectorStatus",
                "description": "Represents the status of a connector,\nincluding indexing status elated information"
            },
            "ConnectorUpdateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DocumentSource"
                    },
                    "input_type": {
                        "$ref": "#/components/schemas/InputType"
                    },
                    "connector_specific_config": {
                        "type": "object",
                        "title": "Connector Specific Config"
                    },
                    "refresh_freq": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refresh Freq"
                    },
                    "prune_freq": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prune Freq"
                    },
                    "indexing_start": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Indexing Start"
                    },
                    "access_type": {
                        "$ref": "#/components/schemas/AccessType"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "source",
                    "input_type",
                    "connector_specific_config",
                    "access_type"
                ],
                "title": "ConnectorUpdateRequest"
            },
            "CreateAssistantRequest": {
                "properties": {
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "instructions": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions"
                    },
                    "tools": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tools"
                    },
                    "file_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "File Ids"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "model"
                ],
                "title": "CreateAssistantRequest"
            },
            "CreateChatMessageRequest": {
                "properties": {
                    "chunks_above": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Above"
                    },
                    "chunks_below": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Below"
                    },
                    "full_doc": {
                        "type": "boolean",
                        "title": "Full Doc",
                        "default": false
                    },
                    "chat_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Chat Session Id"
                    },
                    "parent_message_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Message Id"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "file_descriptors": {
                        "items": {
                            "$ref": "#/components/schemas/FileDescriptor"
                        },
                        "type": "array",
                        "title": "File Descriptors"
                    },
                    "user_file_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "User File Ids",
                        "default": []
                    },
                    "user_folder_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "User Folder Ids",
                        "default": []
                    },
                    "prompt_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Id"
                    },
                    "search_doc_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Search Doc Ids"
                    },
                    "retrieval_options": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RetrievalDetails"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "rerank_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RerankingDetails"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "query_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Query Override"
                    },
                    "regenerate": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Regenerate"
                    },
                    "llm_override": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/LLMOverride"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "prompt_override": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PromptOverride"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "temperature_override": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature Override"
                    },
                    "alternate_assistant_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Alternate Assistant Id"
                    },
                    "persona_override_config": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PersonaOverrideConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "use_existing_user_message": {
                        "type": "boolean",
                        "title": "Use Existing User Message",
                        "default": false
                    },
                    "existing_assistant_message_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Existing Assistant Message Id"
                    },
                    "structured_response_format": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Structured Response Format"
                    },
                    "use_agentic_search": {
                        "type": "boolean",
                        "title": "Use Agentic Search",
                        "default": false
                    },
                    "skip_gen_ai_answer_generation": {
                        "type": "boolean",
                        "title": "Skip Gen Ai Answer Generation",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "chat_session_id",
                    "parent_message_id",
                    "message",
                    "file_descriptors",
                    "prompt_id",
                    "search_doc_ids",
                    "retrieval_options"
                ],
                "title": "CreateChatMessageRequest",
                "description": "Before creating messages, be sure to create a chat_session and get an id"
            },
            "CreateChatSessionID": {
                "properties": {
                    "chat_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Chat Session Id"
                    }
                },
                "type": "object",
                "title": "CreateChatSessionID"
            },
            "CreateFileFromLinkRequest": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    },
                    "folder_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Id"
                    }
                },
                "type": "object",
                "required": [
                    "url",
                    "folder_id"
                ],
                "title": "CreateFileFromLinkRequest"
            },
            "CreateInputPromptRequest": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    }
                },
                "type": "object",
                "required": [
                    "prompt",
                    "content",
                    "is_public"
                ],
                "title": "CreateInputPromptRequest"
            },
            "CreateMessageRequest": {
                "properties": {
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "assistant"
                        ],
                        "title": "Role"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "file_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "File Ids",
                        "default": []
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "role",
                    "content"
                ],
                "title": "CreateMessageRequest"
            },
            "CreateThreadRequest": {
                "properties": {
                    "messages": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Messages"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "title": "CreateThreadRequest"
            },
            "CredentialBase": {
                "properties": {
                    "credential_json": {
                        "type": "object",
                        "title": "Credential Json"
                    },
                    "admin_public": {
                        "type": "boolean",
                        "title": "Admin Public"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DocumentSource"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "curator_public": {
                        "type": "boolean",
                        "title": "Curator Public",
                        "default": false
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "is_user_file": {
                        "type": "boolean",
                        "title": "Is User File",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "credential_json",
                    "admin_public",
                    "source"
                ],
                "title": "CredentialBase"
            },
            "CredentialDataUpdateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "credential_json": {
                        "type": "object",
                        "title": "Credential Json"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "credential_json"
                ],
                "title": "CredentialDataUpdateRequest"
            },
            "CredentialSchemaResponse": {
                "properties": {
                    "credentials": {
                        "type": "object",
                        "title": "Credentials"
                    }
                },
                "type": "object",
                "title": "CredentialSchemaResponse",
                "description": "Response for credential schema specification"
            },
            "CredentialSnapshot": {
                "properties": {
                    "credential_json": {
                        "type": "object",
                        "title": "Credential Json"
                    },
                    "admin_public": {
                        "type": "boolean",
                        "title": "Admin Public"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DocumentSource"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "curator_public": {
                        "type": "boolean",
                        "title": "Curator Public",
                        "default": false
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "is_user_file": {
                        "type": "boolean",
                        "title": "Is User File",
                        "default": false
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    },
                    "user_email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Email"
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    },
                    "time_updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Updated"
                    }
                },
                "type": "object",
                "title": "CredentialSnapshot"
            },
            "CredentialSwapRequest": {
                "properties": {
                    "new_credential_id": {
                        "type": "integer",
                        "title": "New Credential Id"
                    },
                    "connector_id": {
                        "type": "integer",
                        "title": "Connector Id"
                    },
                    "access_type": {
                        "$ref": "#/components/schemas/AccessType"
                    }
                },
                "type": "object",
                "required": [
                    "new_credential_id",
                    "connector_id",
                    "access_type"
                ],
                "title": "CredentialSwapRequest"
            },
            "CustomConfigKey": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "title": "Display Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "is_required": {
                        "type": "boolean",
                        "title": "Is Required",
                        "default": true
                    },
                    "is_secret": {
                        "type": "boolean",
                        "title": "Is Secret",
                        "default": false
                    },
                    "key_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomConfigKeyType"
                            }
                        ],
                        "default": "text_input"
                    },
                    "default_value": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Value"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "display_name"
                ],
                "title": "CustomConfigKey"
            },
            "CustomConfigKeyType": {
                "type": "string",
                "enum": [
                    "text_input",
                    "file_input"
                ],
                "title": "CustomConfigKeyType"
            },
            "CustomToolCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "definition": {
                        "type": "object",
                        "title": "Definition"
                    },
                    "custom_headers": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Header"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Headers"
                    },
                    "passthrough_auth": {
                        "type": "boolean",
                        "title": "Passthrough Auth"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "definition",
                    "passthrough_auth"
                ],
                "title": "CustomToolCreate"
            },
            "CustomToolUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "definition": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Definition"
                    },
                    "custom_headers": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Header"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Headers"
                    },
                    "passthrough_auth": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Passthrough Auth"
                    }
                },
                "type": "object",
                "title": "CustomToolUpdate"
            },
            "DeleteAssistantResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "assistant.deleted"
                    },
                    "deleted": {
                        "type": "boolean",
                        "title": "Deleted"
                    }
                },
                "type": "object",
                "title": "DeleteAssistantResponse"
            },
            "DeleteFolderOptions": {
                "properties": {
                    "including_chats": {
                        "type": "boolean",
                        "title": "Including Chats",
                        "default": false
                    }
                },
                "type": "object",
                "title": "DeleteFolderOptions"
            },
            "DeletionAttemptSnapshot": {
                "properties": {
                    "connector_id": {
                        "type": "integer",
                        "title": "Connector Id"
                    },
                    "credential_id": {
                        "type": "integer",
                        "title": "Credential Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TaskStatus"
                    }
                },
                "type": "object",
                "required": [
                    "connector_id",
                    "credential_id",
                    "status"
                ],
                "title": "DeletionAttemptSnapshot"
            },
            "DisableKGConfigRequest": {
                "properties": {},
                "additionalProperties": false,
                "type": "object",
                "title": "DisableKGConfigRequest"
            },
            "DisplayPriorityRequest": {
                "properties": {
                    "display_priority_map": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "type": "object",
                        "title": "Display Priority Map"
                    }
                },
                "type": "object",
                "required": [
                    "display_priority_map"
                ],
                "title": "DisplayPriorityRequest"
            },
            "DocMinimalInfo": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "semantic_id": {
                        "type": "string",
                        "title": "Semantic Id"
                    },
                    "link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Link"
                    }
                },
                "type": "object",
                "title": "DocMinimalInfo"
            },
            "DocumentBase": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "sections": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/TextSection"
                                },
                                {
                                    "$ref": "#/components/schemas/ImageSection"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Sections"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DocumentSource"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "semantic_identifier": {
                        "type": "string",
                        "title": "Semantic Identifier"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "doc_updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Doc Updated At"
                    },
                    "chunk_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunk Count"
                    },
                    "primary_owners": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BasicExpertInfo"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Primary Owners"
                    },
                    "secondary_owners": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/BasicExpertInfo"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secondary Owners"
                    },
                    "title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Title"
                    },
                    "from_ingestion_api": {
                        "type": "boolean",
                        "title": "From Ingestion Api",
                        "default": false
                    },
                    "additional_info": {
                        "title": "Additional Info"
                    },
                    "external_access": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ExternalAccess"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "doc_metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Doc Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "sections",
                    "semantic_identifier",
                    "metadata"
                ],
                "title": "DocumentBase",
                "description": "Used for Onyx ingestion api, the ID is inferred before use if not provided"
            },
            "DocumentInfo": {
                "properties": {
                    "num_chunks": {
                        "type": "integer",
                        "title": "Num Chunks"
                    },
                    "num_tokens": {
                        "type": "integer",
                        "title": "Num Tokens"
                    }
                },
                "type": "object",
                "title": "DocumentInfo"
            },
            "DocumentSearchRequest": {
                "properties": {
                    "chunks_above": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Above"
                    },
                    "chunks_below": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Below"
                    },
                    "full_doc": {
                        "type": "boolean",
                        "title": "Full Doc",
                        "default": false
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "search_type": {
                        "$ref": "#/components/schemas/SearchType"
                    },
                    "retrieval_options": {
                        "$ref": "#/components/schemas/RetrievalDetails"
                    },
                    "recency_bias_multiplier": {
                        "type": "number",
                        "title": "Recency Bias Multiplier",
                        "default": 1.0
                    },
                    "evaluation_type": {
                        "$ref": "#/components/schemas/LLMEvaluationType"
                    },
                    "rerank_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RerankingDetails"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "search_type",
                    "retrieval_options",
                    "evaluation_type"
                ],
                "title": "DocumentSearchRequest"
            },
            "DocumentSearchResponse": {
                "properties": {
                    "top_documents": {
                        "items": {
                            "$ref": "#/components/schemas/SavedSearchDocWithContent"
                        },
                        "type": "array",
                        "title": "Top Documents"
                    },
                    "llm_indices": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Llm Indices"
                    }
                },
                "type": "object",
                "title": "DocumentSearchResponse"
            },
            "DocumentSet": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "cc_pair_descriptors": {
                        "items": {
                            "$ref": "#/components/schemas/ConnectorCredentialPairDescriptor"
                        },
                        "type": "array",
                        "title": "Cc Pair Descriptors"
                    },
                    "is_up_to_date": {
                        "type": "boolean",
                        "title": "Is Up To Date"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "users": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "federated_connectors": {
                        "items": {
                            "$ref": "#/components/schemas/FederatedConnectorDescriptor"
                        },
                        "type": "array",
                        "title": "Federated Connectors"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "description",
                    "cc_pair_descriptors",
                    "is_up_to_date",
                    "is_public",
                    "users",
                    "groups"
                ],
                "title": "DocumentSet"
            },
            "DocumentSetCreationRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "cc_pair_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Cc Pair Ids"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "users": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "federated_connectors": {
                        "items": {
                            "$ref": "#/components/schemas/FederatedConnectorConfig"
                        },
                        "type": "array",
                        "title": "Federated Connectors"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "cc_pair_ids",
                    "is_public"
                ],
                "title": "DocumentSetCreationRequest"
            },
            "DocumentSetSummary": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "cc_pair_summaries": {
                        "items": {
                            "$ref": "#/components/schemas/CCPairSummary"
                        },
                        "type": "array",
                        "title": "Cc Pair Summaries"
                    },
                    "is_up_to_date": {
                        "type": "boolean",
                        "title": "Is Up To Date"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "users": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "federated_connector_summaries": {
                        "items": {
                            "$ref": "#/components/schemas/FederatedConnectorSummary"
                        },
                        "type": "array",
                        "title": "Federated Connector Summaries"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "description",
                    "cc_pair_summaries",
                    "is_up_to_date",
                    "is_public",
                    "users",
                    "groups"
                ],
                "title": "DocumentSetSummary",
                "description": "Simplified document set model with minimal data for list views"
            },
            "DocumentSetUpdateRequest": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "cc_pair_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Cc Pair Ids"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "users": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "federated_connectors": {
                        "items": {
                            "$ref": "#/components/schemas/FederatedConnectorConfig"
                        },
                        "type": "array",
                        "title": "Federated Connectors"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "description",
                    "cc_pair_ids",
                    "is_public",
                    "users",
                    "groups"
                ],
                "title": "DocumentSetUpdateRequest"
            },
            "DocumentSource": {
                "type": "string",
                "enum": [
                    "ingestion_api",
                    "slack",
                    "web",
                    "google_drive",
                    "gmail",
                    "requesttracker",
                    "github",
                    "gitbook",
                    "gitlab",
                    "guru",
                    "bookstack",
                    "confluence",
                    "jira",
                    "slab",
                    "productboard",
                    "file",
                    "notion",
                    "zulip",
                    "linear",
                    "hubspot",
                    "document360",
                    "gong",
                    "google_sites",
                    "zendesk",
                    "loopio",
                    "dropbox",
                    "sharepoint",
                    "teams",
                    "salesforce",
                    "discourse",
                    "axero",
                    "clickup",
                    "mediawiki",
                    "wikipedia",
                    "asana",
                    "s3",
                    "r2",
                    "google_cloud_storage",
                    "oci_storage",
                    "xenforo",
                    "not_applicable",
                    "discord",
                    "freshdesk",
                    "fireflies",
                    "egnyte",
                    "airtable",
                    "highspot",
                    "imap",
                    "mock_connector"
                ],
                "title": "DocumentSource"
            },
            "DocumentSyncStatus": {
                "properties": {
                    "doc_id": {
                        "type": "string",
                        "title": "Doc Id"
                    },
                    "last_synced": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Synced"
                    },
                    "last_modified": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Modified"
                    }
                },
                "type": "object",
                "required": [
                    "doc_id",
                    "last_synced",
                    "last_modified"
                ],
                "title": "DocumentSyncStatus"
            },
            "EmbeddingModelDetail": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "model_name": {
                        "type": "string",
                        "title": "Model Name"
                    },
                    "normalize": {
                        "type": "boolean",
                        "title": "Normalize"
                    },
                    "query_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Query Prefix"
                    },
                    "passage_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Passage Prefix"
                    },
                    "api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Url"
                    },
                    "provider_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EmbeddingProvider"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    }
                },
                "type": "object",
                "required": [
                    "model_name",
                    "normalize",
                    "query_prefix",
                    "passage_prefix"
                ],
                "title": "EmbeddingModelDetail"
            },
            "EmbeddingPrecision": {
                "type": "string",
                "enum": [
                    "bfloat16",
                    "float"
                ],
                "title": "EmbeddingPrecision"
            },
            "EmbeddingProvider": {
                "type": "string",
                "enum": [
                    "openai",
                    "cohere",
                    "voyage",
                    "google",
                    "litellm",
                    "azure"
                ],
                "title": "EmbeddingProvider"
            },
            "EnableKGConfigRequest": {
                "properties": {
                    "vendor": {
                        "type": "string",
                        "title": "Vendor"
                    },
                    "vendor_domains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Vendor Domains"
                    },
                    "ignore_domains": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Ignore Domains",
                        "default": []
                    },
                    "coverage_start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Coverage Start"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "vendor",
                    "vendor_domains",
                    "coverage_start"
                ],
                "title": "EnableKGConfigRequest"
            },
            "EnterpriseSettings": {
                "properties": {
                    "application_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Application Name"
                    },
                    "use_custom_logo": {
                        "type": "boolean",
                        "title": "Use Custom Logo",
                        "default": false
                    },
                    "use_custom_logotype": {
                        "type": "boolean",
                        "title": "Use Custom Logotype",
                        "default": false
                    },
                    "custom_nav_items": {
                        "items": {
                            "$ref": "#/components/schemas/NavigationItem"
                        },
                        "type": "array",
                        "title": "Custom Nav Items"
                    },
                    "two_lines_for_chat_header": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Two Lines For Chat Header"
                    },
                    "custom_lower_disclaimer_content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Lower Disclaimer Content"
                    },
                    "custom_header_content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Header Content"
                    },
                    "custom_popup_header": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Popup Header"
                    },
                    "custom_popup_content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Popup Content"
                    },
                    "enable_consent_screen": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enable Consent Screen"
                    }
                },
                "type": "object",
                "title": "EnterpriseSettings",
                "description": "General settings that only apply to the Enterprise Edition of Onyx\n\nNOTE: don't put anything sensitive in here, as this is accessible without auth."
            },
            "EntitySpecResponse": {
                "properties": {
                    "entities": {
                        "type": "object",
                        "title": "Entities"
                    }
                },
                "type": "object",
                "title": "EntitySpecResponse",
                "description": "Response for entity specification"
            },
            "EntityType": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "grounded_source_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grounded Source Name"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "active"
                ],
                "title": "EntityType"
            },
            "ErrorModel": {
                "properties": {
                    "detail": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            }
                        ],
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "ErrorModel"
            },
            "ExternalAccess": {
                "properties": {
                    "external_user_emails": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true,
                        "title": "External User Emails"
                    },
                    "external_user_group_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true,
                        "title": "External User Group Ids"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    }
                },
                "type": "object",
                "required": [
                    "external_user_emails",
                    "external_user_group_ids",
                    "is_public"
                ],
                "title": "ExternalAccess"
            },
            "FailedConnectorIndexingStatus": {
                "properties": {
                    "cc_pair_id": {
                        "type": "integer",
                        "title": "Cc Pair Id"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "error_msg": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Msg"
                    },
                    "is_deletable": {
                        "type": "boolean",
                        "title": "Is Deletable"
                    },
                    "connector_id": {
                        "type": "integer",
                        "title": "Connector Id"
                    },
                    "credential_id": {
                        "type": "integer",
                        "title": "Credential Id"
                    }
                },
                "type": "object",
                "required": [
                    "cc_pair_id",
                    "name",
                    "error_msg",
                    "is_deletable",
                    "connector_id",
                    "credential_id"
                ],
                "title": "FailedConnectorIndexingStatus",
                "description": "Simplified version of ConnectorIndexingStatus for failed indexing attempts"
            },
            "FederatedConnectorConfig": {
                "properties": {
                    "federated_connector_id": {
                        "type": "integer",
                        "title": "Federated Connector Id"
                    },
                    "entities": {
                        "type": "object",
                        "title": "Entities"
                    }
                },
                "type": "object",
                "required": [
                    "federated_connector_id",
                    "entities"
                ],
                "title": "FederatedConnectorConfig",
                "description": "Configuration for adding a federated connector to a document set"
            },
            "FederatedConnectorCredentials": {
                "properties": {
                    "client_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret"
                    },
                    "redirect_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Redirect Uri"
                    }
                },
                "type": "object",
                "title": "FederatedConnectorCredentials",
                "description": "Credentials for federated connector"
            },
            "FederatedConnectorDescriptor": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "source": {
                        "type": "string",
                        "title": "Source"
                    },
                    "entities": {
                        "type": "object",
                        "title": "Entities"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "source",
                    "entities"
                ],
                "title": "FederatedConnectorDescriptor",
                "description": "Descriptor for a federated connector in a document set"
            },
            "FederatedConnectorDetail": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "source": {
                        "$ref": "#/components/schemas/FederatedConnectorSource"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/FederatedConnectorCredentials"
                    },
                    "oauth_token_exists": {
                        "type": "boolean",
                        "title": "Oauth Token Exists"
                    },
                    "oauth_token_expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Oauth Token Expires At"
                    },
                    "document_sets": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Document Sets"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "source",
                    "name",
                    "credentials",
                    "oauth_token_exists"
                ],
                "title": "FederatedConnectorDetail"
            },
            "FederatedConnectorRequest": {
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/FederatedConnectorSource"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/FederatedConnectorCredentials"
                    }
                },
                "type": "object",
                "required": [
                    "source",
                    "credentials"
                ],
                "title": "FederatedConnectorRequest"
            },
            "FederatedConnectorResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "source": {
                        "$ref": "#/components/schemas/FederatedConnectorSource"
                    }
                },
                "type": "object",
                "title": "FederatedConnectorResponse"
            },
            "FederatedConnectorSource": {
                "type": "string",
                "enum": [
                    "federated_slack"
                ],
                "const": "federated_slack",
                "title": "FederatedConnectorSource"
            },
            "FederatedConnectorStatus": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "source": {
                        "$ref": "#/components/schemas/FederatedConnectorSource"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "source",
                    "name"
                ],
                "title": "FederatedConnectorStatus"
            },
            "FederatedConnectorSummary": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "source": {
                        "$ref": "#/components/schemas/FederatedConnectorSource"
                    },
                    "entities": {
                        "type": "object",
                        "title": "Entities"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "source",
                    "entities"
                ],
                "title": "FederatedConnectorSummary",
                "description": "Simplified federated connector information with just essential data"
            },
            "FederatedConnectorUpdateRequest": {
                "properties": {
                    "credentials": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/FederatedConnectorCredentials"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "FederatedConnectorUpdateRequest"
            },
            "FileDescriptor": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ChatFileType"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    }
                },
                "type": "object",
                "title": "FileDescriptor",
                "description": "NOTE: is a `TypedDict` so it can be used as a type hint for a JSONB column\nin Postgres"
            },
            "FileMoveRequest": {
                "properties": {
                    "new_folder_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "New Folder Id"
                    }
                },
                "type": "object",
                "required": [
                    "new_folder_id"
                ],
                "title": "FileMoveRequest"
            },
            "FileUploadResponse": {
                "properties": {
                    "file_paths": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "File Paths"
                    },
                    "file_names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "File Names"
                    },
                    "zip_metadata": {
                        "type": "object",
                        "title": "Zip Metadata"
                    }
                },
                "type": "object",
                "title": "FileUploadResponse"
            },
            "FolderChatSessionRequest": {
                "properties": {
                    "chat_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Chat Session Id"
                    }
                },
                "type": "object",
                "required": [
                    "chat_session_id"
                ],
                "title": "FolderChatSessionRequest"
            },
            "FullModelVersionResponse": {
                "properties": {
                    "current_settings": {
                        "$ref": "#/components/schemas/SavedSearchSettings"
                    },
                    "secondary_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SavedSearchSettings"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "FullModelVersionResponse"
            },
            "FullPersonaSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "is_visible": {
                        "type": "boolean",
                        "title": "Is Visible"
                    },
                    "icon_shape": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon Shape"
                    },
                    "icon_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon Color"
                    },
                    "uploaded_image_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Uploaded Image Id"
                    },
                    "user_file_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "User File Ids"
                    },
                    "user_folder_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "User Folder Ids"
                    },
                    "display_priority": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Display Priority"
                    },
                    "is_default_persona": {
                        "type": "boolean",
                        "title": "Is Default Persona"
                    },
                    "builtin_persona": {
                        "type": "boolean",
                        "title": "Builtin Persona"
                    },
                    "starter_messages": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/StarterMessage"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starter Messages"
                    },
                    "tools": {
                        "items": {
                            "$ref": "#/components/schemas/ToolSnapshot"
                        },
                        "type": "array",
                        "title": "Tools"
                    },
                    "labels": {
                        "items": {
                            "$ref": "#/components/schemas/PersonaLabelSnapshot"
                        },
                        "type": "array",
                        "title": "Labels"
                    },
                    "owner": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MinimalUserSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/MinimalUserSnapshot"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "document_sets": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSetSummary"
                        },
                        "type": "array",
                        "title": "Document Sets"
                    },
                    "llm_model_provider_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Provider Override"
                    },
                    "llm_model_version_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Version Override"
                    },
                    "num_chunks": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Num Chunks"
                    },
                    "search_start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Search Start Date"
                    },
                    "prompts": {
                        "items": {
                            "$ref": "#/components/schemas/PromptSnapshot"
                        },
                        "type": "array",
                        "title": "Prompts"
                    },
                    "llm_relevance_filter": {
                        "type": "boolean",
                        "title": "Llm Relevance Filter",
                        "default": false
                    },
                    "llm_filter_extraction": {
                        "type": "boolean",
                        "title": "Llm Filter Extraction",
                        "default": false
                    }
                },
                "type": "object",
                "title": "FullPersonaSnapshot"
            },
            "FullUserSnapshot": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "password_configured": {
                        "type": "boolean",
                        "title": "Password Configured"
                    }
                },
                "type": "object",
                "title": "FullUserSnapshot"
            },
            "GenerateStarterMessageRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "instructions": {
                        "type": "string",
                        "title": "Instructions"
                    },
                    "document_set_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Document Set Ids"
                    },
                    "generation_count": {
                        "type": "integer",
                        "title": "Generation Count"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "instructions",
                    "document_set_ids",
                    "generation_count"
                ],
                "title": "GenerateStarterMessageRequest"
            },
            "GenerateUsageReportParams": {
                "properties": {
                    "period_from": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Period From"
                    },
                    "period_to": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Period To"
                    }
                },
                "type": "object",
                "title": "GenerateUsageReportParams"
            },
            "GetUserFoldersResponse": {
                "properties": {
                    "folders": {
                        "items": {
                            "$ref": "#/components/schemas/onyx__server__features__folder__models__UserFolderSnapshot"
                        },
                        "type": "array",
                        "title": "Folders"
                    }
                },
                "type": "object",
                "title": "GetUserFoldersResponse"
            },
            "GoogleAppCredentials": {
                "properties": {
                    "web": {
                        "$ref": "#/components/schemas/GoogleAppWebCredentials"
                    }
                },
                "type": "object",
                "required": [
                    "web"
                ],
                "title": "GoogleAppCredentials"
            },
            "GoogleAppWebCredentials": {
                "properties": {
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    },
                    "project_id": {
                        "type": "string",
                        "title": "Project Id"
                    },
                    "auth_uri": {
                        "type": "string",
                        "title": "Auth Uri"
                    },
                    "token_uri": {
                        "type": "string",
                        "title": "Token Uri"
                    },
                    "auth_provider_x509_cert_url": {
                        "type": "string",
                        "title": "Auth Provider X509 Cert Url"
                    },
                    "client_secret": {
                        "type": "string",
                        "title": "Client Secret"
                    },
                    "redirect_uris": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Redirect Uris"
                    },
                    "javascript_origins": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Javascript Origins"
                    }
                },
                "type": "object",
                "required": [
                    "client_id",
                    "project_id",
                    "auth_uri",
                    "token_uri",
                    "auth_provider_x509_cert_url",
                    "client_secret",
                    "redirect_uris",
                    "javascript_origins"
                ],
                "title": "GoogleAppWebCredentials"
            },
            "GoogleServiceAccountCredentialRequest": {
                "properties": {
                    "google_primary_admin": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Google Primary Admin"
                    }
                },
                "type": "object",
                "title": "GoogleServiceAccountCredentialRequest"
            },
            "GoogleServiceAccountKey": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "project_id": {
                        "type": "string",
                        "title": "Project Id"
                    },
                    "private_key_id": {
                        "type": "string",
                        "title": "Private Key Id"
                    },
                    "private_key": {
                        "type": "string",
                        "title": "Private Key"
                    },
                    "client_email": {
                        "type": "string",
                        "title": "Client Email"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    },
                    "auth_uri": {
                        "type": "string",
                        "title": "Auth Uri"
                    },
                    "token_uri": {
                        "type": "string",
                        "title": "Token Uri"
                    },
                    "auth_provider_x509_cert_url": {
                        "type": "string",
                        "title": "Auth Provider X509 Cert Url"
                    },
                    "client_x509_cert_url": {
                        "type": "string",
                        "title": "Client X509 Cert Url"
                    },
                    "universe_domain": {
                        "type": "string",
                        "title": "Universe Domain"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "project_id",
                    "private_key_id",
                    "private_key",
                    "client_email",
                    "client_id",
                    "auth_uri",
                    "token_uri",
                    "auth_provider_x509_cert_url",
                    "client_x509_cert_url",
                    "universe_domain"
                ],
                "title": "GoogleServiceAccountKey"
            },
            "GptDocChunk": {
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "source_type": {
                        "type": "string",
                        "title": "Source Type"
                    },
                    "link": {
                        "type": "string",
                        "title": "Link"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "document_age": {
                        "type": "string",
                        "title": "Document Age"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "content",
                    "source_type",
                    "link",
                    "metadata",
                    "document_age"
                ],
                "title": "GptDocChunk"
            },
            "GptSearchRequest": {
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Query"
                    }
                },
                "type": "object",
                "required": [
                    "query"
                ],
                "title": "GptSearchRequest"
            },
            "GptSearchResponse": {
                "properties": {
                    "matching_document_chunks": {
                        "items": {
                            "$ref": "#/components/schemas/GptDocChunk"
                        },
                        "type": "array",
                        "title": "Matching Document Chunks"
                    }
                },
                "type": "object",
                "title": "GptSearchResponse"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Header": {
                "properties": {
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "value"
                ],
                "title": "Header"
            },
            "HiddenUpdateRequest": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "hidden": {
                        "type": "boolean",
                        "title": "Hidden"
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "hidden"
                ],
                "title": "HiddenUpdateRequest"
            },
            "IdReturn": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "IdReturn"
            },
            "ImageGenerationToolStatus": {
                "properties": {
                    "is_available": {
                        "type": "boolean",
                        "title": "Is Available"
                    }
                },
                "type": "object",
                "required": [
                    "is_available"
                ],
                "title": "ImageGenerationToolStatus"
            },
            "ImageSection": {
                "properties": {
                    "link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Link"
                    },
                    "text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Text"
                    },
                    "image_file_id": {
                        "type": "string",
                        "title": "Image File Id"
                    }
                },
                "type": "object",
                "required": [
                    "image_file_id"
                ],
                "title": "ImageSection",
                "description": "Section containing an image reference"
            },
            "ImpersonateRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "ImpersonateRequest"
            },
            "IndexAttemptErrorPydantic": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "connector_credential_pair_id": {
                        "type": "integer",
                        "title": "Connector Credential Pair Id"
                    },
                    "document_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Document Id"
                    },
                    "document_link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Document Link"
                    },
                    "entity_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Entity Id"
                    },
                    "failed_time_range_start": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Failed Time Range Start"
                    },
                    "failed_time_range_end": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Failed Time Range End"
                    },
                    "failure_message": {
                        "type": "string",
                        "title": "Failure Message"
                    },
                    "is_resolved": {
                        "type": "boolean",
                        "title": "Is Resolved",
                        "default": false
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    },
                    "index_attempt_id": {
                        "type": "integer",
                        "title": "Index Attempt Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "connector_credential_pair_id",
                    "document_id",
                    "document_link",
                    "entity_id",
                    "failed_time_range_start",
                    "failed_time_range_end",
                    "failure_message",
                    "time_created",
                    "index_attempt_id"
                ],
                "title": "IndexAttemptErrorPydantic"
            },
            "IndexAttemptSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IndexingStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "from_beginning": {
                        "type": "boolean",
                        "title": "From Beginning"
                    },
                    "new_docs_indexed": {
                        "type": "integer",
                        "title": "New Docs Indexed"
                    },
                    "total_docs_indexed": {
                        "type": "integer",
                        "title": "Total Docs Indexed"
                    },
                    "docs_removed_from_index": {
                        "type": "integer",
                        "title": "Docs Removed From Index"
                    },
                    "error_msg": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Msg"
                    },
                    "error_count": {
                        "type": "integer",
                        "title": "Error Count"
                    },
                    "full_exception_trace": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Full Exception Trace"
                    },
                    "time_started": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Time Started"
                    },
                    "time_updated": {
                        "type": "string",
                        "title": "Time Updated"
                    },
                    "poll_range_start": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Poll Range Start"
                    },
                    "poll_range_end": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Poll Range End"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "status",
                    "from_beginning",
                    "new_docs_indexed",
                    "total_docs_indexed",
                    "docs_removed_from_index",
                    "error_msg",
                    "error_count",
                    "full_exception_trace",
                    "time_started",
                    "time_updated"
                ],
                "title": "IndexAttemptSnapshot"
            },
            "IndexingStatus": {
                "type": "string",
                "enum": [
                    "not_started",
                    "in_progress",
                    "success",
                    "canceled",
                    "failed",
                    "completed_with_errors"
                ],
                "title": "IndexingStatus"
            },
            "IngestionDocument": {
                "properties": {
                    "document": {
                        "$ref": "#/components/schemas/DocumentBase"
                    },
                    "cc_pair_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cc Pair Id"
                    }
                },
                "type": "object",
                "required": [
                    "document"
                ],
                "title": "IngestionDocument"
            },
            "IngestionResult": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "already_existed": {
                        "type": "boolean",
                        "title": "Already Existed"
                    }
                },
                "type": "object",
                "title": "IngestionResult"
            },
            "InputPromptSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "prompt",
                    "content",
                    "active",
                    "user_id",
                    "is_public"
                ],
                "title": "InputPromptSnapshot"
            },
            "InputType": {
                "type": "string",
                "enum": [
                    "load_state",
                    "poll",
                    "event",
                    "slim_retrieval"
                ],
                "title": "InputType"
            },
            "InvitedUserSnapshot": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "InvitedUserSnapshot"
            },
            "IsDefaultRequest": {
                "properties": {
                    "is_default_persona": {
                        "type": "boolean",
                        "title": "Is Default Persona"
                    }
                },
                "type": "object",
                "required": [
                    "is_default_persona"
                ],
                "title": "IsDefaultRequest"
            },
            "IsPublicRequest": {
                "properties": {
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    }
                },
                "type": "object",
                "required": [
                    "is_public"
                ],
                "title": "IsPublicRequest"
            },
            "IsVisibleRequest": {
                "properties": {
                    "is_visible": {
                        "type": "boolean",
                        "title": "Is Visible"
                    }
                },
                "type": "object",
                "required": [
                    "is_visible"
                ],
                "title": "IsVisibleRequest"
            },
            "KGConfig": {
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled"
                    },
                    "vendor": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Vendor"
                    },
                    "vendor_domains": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Vendor Domains"
                    },
                    "ignore_domains": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ignore Domains"
                    },
                    "coverage_start": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Coverage Start"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "vendor",
                    "vendor_domains",
                    "ignore_domains",
                    "coverage_start"
                ],
                "title": "KGConfig"
            },
            "LLMCost": {
                "properties": {
                    "provider": {
                        "type": "string",
                        "title": "Provider"
                    },
                    "model_name": {
                        "type": "string",
                        "title": "Model Name"
                    },
                    "cost": {
                        "type": "number",
                        "title": "Cost"
                    }
                },
                "type": "object",
                "required": [
                    "provider",
                    "model_name",
                    "cost"
                ],
                "title": "LLMCost"
            },
            "LLMEvaluationType": {
                "type": "string",
                "enum": [
                    "agentic",
                    "basic",
                    "skip",
                    "unspecified"
                ],
                "title": "LLMEvaluationType"
            },
            "LLMOverride": {
                "properties": {
                    "model_provider": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model Provider"
                    },
                    "model_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model Version"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature"
                    }
                },
                "type": "object",
                "title": "LLMOverride"
            },
            "LLMProviderDescriptor": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider"
                    },
                    "default_model_name": {
                        "type": "string",
                        "title": "Default Model Name"
                    },
                    "fast_default_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Fast Default Model Name"
                    },
                    "is_default_provider": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Default Provider"
                    },
                    "is_default_vision_provider": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Default Vision Provider"
                    },
                    "default_vision_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Vision Model"
                    },
                    "model_configurations": {
                        "items": {
                            "$ref": "#/components/schemas/ModelConfigurationView"
                        },
                        "type": "array",
                        "title": "Model Configurations"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "provider",
                    "default_model_name",
                    "fast_default_model_name",
                    "is_default_provider",
                    "is_default_vision_provider",
                    "default_vision_model",
                    "model_configurations"
                ],
                "title": "LLMProviderDescriptor",
                "description": "A descriptor for an LLM provider that can be safely viewed by\nnon-admin users. Used when giving a list of available LLMs."
            },
            "LLMProviderUpsertRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "api_base": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Base"
                    },
                    "api_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Version"
                    },
                    "custom_config": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Config"
                    },
                    "default_model_name": {
                        "type": "string",
                        "title": "Default Model Name"
                    },
                    "fast_default_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Fast Default Model Name"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public",
                        "default": true
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "deployment_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deployment Name"
                    },
                    "default_vision_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Vision Model"
                    },
                    "api_key_changed": {
                        "type": "boolean",
                        "title": "Api Key Changed",
                        "default": false
                    },
                    "model_configurations": {
                        "items": {
                            "$ref": "#/components/schemas/ModelConfigurationUpsertRequest"
                        },
                        "type": "array",
                        "title": "Model Configurations",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "provider",
                    "default_model_name"
                ],
                "title": "LLMProviderUpsertRequest"
            },
            "LLMProviderView": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "api_base": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Base"
                    },
                    "api_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Version"
                    },
                    "custom_config": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Config"
                    },
                    "default_model_name": {
                        "type": "string",
                        "title": "Default Model Name"
                    },
                    "fast_default_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Fast Default Model Name"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public",
                        "default": true
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "deployment_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deployment Name"
                    },
                    "default_vision_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Vision Model"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "is_default_provider": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Default Provider"
                    },
                    "is_default_vision_provider": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Default Vision Provider"
                    },
                    "model_configurations": {
                        "items": {
                            "$ref": "#/components/schemas/ModelConfigurationView"
                        },
                        "type": "array",
                        "title": "Model Configurations"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "provider",
                    "default_model_name",
                    "id",
                    "model_configurations"
                ],
                "title": "LLMProviderView",
                "description": "Stripped down representation of LLMProvider for display / limited access info only"
            },
            "ListAssistantsResponse": {
                "properties": {
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "list"
                    },
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/AssistantObject"
                        },
                        "type": "array",
                        "title": "Data"
                    },
                    "first_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Id"
                    },
                    "last_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Id"
                    },
                    "has_more": {
                        "type": "boolean",
                        "title": "Has More"
                    }
                },
                "type": "object",
                "title": "ListAssistantsResponse"
            },
            "ListMessagesResponse": {
                "properties": {
                    "object": {
                        "type": "string",
                        "enum": [
                            "list"
                        ],
                        "const": "list",
                        "title": "Object",
                        "default": "list"
                    },
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/Message"
                        },
                        "type": "array",
                        "title": "Data"
                    },
                    "first_id": {
                        "type": "string",
                        "title": "First Id"
                    },
                    "last_id": {
                        "type": "string",
                        "title": "Last Id"
                    },
                    "has_more": {
                        "type": "boolean",
                        "title": "Has More"
                    }
                },
                "type": "object",
                "title": "ListMessagesResponse"
            },
            "MaxSelectedDocumentTokens": {
                "properties": {
                    "max_tokens": {
                        "type": "integer",
                        "title": "Max Tokens"
                    }
                },
                "type": "object",
                "required": [
                    "max_tokens"
                ],
                "title": "MaxSelectedDocumentTokens"
            },
            "Message": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "object": {
                        "type": "string",
                        "enum": [
                            "thread.message"
                        ],
                        "const": "thread.message",
                        "title": "Object",
                        "default": "thread.message"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At"
                    },
                    "thread_id": {
                        "type": "string",
                        "title": "Thread Id"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "assistant"
                        ],
                        "title": "Role"
                    },
                    "content": {
                        "items": {
                            "$ref": "#/components/schemas/MessageContent"
                        },
                        "type": "array",
                        "title": "Content"
                    },
                    "file_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "File Ids",
                        "default": []
                    },
                    "assistant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Assistant Id"
                    },
                    "run_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Run Id"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "thread_id",
                    "role",
                    "content"
                ],
                "title": "Message"
            },
            "MessageContent": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "text"
                        ],
                        "const": "text",
                        "title": "Type"
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "text"
                ],
                "title": "MessageContent"
            },
            "MessageResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "title": "MessageResponse"
            },
            "MessageSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "message_type": {
                        "$ref": "#/components/schemas/MessageType"
                    },
                    "documents": {
                        "items": {
                            "$ref": "#/components/schemas/AbridgedSearchDoc"
                        },
                        "type": "array",
                        "title": "Documents"
                    },
                    "feedback_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/QAFeedbackType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "feedback_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Feedback Text"
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "message",
                    "message_type",
                    "documents",
                    "feedback_type",
                    "feedback_text",
                    "time_created"
                ],
                "title": "MessageSnapshot"
            },
            "MessageType": {
                "type": "string",
                "enum": [
                    "system",
                    "user",
                    "assistant"
                ],
                "title": "MessageType"
            },
            "MethodSpec": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "summary": {
                        "type": "string",
                        "title": "Summary"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    },
                    "method": {
                        "type": "string",
                        "title": "Method"
                    },
                    "spec": {
                        "type": "object",
                        "title": "Spec"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "summary",
                    "path",
                    "method",
                    "spec"
                ],
                "title": "MethodSpec"
            },
            "MinimalPersonaSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "tools": {
                        "items": {
                            "$ref": "#/components/schemas/ToolSnapshot"
                        },
                        "type": "array",
                        "title": "Tools"
                    },
                    "starter_messages": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/StarterMessage"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starter Messages"
                    },
                    "document_sets": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSetSummary"
                        },
                        "type": "array",
                        "title": "Document Sets"
                    },
                    "llm_model_version_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Version Override"
                    },
                    "llm_model_provider_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Provider Override"
                    },
                    "uploaded_image_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Uploaded Image Id"
                    },
                    "icon_shape": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon Shape"
                    },
                    "icon_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon Color"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "is_visible": {
                        "type": "boolean",
                        "title": "Is Visible"
                    },
                    "display_priority": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Display Priority"
                    },
                    "is_default_persona": {
                        "type": "boolean",
                        "title": "Is Default Persona"
                    },
                    "builtin_persona": {
                        "type": "boolean",
                        "title": "Builtin Persona"
                    },
                    "labels": {
                        "items": {
                            "$ref": "#/components/schemas/PersonaLabelSnapshot"
                        },
                        "type": "array",
                        "title": "Labels"
                    },
                    "owner": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MinimalUserSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "MinimalPersonaSnapshot",
                "description": "Minimal persona model optimized for ChatPage.tsx - only includes fields actually used"
            },
            "MinimalUserSnapshot": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "title": "MinimalUserSnapshot"
            },
            "ModelConfigurationUpsertRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "is_visible": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Visible",
                        "default": false
                    },
                    "max_input_tokens": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Input Tokens"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "ModelConfigurationUpsertRequest"
            },
            "ModelConfigurationView": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "is_visible": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Visible",
                        "default": false
                    },
                    "max_input_tokens": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Input Tokens"
                    },
                    "supports_image_input": {
                        "type": "boolean",
                        "title": "Supports Image Input"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "supports_image_input"
                ],
                "title": "ModelConfigurationView"
            },
            "ModifyAssistantRequest": {
                "properties": {
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "instructions": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions"
                    },
                    "tools": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tools"
                    },
                    "file_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "File Ids"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "title": "ModifyAssistantRequest"
            },
            "ModifyMessageRequest": {
                "properties": {
                    "metadata": {
                        "type": "object",
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "metadata"
                ],
                "title": "ModifyMessageRequest"
            },
            "ModifyThreadRequest": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "title": "ModifyThreadRequest"
            },
            "NavigationItem": {
                "properties": {
                    "link": {
                        "type": "string",
                        "title": "Link"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "icon": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon"
                    },
                    "svg_logo": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Svg Logo"
                    }
                },
                "type": "object",
                "required": [
                    "link",
                    "title"
                ],
                "title": "NavigationItem"
            },
            "Notification": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "notif_type": {
                        "$ref": "#/components/schemas/NotificationType"
                    },
                    "dismissed": {
                        "type": "boolean",
                        "title": "Dismissed"
                    },
                    "last_shown": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Shown"
                    },
                    "first_shown": {
                        "type": "string",
                        "format": "date-time",
                        "title": "First Shown"
                    },
                    "additional_data": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Additional Data"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "notif_type",
                    "dismissed",
                    "last_shown",
                    "first_shown"
                ],
                "title": "Notification"
            },
            "NotificationType": {
                "type": "string",
                "enum": [
                    "reindex",
                    "persona_shared",
                    "two_day_trial_ending"
                ],
                "title": "NotificationType"
            },
            "OAuth2AuthorizeResponse": {
                "properties": {
                    "authorization_url": {
                        "type": "string",
                        "title": "Authorization Url"
                    }
                },
                "type": "object",
                "title": "OAuth2AuthorizeResponse"
            },
            "OAuthAdditionalKwargDescription": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "title": "Display Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "display_name",
                    "description"
                ],
                "title": "OAuthAdditionalKwargDescription"
            },
            "OAuthCallbackResult": {
                "properties": {
                    "access_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Access Token"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    },
                    "refresh_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refresh Token"
                    },
                    "token_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token Type"
                    },
                    "scope": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scope"
                    },
                    "source": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/FederatedConnectorSource"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "OAuthCallbackResult"
            },
            "OAuthDetails": {
                "properties": {
                    "oauth_enabled": {
                        "type": "boolean",
                        "title": "Oauth Enabled"
                    },
                    "additional_kwargs": {
                        "items": {
                            "$ref": "#/components/schemas/OAuthAdditionalKwargDescription"
                        },
                        "type": "array",
                        "title": "Additional Kwargs"
                    }
                },
                "type": "object",
                "required": [
                    "oauth_enabled",
                    "additional_kwargs"
                ],
                "title": "OAuthDetails"
            },
            "ObjectCreationIdResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "credential": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CredentialSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "ObjectCreationIdResponse"
            },
            "OneShotQARequest": {
                "properties": {
                    "chunks_above": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Above"
                    },
                    "chunks_below": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Below"
                    },
                    "full_doc": {
                        "type": "boolean",
                        "title": "Full Doc",
                        "default": false
                    },
                    "persona_override_config": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PersonaOverrideConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "persona_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Id"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/ThreadMessage"
                        },
                        "type": "array",
                        "title": "Messages"
                    },
                    "prompt_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Id"
                    },
                    "retrieval_options": {
                        "$ref": "#/components/schemas/RetrievalDetails"
                    },
                    "rerank_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RerankingDetails"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "return_contexts": {
                        "type": "boolean",
                        "title": "Return Contexts",
                        "default": false
                    },
                    "query_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Query Override"
                    },
                    "skip_gen_ai_answer_generation": {
                        "type": "boolean",
                        "title": "Skip Gen Ai Answer Generation",
                        "default": false
                    },
                    "use_agentic_search": {
                        "type": "boolean",
                        "title": "Use Agentic Search",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "messages"
                ],
                "title": "OneShotQARequest"
            },
            "OneShotQAResponse": {
                "properties": {
                    "answer": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Answer"
                    },
                    "rephrase": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rephrase"
                    },
                    "citations": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/CitationInfo"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Citations"
                    },
                    "docs": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/QADocsResponse"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "llm_selected_doc_indices": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Selected Doc Indices"
                    },
                    "error_msg": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Msg"
                    },
                    "chat_message_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chat Message Id"
                    }
                },
                "type": "object",
                "title": "OneShotQAResponse"
            },
            "OnyxbotAnalyticsResponse": {
                "properties": {
                    "total_queries": {
                        "type": "integer",
                        "title": "Total Queries"
                    },
                    "auto_resolved": {
                        "type": "integer",
                        "title": "Auto Resolved"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    }
                },
                "type": "object",
                "title": "OnyxbotAnalyticsResponse"
            },
            "OptionalSearchSetting": {
                "type": "string",
                "enum": [
                    "always",
                    "never",
                    "auto"
                ],
                "title": "OptionalSearchSetting"
            },
            "PaginatedReturn_ChatSessionMinimal_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/ChatSessionMinimal"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total_items": {
                        "type": "integer",
                        "title": "Total Items"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total_items"
                ],
                "title": "PaginatedReturn[ChatSessionMinimal]"
            },
            "PaginatedReturn_FullUserSnapshot_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/FullUserSnapshot"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total_items": {
                        "type": "integer",
                        "title": "Total Items"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total_items"
                ],
                "title": "PaginatedReturn[FullUserSnapshot]"
            },
            "PaginatedReturn_IndexAttemptErrorPydantic_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/IndexAttemptErrorPydantic"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total_items": {
                        "type": "integer",
                        "title": "Total Items"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total_items"
                ],
                "title": "PaginatedReturn[IndexAttemptErrorPydantic]"
            },
            "PaginatedReturn_IndexAttemptSnapshot_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/IndexAttemptSnapshot"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total_items": {
                        "type": "integer",
                        "title": "Total Items"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total_items"
                ],
                "title": "PaginatedReturn[IndexAttemptSnapshot]"
            },
            "PendingUserSnapshot": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "PendingUserSnapshot"
            },
            "PersonaLabelCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "PersonaLabelCreate"
            },
            "PersonaLabelPatchRequest": {
                "properties": {
                    "label_name": {
                        "type": "string",
                        "title": "Label Name"
                    }
                },
                "type": "object",
                "required": [
                    "label_name"
                ],
                "title": "PersonaLabelPatchRequest"
            },
            "PersonaLabelResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "title": "PersonaLabelResponse"
            },
            "PersonaLabelSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "PersonaLabelSnapshot"
            },
            "PersonaMessageAnalyticsResponse": {
                "properties": {
                    "total_messages": {
                        "type": "integer",
                        "title": "Total Messages"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    },
                    "persona_id": {
                        "type": "integer",
                        "title": "Persona Id"
                    }
                },
                "type": "object",
                "title": "PersonaMessageAnalyticsResponse"
            },
            "PersonaOverrideConfig": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "search_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchType"
                            }
                        ],
                        "default": "semantic"
                    },
                    "num_chunks": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Num Chunks"
                    },
                    "llm_relevance_filter": {
                        "type": "boolean",
                        "title": "Llm Relevance Filter",
                        "default": false
                    },
                    "llm_filter_extraction": {
                        "type": "boolean",
                        "title": "Llm Filter Extraction",
                        "default": false
                    },
                    "recency_bias": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecencyBiasSetting"
                            }
                        ],
                        "default": "auto"
                    },
                    "llm_model_provider_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Provider Override"
                    },
                    "llm_model_version_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Version Override"
                    },
                    "prompts": {
                        "items": {
                            "$ref": "#/components/schemas/PromptOverrideConfig"
                        },
                        "type": "array",
                        "title": "Prompts"
                    },
                    "prompt_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Prompt Ids"
                    },
                    "document_set_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Document Set Ids"
                    },
                    "tools": {
                        "items": {
                            "$ref": "#/components/schemas/ToolConfig"
                        },
                        "type": "array",
                        "title": "Tools"
                    },
                    "tool_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Tool Ids"
                    },
                    "custom_tools_openapi": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Custom Tools Openapi"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description"
                ],
                "title": "PersonaOverrideConfig"
            },
            "PersonaShareRequest": {
                "properties": {
                    "user_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "User Ids"
                    }
                },
                "type": "object",
                "required": [
                    "user_ids"
                ],
                "title": "PersonaShareRequest"
            },
            "PersonaSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "is_visible": {
                        "type": "boolean",
                        "title": "Is Visible"
                    },
                    "icon_shape": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon Shape"
                    },
                    "icon_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon Color"
                    },
                    "uploaded_image_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Uploaded Image Id"
                    },
                    "user_file_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "User File Ids"
                    },
                    "user_folder_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "User Folder Ids"
                    },
                    "display_priority": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Display Priority"
                    },
                    "is_default_persona": {
                        "type": "boolean",
                        "title": "Is Default Persona"
                    },
                    "builtin_persona": {
                        "type": "boolean",
                        "title": "Builtin Persona"
                    },
                    "starter_messages": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/StarterMessage"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starter Messages"
                    },
                    "tools": {
                        "items": {
                            "$ref": "#/components/schemas/ToolSnapshot"
                        },
                        "type": "array",
                        "title": "Tools"
                    },
                    "labels": {
                        "items": {
                            "$ref": "#/components/schemas/PersonaLabelSnapshot"
                        },
                        "type": "array",
                        "title": "Labels"
                    },
                    "owner": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MinimalUserSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/MinimalUserSnapshot"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "document_sets": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSetSummary"
                        },
                        "type": "array",
                        "title": "Document Sets"
                    },
                    "llm_model_provider_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Provider Override"
                    },
                    "llm_model_version_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Version Override"
                    },
                    "num_chunks": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Num Chunks"
                    }
                },
                "type": "object",
                "title": "PersonaSnapshot"
            },
            "PersonaUniqueUsersResponse": {
                "properties": {
                    "unique_users": {
                        "type": "integer",
                        "title": "Unique Users"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    },
                    "persona_id": {
                        "type": "integer",
                        "title": "Persona Id"
                    }
                },
                "type": "object",
                "title": "PersonaUniqueUsersResponse"
            },
            "PersonaUpsertRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "system_prompt": {
                        "type": "string",
                        "title": "System Prompt"
                    },
                    "task_prompt": {
                        "type": "string",
                        "title": "Task Prompt"
                    },
                    "datetime_aware": {
                        "type": "boolean",
                        "title": "Datetime Aware"
                    },
                    "document_set_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Document Set Ids"
                    },
                    "num_chunks": {
                        "type": "number",
                        "title": "Num Chunks"
                    },
                    "include_citations": {
                        "type": "boolean",
                        "title": "Include Citations"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "recency_bias": {
                        "$ref": "#/components/schemas/RecencyBiasSetting"
                    },
                    "prompt_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Prompt Ids"
                    },
                    "llm_filter_extraction": {
                        "type": "boolean",
                        "title": "Llm Filter Extraction"
                    },
                    "llm_relevance_filter": {
                        "type": "boolean",
                        "title": "Llm Relevance Filter"
                    },
                    "llm_model_provider_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Provider Override"
                    },
                    "llm_model_version_override": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Llm Model Version Override"
                    },
                    "starter_messages": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/StarterMessage"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Starter Messages"
                    },
                    "users": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "tool_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Tool Ids"
                    },
                    "icon_color": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon Color"
                    },
                    "icon_shape": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Icon Shape"
                    },
                    "remove_image": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Remove Image"
                    },
                    "uploaded_image_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Uploaded Image Id"
                    },
                    "search_start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Search Start Date"
                    },
                    "label_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Label Ids"
                    },
                    "is_default_persona": {
                        "type": "boolean",
                        "title": "Is Default Persona",
                        "default": false
                    },
                    "display_priority": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Display Priority"
                    },
                    "user_file_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User File Ids"
                    },
                    "user_folder_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Folder Ids"
                    }
                },
                "type": "object",
                "title": "PersonaUpsertRequest"
            },
            "ProductGatingFullSyncRequest": {
                "properties": {
                    "gated_tenant_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Gated Tenant Ids"
                    }
                },
                "type": "object",
                "required": [
                    "gated_tenant_ids"
                ],
                "title": "ProductGatingFullSyncRequest"
            },
            "ProductGatingRequest": {
                "properties": {
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "application_status": {
                        "$ref": "#/components/schemas/ApplicationStatus"
                    }
                },
                "type": "object",
                "required": [
                    "tenant_id",
                    "application_status"
                ],
                "title": "ProductGatingRequest"
            },
            "ProductGatingResponse": {
                "properties": {
                    "updated": {
                        "type": "boolean",
                        "title": "Updated"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    }
                },
                "type": "object",
                "title": "ProductGatingResponse"
            },
            "PromptOverride": {
                "properties": {
                    "system_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "System Prompt"
                    },
                    "task_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Prompt"
                    }
                },
                "type": "object",
                "title": "PromptOverride"
            },
            "PromptOverrideConfig": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": ""
                    },
                    "system_prompt": {
                        "type": "string",
                        "title": "System Prompt"
                    },
                    "task_prompt": {
                        "type": "string",
                        "title": "Task Prompt",
                        "default": ""
                    },
                    "include_citations": {
                        "type": "boolean",
                        "title": "Include Citations",
                        "default": true
                    },
                    "datetime_aware": {
                        "type": "boolean",
                        "title": "Datetime Aware",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "system_prompt"
                ],
                "title": "PromptOverrideConfig"
            },
            "PromptSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "system_prompt": {
                        "type": "string",
                        "title": "System Prompt"
                    },
                    "task_prompt": {
                        "type": "string",
                        "title": "Task Prompt"
                    },
                    "include_citations": {
                        "type": "boolean",
                        "title": "Include Citations"
                    },
                    "datetime_aware": {
                        "type": "boolean",
                        "title": "Datetime Aware"
                    },
                    "default_prompt": {
                        "type": "boolean",
                        "title": "Default Prompt"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "description",
                    "system_prompt",
                    "task_prompt",
                    "include_citations",
                    "datetime_aware",
                    "default_prompt"
                ],
                "title": "PromptSnapshot"
            },
            "QADocsResponse": {
                "properties": {
                    "level": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level"
                    },
                    "level_question_num": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level Question Num"
                    },
                    "top_documents": {
                        "items": {
                            "$ref": "#/components/schemas/SavedSearchDoc"
                        },
                        "type": "array",
                        "title": "Top Documents"
                    },
                    "rephrased_query": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rephrased Query"
                    },
                    "predicted_flow": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/QueryFlow"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "predicted_search": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SearchType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "applied_source_filters": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DocumentSource"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Applied Source Filters"
                    },
                    "applied_time_cutoff": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Applied Time Cutoff"
                    },
                    "recency_bias_multiplier": {
                        "type": "number",
                        "title": "Recency Bias Multiplier"
                    }
                },
                "type": "object",
                "title": "QADocsResponse"
            },
            "QAFeedbackType": {
                "type": "string",
                "enum": [
                    "like",
                    "dislike",
                    "mixed"
                ],
                "title": "QAFeedbackType"
            },
            "QueryAnalyticsResponse": {
                "properties": {
                    "total_queries": {
                        "type": "integer",
                        "title": "Total Queries"
                    },
                    "total_likes": {
                        "type": "integer",
                        "title": "Total Likes"
                    },
                    "total_dislikes": {
                        "type": "integer",
                        "title": "Total Dislikes"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    }
                },
                "type": "object",
                "title": "QueryAnalyticsResponse"
            },
            "QueryFlow": {
                "type": "string",
                "enum": [
                    "search",
                    "question-answer"
                ],
                "title": "QueryFlow"
            },
            "QueryHistoryExport": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TaskStatus"
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time"
                    }
                },
                "type": "object",
                "required": [
                    "task_id",
                    "status",
                    "start",
                    "end",
                    "start_time"
                ],
                "title": "QueryHistoryExport"
            },
            "QueryHistoryType": {
                "type": "string",
                "enum": [
                    "disabled",
                    "anonymized",
                    "normal"
                ],
                "title": "QueryHistoryType"
            },
            "RecencyBiasSetting": {
                "type": "string",
                "enum": [
                    "favor_recent",
                    "base_decay",
                    "no_decay",
                    "auto"
                ],
                "title": "RecencyBiasSetting"
            },
            "RefreshTokenData": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "refresh_token": {
                        "type": "string",
                        "title": "Refresh Token"
                    },
                    "session": {
                        "type": "object",
                        "title": "Session",
                        "description": "Contains session information"
                    },
                    "userinfo": {
                        "type": "object",
                        "title": "Userinfo",
                        "description": "Contains user information"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "refresh_token",
                    "session",
                    "userinfo"
                ],
                "title": "RefreshTokenData"
            },
            "ReindexFileRequest": {
                "properties": {
                    "file_id": {
                        "type": "integer",
                        "title": "File Id"
                    }
                },
                "type": "object",
                "required": [
                    "file_id"
                ],
                "title": "ReindexFileRequest"
            },
            "RenameChatSessionResponse": {
                "properties": {
                    "new_name": {
                        "type": "string",
                        "title": "New Name"
                    }
                },
                "type": "object",
                "title": "RenameChatSessionResponse"
            },
            "ReorderPinnedAssistantsRequest": {
                "properties": {
                    "ordered_assistant_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Ordered Assistant Ids"
                    }
                },
                "type": "object",
                "required": [
                    "ordered_assistant_ids"
                ],
                "title": "ReorderPinnedAssistantsRequest"
            },
            "RequestInviteRequest": {
                "properties": {
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    }
                },
                "type": "object",
                "required": [
                    "tenant_id"
                ],
                "title": "RequestInviteRequest"
            },
            "RerankerProvider": {
                "type": "string",
                "enum": [
                    "cohere",
                    "litellm",
                    "bedrock"
                ],
                "title": "RerankerProvider"
            },
            "RerankingDetails": {
                "properties": {
                    "rerank_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Model Name"
                    },
                    "rerank_api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Api Url"
                    },
                    "rerank_provider_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RerankerProvider"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "rerank_api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Api Key"
                    },
                    "num_rerank": {
                        "type": "integer",
                        "title": "Num Rerank"
                    },
                    "disable_rerank_for_streaming": {
                        "type": "boolean",
                        "title": "Disable Rerank For Streaming",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "rerank_model_name",
                    "rerank_api_url",
                    "rerank_provider_type",
                    "num_rerank"
                ],
                "title": "RerankingDetails"
            },
            "RetrievalDetails": {
                "properties": {
                    "chunks_above": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Above"
                    },
                    "chunks_below": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chunks Below"
                    },
                    "full_doc": {
                        "type": "boolean",
                        "title": "Full Doc",
                        "default": false
                    },
                    "run_search": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OptionalSearchSetting"
                            }
                        ],
                        "default": "always"
                    },
                    "real_time": {
                        "type": "boolean",
                        "title": "Real Time",
                        "default": true
                    },
                    "filters": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BaseFilters"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "enable_auto_detect_filters": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enable Auto Detect Filters"
                    },
                    "offset": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Offset"
                    },
                    "limit": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit"
                    },
                    "dedupe_docs": {
                        "type": "boolean",
                        "title": "Dedupe Docs",
                        "default": false
                    }
                },
                "type": "object",
                "title": "RetrievalDetails"
            },
            "RetrievalDocs": {
                "properties": {
                    "top_documents": {
                        "items": {
                            "$ref": "#/components/schemas/SavedSearchDoc"
                        },
                        "type": "array",
                        "title": "Top Documents"
                    }
                },
                "type": "object",
                "required": [
                    "top_documents"
                ],
                "title": "RetrievalDocs"
            },
            "RunConnectorRequest": {
                "properties": {
                    "connector_id": {
                        "type": "integer",
                        "title": "Connector Id"
                    },
                    "credential_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Credential Ids"
                    },
                    "from_beginning": {
                        "type": "boolean",
                        "title": "From Beginning",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "connector_id"
                ],
                "title": "RunConnectorRequest"
            },
            "RunRequest": {
                "properties": {
                    "assistant_id": {
                        "type": "integer",
                        "title": "Assistant Id"
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model"
                    },
                    "instructions": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions"
                    },
                    "additional_instructions": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Additional Instructions"
                    },
                    "tools": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tools"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "assistant_id"
                ],
                "title": "RunRequest"
            },
            "RunResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "object": {
                        "type": "string",
                        "enum": [
                            "thread.run"
                        ],
                        "const": "thread.run",
                        "title": "Object"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At"
                    },
                    "assistant_id": {
                        "type": "integer",
                        "title": "Assistant Id"
                    },
                    "thread_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Thread Id"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "queued",
                            "in_progress",
                            "requires_action",
                            "cancelling",
                            "cancelled",
                            "failed",
                            "completed",
                            "expired"
                        ],
                        "title": "Status"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At"
                    },
                    "cancelled_at": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cancelled At"
                    },
                    "failed_at": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Failed At"
                    },
                    "completed_at": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Completed At"
                    },
                    "last_error": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Error"
                    },
                    "model": {
                        "type": "string",
                        "title": "Model"
                    },
                    "instructions": {
                        "type": "string",
                        "title": "Instructions"
                    },
                    "tools": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Tools"
                    },
                    "file_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "File Ids"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "title": "RunResponse"
            },
            "SavedSearchDoc": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "chunk_ind": {
                        "type": "integer",
                        "title": "Chunk Ind"
                    },
                    "semantic_identifier": {
                        "type": "string",
                        "title": "Semantic Identifier"
                    },
                    "link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Link"
                    },
                    "blurb": {
                        "type": "string",
                        "title": "Blurb"
                    },
                    "source_type": {
                        "$ref": "#/components/schemas/DocumentSource"
                    },
                    "boost": {
                        "type": "integer",
                        "title": "Boost"
                    },
                    "hidden": {
                        "type": "boolean",
                        "title": "Hidden"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "score": {
                        "type": "number",
                        "title": "Score",
                        "default": 0.0
                    },
                    "is_relevant": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Relevant"
                    },
                    "relevance_explanation": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Relevance Explanation"
                    },
                    "match_highlights": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Match Highlights"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    },
                    "primary_owners": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Primary Owners"
                    },
                    "secondary_owners": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secondary Owners"
                    },
                    "is_internet": {
                        "type": "boolean",
                        "title": "Is Internet",
                        "default": false
                    },
                    "db_doc_id": {
                        "type": "integer",
                        "title": "Db Doc Id"
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "chunk_ind",
                    "semantic_identifier",
                    "blurb",
                    "source_type",
                    "boost",
                    "hidden",
                    "metadata",
                    "match_highlights",
                    "db_doc_id"
                ],
                "title": "SavedSearchDoc"
            },
            "SavedSearchDocWithContent": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "chunk_ind": {
                        "type": "integer",
                        "title": "Chunk Ind"
                    },
                    "semantic_identifier": {
                        "type": "string",
                        "title": "Semantic Identifier"
                    },
                    "link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Link"
                    },
                    "blurb": {
                        "type": "string",
                        "title": "Blurb"
                    },
                    "source_type": {
                        "$ref": "#/components/schemas/DocumentSource"
                    },
                    "boost": {
                        "type": "integer",
                        "title": "Boost"
                    },
                    "hidden": {
                        "type": "boolean",
                        "title": "Hidden"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "score": {
                        "type": "number",
                        "title": "Score",
                        "default": 0.0
                    },
                    "is_relevant": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Relevant"
                    },
                    "relevance_explanation": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Relevance Explanation"
                    },
                    "match_highlights": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Match Highlights"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    },
                    "primary_owners": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Primary Owners"
                    },
                    "secondary_owners": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secondary Owners"
                    },
                    "is_internet": {
                        "type": "boolean",
                        "title": "Is Internet",
                        "default": false
                    },
                    "db_doc_id": {
                        "type": "integer",
                        "title": "Db Doc Id"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "chunk_ind",
                    "semantic_identifier",
                    "blurb",
                    "source_type",
                    "boost",
                    "hidden",
                    "metadata",
                    "match_highlights",
                    "db_doc_id",
                    "content"
                ],
                "title": "SavedSearchDocWithContent",
                "description": "Used for endpoints that need to return the actual contents of the retrieved\nsection in addition to the match_highlights."
            },
            "SavedSearchSettings": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "model_name": {
                        "type": "string",
                        "title": "Model Name"
                    },
                    "normalize": {
                        "type": "boolean",
                        "title": "Normalize"
                    },
                    "query_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Query Prefix"
                    },
                    "passage_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Passage Prefix"
                    },
                    "api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Url"
                    },
                    "provider_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EmbeddingProvider"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "model_dim": {
                        "type": "integer",
                        "title": "Model Dim"
                    },
                    "index_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Index Name"
                    },
                    "multipass_indexing": {
                        "type": "boolean",
                        "title": "Multipass Indexing"
                    },
                    "embedding_precision": {
                        "$ref": "#/components/schemas/EmbeddingPrecision"
                    },
                    "reduced_dimension": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reduced Dimension"
                    },
                    "background_reindex_enabled": {
                        "type": "boolean",
                        "title": "Background Reindex Enabled",
                        "default": true
                    },
                    "enable_contextual_rag": {
                        "type": "boolean",
                        "title": "Enable Contextual Rag"
                    },
                    "contextual_rag_llm_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Contextual Rag Llm Name"
                    },
                    "contextual_rag_llm_provider": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Contextual Rag Llm Provider"
                    },
                    "rerank_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Model Name"
                    },
                    "rerank_api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Api Url"
                    },
                    "rerank_provider_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RerankerProvider"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "rerank_api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Api Key"
                    },
                    "num_rerank": {
                        "type": "integer",
                        "title": "Num Rerank"
                    },
                    "disable_rerank_for_streaming": {
                        "type": "boolean",
                        "title": "Disable Rerank For Streaming",
                        "default": false
                    },
                    "multilingual_expansion": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Multilingual Expansion"
                    }
                },
                "type": "object",
                "required": [
                    "model_name",
                    "normalize",
                    "query_prefix",
                    "passage_prefix",
                    "model_dim",
                    "index_name",
                    "multipass_indexing",
                    "embedding_precision",
                    "enable_contextual_rag",
                    "rerank_model_name",
                    "rerank_api_url",
                    "rerank_provider_type",
                    "num_rerank",
                    "multilingual_expansion"
                ],
                "title": "SavedSearchSettings"
            },
            "SearchDoc": {
                "properties": {
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "chunk_ind": {
                        "type": "integer",
                        "title": "Chunk Ind"
                    },
                    "semantic_identifier": {
                        "type": "string",
                        "title": "Semantic Identifier"
                    },
                    "link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Link"
                    },
                    "blurb": {
                        "type": "string",
                        "title": "Blurb"
                    },
                    "source_type": {
                        "$ref": "#/components/schemas/DocumentSource"
                    },
                    "boost": {
                        "type": "integer",
                        "title": "Boost"
                    },
                    "hidden": {
                        "type": "boolean",
                        "title": "Hidden"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "score": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score"
                    },
                    "is_relevant": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Relevant"
                    },
                    "relevance_explanation": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Relevance Explanation"
                    },
                    "match_highlights": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Match Highlights"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    },
                    "primary_owners": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Primary Owners"
                    },
                    "secondary_owners": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secondary Owners"
                    },
                    "is_internet": {
                        "type": "boolean",
                        "title": "Is Internet",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "document_id",
                    "chunk_ind",
                    "semantic_identifier",
                    "blurb",
                    "source_type",
                    "boost",
                    "hidden",
                    "metadata",
                    "match_highlights"
                ],
                "title": "SearchDoc"
            },
            "SearchFeedbackRequest": {
                "properties": {
                    "message_id": {
                        "type": "integer",
                        "title": "Message Id"
                    },
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "document_rank": {
                        "type": "integer",
                        "title": "Document Rank"
                    },
                    "click": {
                        "type": "boolean",
                        "title": "Click"
                    },
                    "search_feedback": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SearchFeedbackType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "message_id",
                    "document_id",
                    "document_rank",
                    "click"
                ],
                "title": "SearchFeedbackRequest"
            },
            "SearchFeedbackType": {
                "type": "string",
                "enum": [
                    "endorse",
                    "reject",
                    "hide",
                    "unhide"
                ],
                "title": "SearchFeedbackType"
            },
            "SearchSessionDetailResponse": {
                "properties": {
                    "search_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Search Session Id"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "documents": {
                        "items": {
                            "$ref": "#/components/schemas/SearchDoc"
                        },
                        "type": "array",
                        "title": "Documents"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/ChatMessageDetail"
                        },
                        "type": "array",
                        "title": "Messages"
                    }
                },
                "type": "object",
                "title": "SearchSessionDetailResponse"
            },
            "SearchSettingsCreationRequest": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "model_name": {
                        "type": "string",
                        "title": "Model Name"
                    },
                    "normalize": {
                        "type": "boolean",
                        "title": "Normalize"
                    },
                    "query_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Query Prefix"
                    },
                    "passage_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Passage Prefix"
                    },
                    "api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Url"
                    },
                    "provider_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EmbeddingProvider"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "model_dim": {
                        "type": "integer",
                        "title": "Model Dim"
                    },
                    "index_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Index Name"
                    },
                    "multipass_indexing": {
                        "type": "boolean",
                        "title": "Multipass Indexing"
                    },
                    "embedding_precision": {
                        "$ref": "#/components/schemas/EmbeddingPrecision"
                    },
                    "reduced_dimension": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reduced Dimension"
                    },
                    "background_reindex_enabled": {
                        "type": "boolean",
                        "title": "Background Reindex Enabled",
                        "default": true
                    },
                    "enable_contextual_rag": {
                        "type": "boolean",
                        "title": "Enable Contextual Rag"
                    },
                    "contextual_rag_llm_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Contextual Rag Llm Name"
                    },
                    "contextual_rag_llm_provider": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Contextual Rag Llm Provider"
                    },
                    "rerank_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Model Name"
                    },
                    "rerank_api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Api Url"
                    },
                    "rerank_provider_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RerankerProvider"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "rerank_api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rerank Api Key"
                    },
                    "num_rerank": {
                        "type": "integer",
                        "title": "Num Rerank"
                    },
                    "disable_rerank_for_streaming": {
                        "type": "boolean",
                        "title": "Disable Rerank For Streaming",
                        "default": false
                    },
                    "multilingual_expansion": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Multilingual Expansion"
                    }
                },
                "type": "object",
                "required": [
                    "model_name",
                    "normalize",
                    "query_prefix",
                    "passage_prefix",
                    "model_dim",
                    "index_name",
                    "multipass_indexing",
                    "embedding_precision",
                    "enable_contextual_rag",
                    "rerank_model_name",
                    "rerank_api_url",
                    "rerank_provider_type",
                    "num_rerank",
                    "multilingual_expansion"
                ],
                "title": "SearchSettingsCreationRequest"
            },
            "SearchSettingsDeleteRequest": {
                "properties": {
                    "search_settings_id": {
                        "type": "integer",
                        "title": "Search Settings Id"
                    }
                },
                "type": "object",
                "required": [
                    "search_settings_id"
                ],
                "title": "SearchSettingsDeleteRequest"
            },
            "SearchType": {
                "type": "string",
                "enum": [
                    "keyword",
                    "semantic",
                    "internet"
                ],
                "title": "SearchType"
            },
            "SeedChatFromSlackRequest": {
                "properties": {
                    "chat_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Chat Session Id"
                    }
                },
                "type": "object",
                "required": [
                    "chat_session_id"
                ],
                "title": "SeedChatFromSlackRequest"
            },
            "SeedChatFromSlackResponse": {
                "properties": {
                    "redirect_url": {
                        "type": "string",
                        "title": "Redirect Url"
                    }
                },
                "type": "object",
                "title": "SeedChatFromSlackResponse"
            },
            "SessionType": {
                "type": "string",
                "enum": [
                    "Chat",
                    "Search",
                    "Slack"
                ],
                "title": "SessionType"
            },
            "SetCuratorRequest": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "is_curator": {
                        "type": "boolean",
                        "title": "Is Curator"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "is_curator"
                ],
                "title": "SetCuratorRequest"
            },
            "Settings": {
                "properties": {
                    "maximum_chat_retention_days": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Maximum Chat Retention Days"
                    },
                    "gpu_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpu Enabled"
                    },
                    "application_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ApplicationStatus"
                            }
                        ],
                        "default": "active"
                    },
                    "anonymous_user_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Anonymous User Enabled"
                    },
                    "pro_search_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pro Search Enabled"
                    },
                    "temperature_override_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature Override Enabled",
                        "default": false
                    },
                    "auto_scroll": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Auto Scroll",
                        "default": false
                    },
                    "query_history_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/QueryHistoryType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "image_extraction_and_analysis_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image Extraction And Analysis Enabled",
                        "default": false
                    },
                    "search_time_image_analysis_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Search Time Image Analysis Enabled",
                        "default": false
                    },
                    "image_analysis_max_size_mb": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image Analysis Max Size Mb",
                        "default": 20
                    },
                    "user_knowledge_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Knowledge Enabled",
                        "default": true
                    }
                },
                "type": "object",
                "title": "Settings",
                "description": "General settings"
            },
            "ShareRequest": {
                "properties": {
                    "assistant_id": {
                        "type": "integer",
                        "title": "Assistant Id"
                    }
                },
                "type": "object",
                "required": [
                    "assistant_id"
                ],
                "title": "ShareRequest"
            },
            "SlackBot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled"
                    },
                    "configs_count": {
                        "type": "integer",
                        "title": "Configs Count"
                    },
                    "bot_token": {
                        "type": "string",
                        "title": "Bot Token"
                    },
                    "app_token": {
                        "type": "string",
                        "title": "App Token"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "enabled",
                    "configs_count",
                    "bot_token",
                    "app_token"
                ],
                "title": "SlackBot",
                "description": "This model is identical to the SlackAppModel, but it contains\na `configs_count` field to make it easier to fetch the number\nof SlackChannelConfigs associated with a SlackBot."
            },
            "SlackBotCreationRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled"
                    },
                    "bot_token": {
                        "type": "string",
                        "title": "Bot Token"
                    },
                    "app_token": {
                        "type": "string",
                        "title": "App Token"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "enabled",
                    "bot_token",
                    "app_token"
                ],
                "title": "SlackBotCreationRequest"
            },
            "SlackBotResponseType": {
                "type": "string",
                "enum": [
                    "quotes",
                    "citations"
                ],
                "title": "SlackBotResponseType"
            },
            "SlackChannelConfig": {
                "properties": {
                    "slack_bot_id": {
                        "type": "integer",
                        "title": "Slack Bot Id"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "persona": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PersonaSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "channel_config": {
                        "$ref": "#/components/schemas/ChannelConfig"
                    },
                    "standard_answer_categories": {
                        "items": {
                            "$ref": "#/components/schemas/StandardAnswerCategory"
                        },
                        "type": "array",
                        "title": "Standard Answer Categories"
                    },
                    "enable_auto_filters": {
                        "type": "boolean",
                        "title": "Enable Auto Filters"
                    },
                    "is_default": {
                        "type": "boolean",
                        "title": "Is Default"
                    }
                },
                "type": "object",
                "required": [
                    "slack_bot_id",
                    "id",
                    "persona",
                    "channel_config",
                    "standard_answer_categories",
                    "enable_auto_filters",
                    "is_default"
                ],
                "title": "SlackChannelConfig"
            },
            "SlackChannelConfigCreationRequest": {
                "properties": {
                    "slack_bot_id": {
                        "type": "integer",
                        "title": "Slack Bot Id"
                    },
                    "document_sets": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Document Sets"
                    },
                    "persona_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona Id"
                    },
                    "channel_name": {
                        "type": "string",
                        "title": "Channel Name"
                    },
                    "respond_tag_only": {
                        "type": "boolean",
                        "title": "Respond Tag Only",
                        "default": false
                    },
                    "respond_to_bots": {
                        "type": "boolean",
                        "title": "Respond To Bots",
                        "default": false
                    },
                    "is_ephemeral": {
                        "type": "boolean",
                        "title": "Is Ephemeral",
                        "default": false
                    },
                    "show_continue_in_web_ui": {
                        "type": "boolean",
                        "title": "Show Continue In Web Ui",
                        "default": false
                    },
                    "enable_auto_filters": {
                        "type": "boolean",
                        "title": "Enable Auto Filters",
                        "default": false
                    },
                    "respond_member_group_list": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Respond Member Group List"
                    },
                    "answer_filters": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "well_answered_postfilter"
                                    ],
                                    "const": "well_answered_postfilter"
                                },
                                {
                                    "type": "string",
                                    "enum": [
                                        "questionmark_prefilter"
                                    ],
                                    "const": "questionmark_prefilter"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Answer Filters"
                    },
                    "follow_up_tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Follow Up Tags"
                    },
                    "response_type": {
                        "$ref": "#/components/schemas/SlackBotResponseType"
                    },
                    "standard_answer_categories": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Standard Answer Categories"
                    },
                    "disabled": {
                        "type": "boolean",
                        "title": "Disabled",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "slack_bot_id",
                    "channel_name",
                    "response_type"
                ],
                "title": "SlackChannelConfigCreationRequest"
            },
            "SourceAndEntityTypeView": {
                "properties": {
                    "source_statistics": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SourceStatistics"
                        },
                        "type": "object",
                        "title": "Source Statistics"
                    },
                    "entity_types": {
                        "additionalProperties": {
                            "items": {
                                "$ref": "#/components/schemas/EntityType"
                            },
                            "type": "array"
                        },
                        "type": "object",
                        "title": "Entity Types"
                    }
                },
                "type": "object",
                "required": [
                    "source_statistics",
                    "entity_types"
                ],
                "title": "SourceAndEntityTypeView"
            },
            "SourceStatistics": {
                "properties": {
                    "source_name": {
                        "type": "string",
                        "title": "Source Name"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Updated"
                    },
                    "entities_count": {
                        "type": "integer",
                        "title": "Entities Count"
                    }
                },
                "type": "object",
                "required": [
                    "source_name",
                    "last_updated",
                    "entities_count"
                ],
                "title": "SourceStatistics"
            },
            "SourceTag": {
                "properties": {
                    "tag_key": {
                        "type": "string",
                        "title": "Tag Key"
                    },
                    "tag_value": {
                        "type": "string",
                        "title": "Tag Value"
                    },
                    "source": {
                        "$ref": "#/components/schemas/DocumentSource"
                    }
                },
                "type": "object",
                "required": [
                    "tag_key",
                    "tag_value",
                    "source"
                ],
                "title": "SourceTag"
            },
            "StandardAnswer": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "keyword": {
                        "type": "string",
                        "title": "Keyword"
                    },
                    "answer": {
                        "type": "string",
                        "title": "Answer"
                    },
                    "categories": {
                        "items": {
                            "$ref": "#/components/schemas/StandardAnswerCategory"
                        },
                        "type": "array",
                        "title": "Categories"
                    },
                    "match_regex": {
                        "type": "boolean",
                        "title": "Match Regex"
                    },
                    "match_any_keywords": {
                        "type": "boolean",
                        "title": "Match Any Keywords"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "keyword",
                    "answer",
                    "categories",
                    "match_regex",
                    "match_any_keywords"
                ],
                "title": "StandardAnswer"
            },
            "StandardAnswerCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "StandardAnswerCategory"
            },
            "StandardAnswerCategoryCreationRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "StandardAnswerCategoryCreationRequest"
            },
            "StandardAnswerCreationRequest": {
                "properties": {
                    "keyword": {
                        "type": "string",
                        "title": "Keyword"
                    },
                    "answer": {
                        "type": "string",
                        "title": "Answer"
                    },
                    "categories": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Categories"
                    },
                    "match_regex": {
                        "type": "boolean",
                        "title": "Match Regex"
                    },
                    "match_any_keywords": {
                        "type": "boolean",
                        "title": "Match Any Keywords"
                    }
                },
                "type": "object",
                "required": [
                    "keyword",
                    "answer",
                    "categories",
                    "match_regex",
                    "match_any_keywords"
                ],
                "title": "StandardAnswerCreationRequest"
            },
            "StandardAnswerRequest": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "slack_bot_categories": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Slack Bot Categories"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "slack_bot_categories"
                ],
                "title": "StandardAnswerRequest"
            },
            "StandardAnswerResponse": {
                "properties": {
                    "standard_answers": {
                        "items": {
                            "$ref": "#/components/schemas/StandardAnswer"
                        },
                        "type": "array",
                        "title": "Standard Answers"
                    }
                },
                "type": "object",
                "title": "StandardAnswerResponse"
            },
            "StarterMessage": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "message"
                ],
                "title": "StarterMessage",
                "description": "NOTE: is a `TypedDict` so it can be used as a type hint for a JSONB column\nin Postgres"
            },
            "StarterMessageModel": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "name"
                ],
                "title": "StarterMessageModel"
            },
            "StatusResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "data": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "title": "StatusResponse"
            },
            "StatusResponse_NoneType_": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "data": {
                        "type": "null",
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "success"
                ],
                "title": "StatusResponse[NoneType]"
            },
            "StatusResponse_int_": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "data": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "title": "StatusResponse[int]"
            },
            "StatusResponse_list_int__": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "success"
                ],
                "title": "StatusResponse[list[int]]"
            },
            "SubQueryDetail": {
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Query"
                    },
                    "query_id": {
                        "type": "integer",
                        "title": "Query Id"
                    },
                    "doc_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Doc Ids"
                    }
                },
                "type": "object",
                "required": [
                    "query",
                    "query_id"
                ],
                "title": "SubQueryDetail"
            },
            "SubQuestionDetail": {
                "properties": {
                    "level": {
                        "type": "integer",
                        "title": "Level"
                    },
                    "level_question_num": {
                        "type": "integer",
                        "title": "Level Question Num"
                    },
                    "question": {
                        "type": "string",
                        "title": "Question"
                    },
                    "answer": {
                        "type": "string",
                        "title": "Answer"
                    },
                    "sub_queries": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SubQueryDetail"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sub Queries"
                    },
                    "context_docs": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RetrievalDocs"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "level",
                    "level_question_num",
                    "question",
                    "answer"
                ],
                "title": "SubQuestionDetail"
            },
            "SubscriptionSessionResponse": {
                "properties": {
                    "sessionId": {
                        "type": "string",
                        "title": "Sessionid"
                    }
                },
                "type": "object",
                "title": "SubscriptionSessionResponse"
            },
            "SubscriptionStatusResponse": {
                "properties": {
                    "subscribed": {
                        "type": "boolean",
                        "title": "Subscribed"
                    }
                },
                "type": "object",
                "title": "SubscriptionStatusResponse"
            },
            "Tag": {
                "properties": {
                    "tag_key": {
                        "type": "string",
                        "title": "Tag Key"
                    },
                    "tag_value": {
                        "type": "string",
                        "title": "Tag Value"
                    }
                },
                "type": "object",
                "required": [
                    "tag_key",
                    "tag_value"
                ],
                "title": "Tag"
            },
            "TagResponse": {
                "properties": {
                    "tags": {
                        "items": {
                            "$ref": "#/components/schemas/SourceTag"
                        },
                        "type": "array",
                        "title": "Tags"
                    }
                },
                "type": "object",
                "title": "TagResponse"
            },
            "TaskStatus": {
                "type": "string",
                "enum": [
                    "PENDING",
                    "STARTED",
                    "SUCCESS",
                    "FAILURE"
                ],
                "title": "TaskStatus"
            },
            "TenantByDomainResponse": {
                "properties": {
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "number_of_users": {
                        "type": "integer",
                        "title": "Number Of Users"
                    },
                    "creator_email": {
                        "type": "string",
                        "title": "Creator Email"
                    }
                },
                "type": "object",
                "title": "TenantByDomainResponse"
            },
            "TenantInfo": {
                "properties": {
                    "invitation": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TenantSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "new_tenant": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TenantSnapshot"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "TenantInfo"
            },
            "TenantSnapshot": {
                "properties": {
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "number_of_users": {
                        "type": "integer",
                        "title": "Number Of Users"
                    }
                },
                "type": "object",
                "required": [
                    "tenant_id",
                    "number_of_users"
                ],
                "title": "TenantSnapshot"
            },
            "TestEmbeddingRequest": {
                "properties": {
                    "provider_type": {
                        "$ref": "#/components/schemas/EmbeddingProvider"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "api_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Url"
                    },
                    "model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model Name"
                    },
                    "api_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Version"
                    },
                    "deployment_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deployment Name"
                    }
                },
                "type": "object",
                "required": [
                    "provider_type"
                ],
                "title": "TestEmbeddingRequest"
            },
            "TestLLMRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "api_base": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Base"
                    },
                    "api_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Version"
                    },
                    "custom_config": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Config"
                    },
                    "default_model_name": {
                        "type": "string",
                        "title": "Default Model Name"
                    },
                    "fast_default_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Fast Default Model Name"
                    },
                    "deployment_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deployment Name"
                    },
                    "model_configurations": {
                        "items": {
                            "$ref": "#/components/schemas/ModelConfigurationUpsertRequest"
                        },
                        "type": "array",
                        "title": "Model Configurations"
                    },
                    "api_key_changed": {
                        "type": "boolean",
                        "title": "Api Key Changed"
                    }
                },
                "type": "object",
                "required": [
                    "provider",
                    "default_model_name",
                    "model_configurations",
                    "api_key_changed"
                ],
                "title": "TestLLMRequest"
            },
            "TestUpsertRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "TestUpsertRequest"
            },
            "TextSection": {
                "properties": {
                    "link": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Link"
                    },
                    "text": {
                        "type": "string",
                        "title": "Text"
                    },
                    "image_file_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image File Id"
                    }
                },
                "type": "object",
                "required": [
                    "text"
                ],
                "title": "TextSection",
                "description": "Section containing text content"
            },
            "Thread": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "object": {
                        "type": "string",
                        "title": "Object",
                        "default": "thread"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at"
                ],
                "title": "Thread"
            },
            "ThreadMessage": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "sender": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sender"
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MessageType"
                            }
                        ],
                        "default": "user"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "ThreadMessage"
            },
            "TokenRateLimitArgs": {
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled"
                    },
                    "token_budget": {
                        "type": "integer",
                        "title": "Token Budget"
                    },
                    "period_hours": {
                        "type": "integer",
                        "title": "Period Hours"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "token_budget",
                    "period_hours"
                ],
                "title": "TokenRateLimitArgs"
            },
            "TokenRateLimitDisplay": {
                "properties": {
                    "token_id": {
                        "type": "integer",
                        "title": "Token Id"
                    },
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled"
                    },
                    "token_budget": {
                        "type": "integer",
                        "title": "Token Budget"
                    },
                    "period_hours": {
                        "type": "integer",
                        "title": "Period Hours"
                    }
                },
                "type": "object",
                "title": "TokenRateLimitDisplay"
            },
            "ToolCallFinalResult": {
                "properties": {
                    "tool_name": {
                        "type": "string",
                        "title": "Tool Name"
                    },
                    "tool_args": {
                        "type": "object",
                        "title": "Tool Args"
                    },
                    "tool_result": {
                        "title": "Tool Result"
                    },
                    "level": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level"
                    },
                    "level_question_num": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Level Question Num"
                    }
                },
                "type": "object",
                "required": [
                    "tool_name",
                    "tool_args"
                ],
                "title": "ToolCallFinalResult"
            },
            "ToolConfig": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "ToolConfig"
            },
            "ToolSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "definition": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Definition"
                    },
                    "display_name": {
                        "type": "string",
                        "title": "Display Name"
                    },
                    "in_code_tool_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "In Code Tool Id"
                    },
                    "custom_headers": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Headers"
                    },
                    "passthrough_auth": {
                        "type": "boolean",
                        "title": "Passthrough Auth"
                    }
                },
                "type": "object",
                "title": "ToolSnapshot"
            },
            "UpdateChatSessionTemperatureRequest": {
                "properties": {
                    "chat_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Chat Session Id"
                    },
                    "temperature_override": {
                        "type": "number",
                        "title": "Temperature Override"
                    }
                },
                "type": "object",
                "required": [
                    "chat_session_id",
                    "temperature_override"
                ],
                "title": "UpdateChatSessionTemperatureRequest"
            },
            "UpdateChatSessionThreadRequest": {
                "properties": {
                    "chat_session_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Chat Session Id"
                    },
                    "new_alternate_model": {
                        "type": "string",
                        "title": "New Alternate Model"
                    }
                },
                "type": "object",
                "required": [
                    "chat_session_id",
                    "new_alternate_model"
                ],
                "title": "UpdateChatSessionThreadRequest"
            },
            "UpdateInputPromptRequest": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "title": "Prompt"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content"
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active"
                    }
                },
                "type": "object",
                "required": [
                    "prompt",
                    "content",
                    "active"
                ],
                "title": "UpdateInputPromptRequest"
            },
            "UsageReportMetadata": {
                "properties": {
                    "report_name": {
                        "type": "string",
                        "title": "Report Name"
                    },
                    "requestor": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Requestor"
                    },
                    "time_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Created"
                    },
                    "period_from": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Period From"
                    },
                    "period_to": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Period To"
                    }
                },
                "type": "object",
                "required": [
                    "report_name",
                    "requestor",
                    "time_created",
                    "period_from",
                    "period_to"
                ],
                "title": "UsageReportMetadata"
            },
            "UserAnalyticsResponse": {
                "properties": {
                    "total_active_users": {
                        "type": "integer",
                        "title": "Total Active Users"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date"
                    }
                },
                "type": "object",
                "title": "UserAnalyticsResponse"
            },
            "UserByEmail": {
                "properties": {
                    "user_email": {
                        "type": "string",
                        "title": "User Email"
                    }
                },
                "type": "object",
                "required": [
                    "user_email"
                ],
                "title": "UserByEmail"
            },
            "UserCreate": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active",
                        "default": true
                    },
                    "is_superuser": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Superuser",
                        "default": false
                    },
                    "is_verified": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Verified",
                        "default": false
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        ],
                        "default": "basic"
                    },
                    "tenant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tenant Id"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserCreate"
            },
            "UserFileSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "document_id": {
                        "type": "string",
                        "title": "Document Id"
                    },
                    "folder_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Id"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    },
                    "file_id": {
                        "type": "string",
                        "title": "File Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "assistant_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Assistant Ids",
                        "default": []
                    },
                    "token_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token Count"
                    },
                    "indexed": {
                        "type": "boolean",
                        "title": "Indexed"
                    },
                    "link_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Link Url"
                    },
                    "status": {
                        "$ref": "#/components/schemas/UserFileStatus"
                    },
                    "chat_file_type": {
                        "$ref": "#/components/schemas/ChatFileType"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "document_id",
                    "user_id",
                    "file_id",
                    "created_at",
                    "token_count",
                    "indexed",
                    "link_url",
                    "status",
                    "chat_file_type"
                ],
                "title": "UserFileSnapshot"
            },
            "UserFileStatus": {
                "type": "string",
                "enum": [
                    "FAILED",
                    "INDEXING",
                    "INDEXED",
                    "REINDEXING"
                ],
                "title": "UserFileStatus"
            },
            "UserGroup": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/UserInfo"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "curator_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Curator Ids"
                    },
                    "cc_pairs": {
                        "items": {
                            "$ref": "#/components/schemas/ConnectorCredentialPairDescriptor"
                        },
                        "type": "array",
                        "title": "Cc Pairs"
                    },
                    "document_sets": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSet"
                        },
                        "type": "array",
                        "title": "Document Sets"
                    },
                    "personas": {
                        "items": {
                            "$ref": "#/components/schemas/PersonaSnapshot"
                        },
                        "type": "array",
                        "title": "Personas"
                    },
                    "is_up_to_date": {
                        "type": "boolean",
                        "title": "Is Up To Date"
                    },
                    "is_up_for_deletion": {
                        "type": "boolean",
                        "title": "Is Up For Deletion"
                    }
                },
                "type": "object",
                "title": "UserGroup"
            },
            "UserGroupCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "user_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "User Ids"
                    },
                    "cc_pair_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Cc Pair Ids"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "user_ids",
                    "cc_pair_ids"
                ],
                "title": "UserGroupCreate"
            },
            "UserGroupUpdate": {
                "properties": {
                    "user_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "User Ids"
                    },
                    "cc_pair_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Cc Pair Ids"
                    }
                },
                "type": "object",
                "required": [
                    "user_ids",
                    "cc_pair_ids"
                ],
                "title": "UserGroupUpdate"
            },
            "UserInfo": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Is Superuser"
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Is Verified"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "preferences": {
                        "$ref": "#/components/schemas/UserPreferences"
                    },
                    "oidc_expiry": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Oidc Expiry"
                    },
                    "current_token_created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Token Created At"
                    },
                    "current_token_expiry_length": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Token Expiry Length"
                    },
                    "is_cloud_superuser": {
                        "type": "boolean",
                        "title": "Is Cloud Superuser",
                        "default": false
                    },
                    "team_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Team Name"
                    },
                    "is_anonymous_user": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Anonymous User"
                    },
                    "password_configured": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Password Configured"
                    },
                    "tenant_info": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TenantInfo"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "is_active",
                    "is_superuser",
                    "is_verified",
                    "role",
                    "preferences"
                ],
                "title": "UserInfo"
            },
            "UserOAuthStatus": {
                "properties": {
                    "federated_connector_id": {
                        "type": "integer",
                        "title": "Federated Connector Id"
                    },
                    "source": {
                        "$ref": "#/components/schemas/FederatedConnectorSource"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "has_oauth_token": {
                        "type": "boolean",
                        "title": "Has Oauth Token"
                    },
                    "oauth_token_expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Oauth Token Expires At"
                    },
                    "authorize_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Authorize Url"
                    }
                },
                "type": "object",
                "required": [
                    "federated_connector_id",
                    "source",
                    "name",
                    "has_oauth_token"
                ],
                "title": "UserOAuthStatus",
                "description": "OAuth status for a specific user and federated connector"
            },
            "UserPreferences": {
                "properties": {
                    "chosen_assistants": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Chosen Assistants"
                    },
                    "hidden_assistants": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Hidden Assistants",
                        "default": []
                    },
                    "visible_assistants": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Visible Assistants",
                        "default": []
                    },
                    "default_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Model"
                    },
                    "pinned_assistants": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pinned Assistants"
                    },
                    "shortcut_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Shortcut Enabled"
                    },
                    "auto_scroll": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Auto Scroll"
                    },
                    "temperature_override_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature Override Enabled"
                    }
                },
                "type": "object",
                "title": "UserPreferences"
            },
            "UserRead": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Is Superuser",
                        "default": false
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Is Verified",
                        "default": false
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    }
                },
                "type": "object",
                "title": "UserRead"
            },
            "UserResetRequest": {
                "properties": {
                    "user_email": {
                        "type": "string",
                        "title": "User Email"
                    }
                },
                "type": "object",
                "required": [
                    "user_email"
                ],
                "title": "UserResetRequest"
            },
            "UserResetResponse": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "new_password": {
                        "type": "string",
                        "title": "New Password"
                    }
                },
                "type": "object",
                "title": "UserResetResponse"
            },
            "UserRole": {
                "type": "string",
                "enum": [
                    "limited",
                    "basic",
                    "admin",
                    "curator",
                    "global_curator",
                    "slack_user",
                    "ext_perm_user"
                ],
                "title": "UserRole",
                "description": "User roles\n- Basic can't perform any admin actions\n- Admin can perform all admin actions\n- Curator can perform admin actions for\n    groups they are curators of\n- Global Curator can perform admin actions\n    for all groups they are a member of\n- Limited can access a limited set of basic api endpoints\n- Slack are users that have used Onyx via slack but dont have a web login\n- External permissioned users that have been picked up during the external permissions sync process but don't have a web login"
            },
            "UserRoleResponse": {
                "properties": {
                    "role": {
                        "type": "string",
                        "title": "Role"
                    }
                },
                "type": "object",
                "title": "UserRoleResponse"
            },
            "UserRoleUpdateRequest": {
                "properties": {
                    "user_email": {
                        "type": "string",
                        "title": "User Email"
                    },
                    "new_role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "explicit_override": {
                        "type": "boolean",
                        "title": "Explicit Override",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "user_email",
                    "new_role"
                ],
                "title": "UserRoleUpdateRequest"
            },
            "UserSettings": {
                "properties": {
                    "maximum_chat_retention_days": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Maximum Chat Retention Days"
                    },
                    "gpu_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Gpu Enabled"
                    },
                    "application_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ApplicationStatus"
                            }
                        ],
                        "default": "active"
                    },
                    "anonymous_user_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Anonymous User Enabled"
                    },
                    "pro_search_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pro Search Enabled"
                    },
                    "temperature_override_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature Override Enabled",
                        "default": false
                    },
                    "auto_scroll": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Auto Scroll",
                        "default": false
                    },
                    "query_history_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/QueryHistoryType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "image_extraction_and_analysis_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image Extraction And Analysis Enabled",
                        "default": false
                    },
                    "search_time_image_analysis_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Search Time Image Analysis Enabled",
                        "default": false
                    },
                    "image_analysis_max_size_mb": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image Analysis Max Size Mb",
                        "default": 20
                    },
                    "user_knowledge_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Knowledge Enabled",
                        "default": true
                    },
                    "notifications": {
                        "items": {
                            "$ref": "#/components/schemas/Notification"
                        },
                        "type": "array",
                        "title": "Notifications"
                    },
                    "needs_reindexing": {
                        "type": "boolean",
                        "title": "Needs Reindexing"
                    },
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id",
                        "default": "public"
                    }
                },
                "type": "object",
                "required": [
                    "notifications",
                    "needs_reindexing"
                ],
                "title": "UserSettings"
            },
            "UserUpdate": {
                "properties": {
                    "password": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Password"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active"
                    },
                    "is_superuser": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Superuser"
                    },
                    "is_verified": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Verified"
                    }
                },
                "type": "object",
                "title": "UserUpdate",
                "description": "Role updates are not allowed through the user update endpoint for security reasons\nRole changes should be handled through a separate, admin-only process"
            },
            "ValidateToolRequest": {
                "properties": {
                    "definition": {
                        "type": "object",
                        "title": "Definition"
                    }
                },
                "type": "object",
                "required": [
                    "definition"
                ],
                "title": "ValidateToolRequest"
            },
            "ValidateToolResponse": {
                "properties": {
                    "methods": {
                        "items": {
                            "$ref": "#/components/schemas/MethodSpec"
                        },
                        "type": "array",
                        "title": "Methods"
                    }
                },
                "type": "object",
                "title": "ValidateToolResponse"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "VersionResponse": {
                "properties": {
                    "backend_version": {
                        "type": "string",
                        "title": "Backend Version"
                    }
                },
                "type": "object",
                "title": "VersionResponse"
            },
            "VisionProviderResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key"
                    },
                    "api_base": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Base"
                    },
                    "api_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Version"
                    },
                    "custom_config": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Config"
                    },
                    "default_model_name": {
                        "type": "string",
                        "title": "Default Model Name"
                    },
                    "fast_default_model_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Fast Default Model Name"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public",
                        "default": true
                    },
                    "groups": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Groups"
                    },
                    "deployment_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deployment Name"
                    },
                    "default_vision_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Vision Model"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "is_default_provider": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Default Provider"
                    },
                    "is_default_vision_provider": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Default Vision Provider"
                    },
                    "model_configurations": {
                        "items": {
                            "$ref": "#/components/schemas/ModelConfigurationView"
                        },
                        "type": "array",
                        "title": "Model Configurations"
                    },
                    "vision_models": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Vision Models"
                    }
                },
                "type": "object",
                "title": "VisionProviderResponse",
                "description": "Response model for vision providers endpoint, including vision-specific fields."
            },
            "WellKnownLLMProviderDescriptor": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "title": "Display Name"
                    },
                    "api_key_required": {
                        "type": "boolean",
                        "title": "Api Key Required"
                    },
                    "api_base_required": {
                        "type": "boolean",
                        "title": "Api Base Required"
                    },
                    "api_version_required": {
                        "type": "boolean",
                        "title": "Api Version Required"
                    },
                    "custom_config_keys": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/CustomConfigKey"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Config Keys"
                    },
                    "model_configurations": {
                        "items": {
                            "$ref": "#/components/schemas/ModelConfigurationView"
                        },
                        "type": "array",
                        "title": "Model Configurations"
                    },
                    "default_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Model"
                    },
                    "default_fast_model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Fast Model"
                    },
                    "deployment_name_required": {
                        "type": "boolean",
                        "title": "Deployment Name Required",
                        "default": false
                    },
                    "single_model_supported": {
                        "type": "boolean",
                        "title": "Single Model Supported",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "display_name",
                    "api_key_required",
                    "api_base_required",
                    "api_version_required",
                    "model_configurations"
                ],
                "title": "WellKnownLLMProviderDescriptor"
            },
            "onyx__server__features__folder__models__FolderCreationRequest": {
                "properties": {
                    "folder_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Name"
                    }
                },
                "type": "object",
                "title": "FolderCreationRequest"
            },
            "onyx__server__features__folder__models__FolderUpdateRequest": {
                "properties": {
                    "folder_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Name"
                    }
                },
                "type": "object",
                "title": "FolderUpdateRequest"
            },
            "onyx__server__features__folder__models__UserFolderSnapshot": {
                "properties": {
                    "folder_id": {
                        "type": "integer",
                        "title": "Folder Id"
                    },
                    "folder_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Name"
                    },
                    "display_priority": {
                        "type": "integer",
                        "title": "Display Priority"
                    },
                    "chat_sessions": {
                        "items": {
                            "$ref": "#/components/schemas/ChatSessionDetails"
                        },
                        "type": "array",
                        "title": "Chat Sessions"
                    }
                },
                "type": "object",
                "required": [
                    "folder_id",
                    "folder_name",
                    "display_priority",
                    "chat_sessions"
                ],
                "title": "UserFolderSnapshot"
            },
            "onyx__server__user_documents__api__FolderCreationRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description"
                ],
                "title": "FolderCreationRequest"
            },
            "onyx__server__user_documents__api__FolderUpdateRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    }
                },
                "type": "object",
                "title": "FolderUpdateRequest"
            },
            "onyx__server__user_documents__models__UserFolderSnapshot": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/UserFileSnapshot"
                        },
                        "type": "array",
                        "title": "Files"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    },
                    "assistant_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Assistant Ids",
                        "default": []
                    },
                    "token_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token Count"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "description",
                    "files",
                    "created_at",
                    "user_id",
                    "token_count"
                ],
                "title": "UserFolderSnapshot"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}